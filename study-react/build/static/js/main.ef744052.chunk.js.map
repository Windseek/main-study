{"version":3,"sources":["react/packages/shared/invariant.js","react/packages/shared/warningWithoutStack.js","react/packages/shared/ReactFeatureFlags.js","react/packages/shared/warning.js","react/packages/shared/ReactSymbols.js","react/packages/shared/getComponentName.js","../node_modules/scheduler/index.js","../node_modules/scheduler/tracing.js","react/packages/shared/ReactSharedInternals.js","../node_modules/prop-types/checkPropTypes.js","react/packages/react-reconciler/src/ReactFiberInstrumentation.js","react/packages/shared/ReactLazyComponent.js","react/packages/react/src/ReactDebugCurrentFrame.js","react/packages/react/index.js","react/packages/shared/lowPriorityWarning.js","react/packages/react/src/ReactCurrentOwner.js","react/packages/react/src/ReactSharedInternals.js","react/packages/shared/ReactVersion.js","react/packages/react/src/ReactCurrentDispatcher.js","react/packages/shared/describeComponentFrame.js","../node_modules/object-assign/index.js","react/packages/react-dom/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/cjs/scheduler-tracing.production.min.js","logo.svg","react/packages/react-dom/src/shared/checkReact.js","react/packages/shared/invokeGuardedCallbackImpl.js","react/packages/shared/ReactErrorUtils.js","react/packages/events/EventPluginRegistry.js","react/packages/events/EventPluginUtils.js","react/packages/events/accumulateInto.js","react/packages/events/forEachAccumulated.js","react/packages/events/EventPluginHub.js","react/packages/shared/ReactWorkTags.js","react/packages/react-dom/src/client/ReactDOMComponentTree.js","react/packages/shared/ReactTreeTraversal.js","react/packages/events/EventPropagators.js","react/packages/shared/ExecutionEnvironment.js","react/packages/react-dom/src/events/getVendorPrefixedEventName.js","react/packages/react-dom/src/events/DOMTopLevelEventTypes.js","react/packages/react-dom/src/events/FallbackCompositionState.js","react/packages/events/SyntheticEvent.js","react/packages/react-dom/src/events/SyntheticCompositionEvent.js","react/packages/react-dom/src/events/SyntheticInputEvent.js","react/packages/react-dom/src/events/BeforeInputEventPlugin.js","react/packages/events/ReactControlledComponent.js","react/packages/events/ReactGenericBatching.js","react/packages/shared/isTextInputElement.js","react/packages/react-dom/src/shared/HTMLNodeType.js","react/packages/react-dom/src/events/getEventTarget.js","react/packages/react-dom/src/events/isEventSupported.js","react/packages/react-dom/src/client/inputValueTracking.js","react/packages/react-reconciler/src/ReactCurrentFiber.js","react/packages/react-dom/src/shared/DOMProperty.js","react/packages/react-dom/src/client/DOMPropertyOperations.js","react/packages/react-dom/src/client/ToStringValue.js","react/packages/react-dom/src/shared/ReactControlledValuePropTypes.js","react/packages/react-dom/src/client/ReactDOMInput.js","react/packages/react-dom/src/events/ChangeEventPlugin.js","react/packages/react-dom/src/events/DOMEventPluginOrder.js","react/packages/react-dom/src/events/SyntheticUIEvent.js","react/packages/react-dom/src/events/getEventModifierState.js","react/packages/react-dom/src/events/SyntheticMouseEvent.js","react/packages/react-dom/src/events/SyntheticPointerEvent.js","react/packages/react-dom/src/events/EnterLeaveEventPlugin.js","react/packages/shared/objectIs.js","react/packages/shared/shallowEqual.js","react/packages/shared/ReactInstanceMap.js","react/packages/shared/ReactSideEffectTags.js","react/packages/react-reconciler/src/ReactFiberTreeReflection.js","react/packages/react-dom/src/events/SyntheticAnimationEvent.js","react/packages/react-dom/src/events/SyntheticClipboardEvent.js","react/packages/react-dom/src/events/SyntheticFocusEvent.js","react/packages/react-dom/src/events/getEventCharCode.js","react/packages/react-dom/src/events/getEventKey.js","react/packages/react-dom/src/events/SyntheticKeyboardEvent.js","react/packages/react-dom/src/events/SyntheticDragEvent.js","react/packages/react-dom/src/events/SyntheticTouchEvent.js","react/packages/react-dom/src/events/SyntheticTransitionEvent.js","react/packages/react-dom/src/events/SyntheticWheelEvent.js","react/packages/react-dom/src/events/SimpleEventPlugin.js","react/packages/react-dom/src/events/ReactDOMEventListener.js","react/packages/react-dom/src/events/EventListener.js","react/packages/react-dom/src/events/ReactBrowserEventEmitter.js","react/packages/react-dom/src/client/getActiveElement.js","react/packages/react-dom/src/client/getNodeForCharacterOffset.js","react/packages/react-dom/src/client/ReactDOMSelection.js","react/packages/react-dom/src/client/ReactInputSelection.js","react/packages/react-dom/src/events/SelectEventPlugin.js","react/packages/react-dom/src/client/ReactDOMClientInjection.js","react/packages/react-dom/src/client/ReactDOMOption.js","react/packages/react-dom/src/client/ReactDOMSelect.js","react/packages/react-dom/src/client/ReactDOMTextarea.js","react/packages/react-dom/src/shared/DOMNamespaces.js","react/packages/react-dom/src/client/setInnerHTML.js","react/packages/react-dom/src/shared/createMicrosoftUnsafeLocalFunction.js","react/packages/react-dom/src/client/setTextContent.js","react/packages/react-dom/src/shared/CSSShorthandProperty.js","react/packages/react-dom/src/shared/CSSProperty.js","react/packages/react-dom/src/shared/dangerousStyleValue.js","react/packages/react-dom/src/shared/hyphenateStyleName.js","react/packages/react-dom/src/shared/warnValidStyle.js","react/packages/react-dom/src/shared/CSSPropertyOperations.js","react/packages/react-dom/src/shared/voidElementTags.js","react/packages/react-dom/src/shared/omittedCloseTags.js","react/packages/react-dom/src/shared/assertValidProps.js","react/packages/react-dom/src/shared/isCustomComponent.js","react/packages/react-dom/src/shared/possibleStandardNames.js","react/packages/react-dom/src/shared/validAriaProperties.js","react/packages/react-dom/src/shared/ReactDOMInvalidARIAHook.js","react/packages/react-dom/src/shared/ReactDOMNullInputValuePropHook.js","react/packages/react-dom/src/shared/ReactDOMUnknownPropertyHook.js","react/packages/react-dom/src/client/ReactDOMComponent.js","react/packages/react-dom/src/client/validateDOMNesting.js","react/packages/shared/HostConfigWithNoPersistence.js","react/packages/react-dom/src/client/ReactDOMHostConfig.js","react/packages/react-reconciler/src/ReactDebugFiberPerf.js","react/packages/react-reconciler/src/ReactFiberStack.js","react/packages/react-reconciler/src/ReactFiberContext.js","react/packages/react-reconciler/src/ReactFiberDevToolsHook.js","react/packages/react-reconciler/src/maxSigned31BitInt.js","react/packages/react-reconciler/src/ReactFiberExpirationTime.js","react/packages/react-reconciler/src/ReactTypeOfMode.js","react/packages/react-reconciler/src/ReactFiber.js","react/packages/react-reconciler/src/ReactFiberRoot.js","react/packages/react-reconciler/src/ReactStrictModeWarnings.js","react/packages/react-reconciler/src/ReactFiberPendingPriority.js","react/packages/react-reconciler/src/ReactFiberLazyComponent.js","react/packages/react-reconciler/src/ReactFiberClassComponent.js","react/packages/react-reconciler/src/ReactChildFiber.js","react/packages/react-reconciler/src/ReactFiberHostContext.js","react/packages/react-reconciler/src/ReactHookEffectTags.js","react/packages/react-reconciler/src/ReactFiberHooks.js","react/packages/react-reconciler/src/ReactFiberScheduler.js","react/packages/react-reconciler/src/ReactProfilerTimer.js","react/packages/react-reconciler/src/ReactFiberHydrationContext.js","react/packages/react-reconciler/src/ReactFiberBeginWork.js","react/packages/react-reconciler/src/ReactFiberNewContext.js","react/packages/react-reconciler/src/ReactUpdateQueue.js","react/packages/react-reconciler/src/ReactFiberCompleteWork.js","react/packages/react-reconciler/src/ReactCapturedValue.js","react/packages/react-reconciler/src/ReactFiberSuspenseComponent.js","react/packages/react-reconciler/src/ReactFiberCommitWork.js","react/packages/react-reconciler/src/ReactFiberErrorLogger.js","react/packages/react-reconciler/src/ReactFiberUnwindWork.js","react/packages/react-reconciler/src/ReactFiberReconciler.js","react/packages/react-dom/src/client/ReactDOM.js","react/packages/shared/ReactPortal.js","react/packages/react/src/ReactNoopUpdateQueue.js","react/packages/react/src/ReactBaseClasses.js","react/packages/react/src/ReactElement.js","react/packages/react/src/ReactChildren.js","react/packages/shared/isValidElementType.js","react/packages/react/src/ReactHooks.js","react/packages/react/src/ReactElementValidator.js","react/packages/react/src/React.js","react/packages/react/src/ReactCreateRef.js","react/packages/react/src/ReactContext.js","react/packages/react/src/forwardRef.js","react/packages/react/src/ReactLazy.js","react/packages/react/src/memo.js","App.js","serviceWorker.js","index.js"],"names":["validateFormat","invariant","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","warningWithoutStack","length","console","argsWithFormat","map","item","unshift","Function","prototype","apply","call","message","x","enableUserTimingAPI","__DEV__","debugRenderPhaseSideEffects","debugRenderPhaseSideEffectsForStrictMode","replayFailedUnitOfWorkWithInvokeGuardedCallback","warnAboutDeprecatedLifecycles","enableProfilerTimer","__PROFILE__","enableSchedulerTracing","enableSuspenseServerRenderer","disableInputAttributeSyncing","enableStableConcurrentModeAPIs","warnAboutShorthandPropertyCollision","warning","stack","ReactSharedInternals","ReactDebugCurrentFrame","getStackAddendum","hasSymbol","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_CONCURRENT_MODE_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getComponentName","type","tag","displayName","$$typeof","outerType","innerType","wrapperName","functionName","getWrappedName","render","thenable","resolvedThenable","refineResolvedLazyComponent","module","exports","require","hasOwnProperty","ReactCurrentDispatcher","current","checkPropTypes","typeSpecs","values","location","componentName","getStack","resetWarningCache","process","debugTool","Pending","Resolved","Rejected","lazyComponent","_status","_result","currentlyValidatingElement","setCurrentlyValidatingElement","element","getCurrentStack","owner","_owner","describeComponentFrame","_source","impl","React","default","lowPriorityWarning","printWarning","warn","ReactCurrentOwner","assign","Object","Scheduler","unstable_cancelCallback","unstable_shouldYield","unstable_now","unstable_scheduleCallback","unstable_runWithPriority","unstable_next","unstable_wrapCallback","unstable_getFirstCallbackNode","unstable_pauseExecution","unstable_continueExecution","unstable_getCurrentPriorityLevel","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_UserBlockingPriority","SchedulerTracing","__interactionsRef","__subscriberRef","unstable_clear","unstable_getCurrent","unstable_getThreadID","unstable_subscribe","unstable_trace","unstable_unsubscribe","unstable_wrap","ReactComponentTreeHook","BEFORE_SLASH_RE","source","ownerName","sourceInfo","path","fileName","test","match","pathBeforeSlash","lineNumber","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","val","TypeError","test1","String","getOwnPropertyNames","test2","i","fromCharCode","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","from","symbols","to","s","arguments","key","ReactDOM","g","h","k","l","defineProperty","value","window","MessageChannel","p","q","t","setTimeout","u","Date","now","clearTimeout","unstable_forceFrameRate","w","performance","y","z","A","cancelAnimationFrame","requestAnimationFrame","B","C","D","E","F","G","Math","floor","H","I","port2","port1","onmessage","postMessage","J","push","K","L","M","pop","m","v","r","sortIndex","id","N","O","P","Q","R","S","T","U","V","callback","startTime","expirationTime","W","X","priorityLevel","Y","Z","delay","timeout","this","unstable_requestPaint","unstable_Profiling","invokeGuardedCallbackImpl","func","context","funcArgs","Array","slice","onError","dispatchEvent","document","createEvent","fakeNode","createElement","evt","didError","windowEvent","event","windowEventDescriptor","getOwnPropertyDescriptor","callCallback","removeEventListener","evtType","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","_suppressLogging","inner","addEventListener","initEvent","hasError","caughtError","hasRethrowError","rethrowError","reporter","invokeGuardedCallback","hasCaughtError","clearCaughtError","eventPluginOrder","namesToPlugins","recomputePluginOrdering","pluginName","pluginModule","pluginIndex","indexOf","plugins","extractEvents","publishedEvents","eventTypes","eventName","publishEventForPlugin","dispatchConfig","eventNameDispatchConfigs","phasedRegistrationNames","phaseName","publishRegistrationName","registrationName","registrationNameModules","registrationNameDependencies","dependencies","lowerCasedName","toLowerCase","possibleRegistrationNames","ondblclick","validateEventDispatches","getFiberCurrentPropsFromNode","getInstanceFromNode","getNodeFromInstance","executeDispatch","listener","inst","currentTarget","invokeGuardedCallbackAndCatchFirstError","dispatchListeners","_dispatchListeners","dispatchInstances","_dispatchInstances","listenersIsArr","isArray","listenersLen","instancesIsArr","instancesLen","accumulateInto","next","concat","forEachAccumulated","arr","cb","scope","eventQueue","executeDispatchesAndRelease","isPropagationStopped","executeDispatchesInOrder","isPersistent","constructor","release","executeDispatchesAndReleaseTopLevel","injection","injectEventPluginOrder","injectedEventPluginOrder","injectEventPluginsByName","injectedNamesToPlugins","isOrderingDirty","getListener","stateNode","props","disabled","shouldPreventMouseEvent","runEventsInBatch","events","processingEventQueue","rethrowCaughtError","runExtractedEventsInBatch","topLevelType","targetInst","nativeEvent","nativeEventTarget","possiblePlugin","extractedEvents","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedSuspenseComponent","randomKey","random","toString","internalInstanceKey","internalEventHandlersKey","precacheFiberNode","hostInst","node","getClosestInstanceFromNode","parentNode","updateFiberProps","getParent","return","traverseTwoPhase","fn","arg","traverseEnterLeave","argFrom","argTo","common","instA","instB","depthA","tempA","depthB","tempB","depth","alternate","getLowestCommonAncestor","pathFrom","pathTo","accumulateDirectionalDispatches","phase","propagationPhase","listenerAtPhase","accumulateTwoPhaseDispatchesSingle","_targetInst","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateTwoPhaseDispatches","canUseDOM","makePrefixMap","styleProp","prefixes","vendorPrefixes","animationend","animationiteration","animationstart","transitionend","prefixedEventNames","style","animation","transition","getVendorPrefixedEventName","prefixMap","TOP_ANIMATION_END","TOP_ANIMATION_ITERATION","TOP_ANIMATION_START","TOP_BLUR","TOP_CANCEL","TOP_CHANGE","TOP_CLICK","TOP_CLOSE","TOP_COMPOSITION_END","TOP_COMPOSITION_START","TOP_COMPOSITION_UPDATE","TOP_ERROR","TOP_FOCUS","TOP_INPUT","TOP_INVALID","TOP_KEY_DOWN","TOP_KEY_PRESS","TOP_KEY_UP","TOP_LOAD","TOP_MOUSE_DOWN","TOP_PASTE","TOP_RESET","TOP_SCROLL","TOP_SELECTION_CHANGE","TOP_SUBMIT","TOP_TEXT_INPUT","TOP_TOGGLE","TOP_TRANSITION_END","mediaEventTypes","root","startText","fallbackText","getData","start","startValue","startLength","end","endValue","getText","endLength","minEnd","sliceTail","textContent","EVENT_POOL_SIZE","EventInterface","eventPhase","bubbles","cancelable","timeStamp","isTrusted","functionThatReturnsTrue","functionThatReturnsFalse","SyntheticEvent","preventDefault","stopPropagation","isDefaultPrevented","Interface","propName","normalize","returnValue","getPooledWarningPropertyDefinition","getVal","isFunction","configurable","set","get","action","result","getPooledEvent","nativeInst","EventConstructor","eventPool","instance","releasePooledEvent","destructor","addEventPoolingTo","getPooled","cancelBubble","persist","extend","Super","Class","SyntheticCompositionEvent","data","SyntheticInputEvent","END_KEYCODES","START_KEYCODE","canUseCompositionEvent","documentMode","canUseTextInputEvent","useFallbackCompositionData","SPACEBAR_CODE","SPACEBAR_CHAR","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","hasSpaceKeypress","isFallbackCompositionEnd","keyCode","getDataFromCustomEvent","detail","isUsingKoreanIME","locale","isComposing","extractCompositionEvent","eventType","fallbackData","getCompositionEventType","isFallbackCompositionStart","FallbackCompositionStateGetData","FallbackCompositionStateInitialize","customData","getFallbackBeforeInputChars","chars","ctrlKey","altKey","metaKey","isKeypressCommand","char","which","extractBeforeInputEvent","getNativeBeforeInputChars","BeforeInputEventPlugin","composition","restoreImpl","restoreTarget","restoreQueue","restoreStateOfTarget","internalInstance","enqueueStateRestore","restoreStateIfNeeded","queuedTargets","_batchedUpdatesImpl","bookkeeping","_interactiveUpdatesImpl","_flushInteractiveUpdatesImpl","isBatching","batchedUpdates","supportedInputTypes","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","isTextInputElement","elem","nodeName","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","getEventTarget","srcElement","correspondingUseElement","nodeType","isEventSupported","eventNameSuffix","isSupported","setAttribute","isCheckable","getTracker","_valueTracker","track","valueField","descriptor","currentValue","enumerable","getValue","setValue","stopTracking","detachTracker","trackValueOnNode","updateValueIfChanged","tracker","lastValue","nextValue","checked","getValueFromNode","describeFiber","fiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","workInProgress","info","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","setCurrentFiber","setCurrentPhase","lifeCyclePhase","RESERVED","BOOLEANISH_STRING","BOOLEAN","OVERLOADED_BOOLEAN","NUMERIC","POSITIVE_NUMERIC","ATTRIBUTE_NAME_START_CHAR","ATTRIBUTE_NAME_CHAR","ROOT_ATTRIBUTE_NAME","VALID_ATTRIBUTE_NAME_REGEX","RegExp","illegalAttributeNameCache","validatedAttributeNameCache","isAttributeNameSafe","attributeName","shouldIgnoreAttribute","propertyInfo","isCustomComponentTag","shouldRemoveAttributeWithWarning","acceptsBooleans","prefix","shouldRemoveAttribute","isNaN","getPropertyInfo","properties","PropertyInfoRecord","mustUseProperty","attributeNamespace","propertyName","CAMELIZE","capitalize","token","toUpperCase","getValueForProperty","expected","stringValue","hasAttribute","getAttribute","getValueForAttribute","setValueForProperty","removeAttribute","attributeValue","setAttributeNS","getToStringValue","ReactControlledValuePropTypes","hasReadOnlyValue","button","checkbox","image","hidden","radio","reset","submit","propTypes","onChange","readOnly","tagName","didWarnValueDefaultValue","didWarnCheckedDefaultChecked","didWarnControlledToUncontrolled","didWarnUncontrolledToControlled","isControlled","getHostProps","defaultChecked","defaultValue","_wrapperState","initialChecked","initWrapperState","initialValue","controlled","updateChecked","updateWrapper","setDefaultValue","postMountWrapper","isHydrating","isButton","restoreControlledState","rootNode","queryRoot","group","querySelectorAll","JSON","stringify","otherNode","form","otherProps","updateNamedCousins","ownerDocument","activeElement","change","createAndAccumulateChangeEvent","activeElementInst","runEventInBatch","getInstIfValueChanged","getTargetInstForChangeEvent","isInputEventSupported","stopWatchingForValueChange","detachEvent","handlePropertyChange","manualDispatchChangeEvent","handleEventsForInputEventPolyfill","attachEvent","startWatchingForValueChange","getTargetInstForInputEventPolyfill","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","ChangeEventPlugin","_isInputEventSupported","targetNode","getTargetInstFunc","handleEventFunc","shouldUseChangeEvent","shouldUseClickEvent","state","handleControlledInputBlur","DOMEventPluginOrder","SyntheticUIEvent","view","modifierKeyToProp","Alt","Control","Meta","Shift","modifierStateGetter","keyArg","getModifierState","keyProp","getEventModifierState","previousScreenX","previousScreenY","isMovementXSet","isMovementYSet","SyntheticMouseEvent","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","buttons","relatedTarget","fromElement","toElement","movementX","movementY","SyntheticPointerEvent","pointerId","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","mouseEnter","mouseLeave","pointerEnter","pointerLeave","EnterLeaveEventPlugin","isOverEvent","isOutEvent","win","eventInterface","leaveEventType","enterEventType","eventTypePrefix","doc","defaultView","parentWindow","related","fromNode","toNode","leave","enter","accumulateEnterLeaveDispatches","is","shallowEqual","objA","objB","keysA","keysB","_reactInternalFiber","NoEffect","PerformedWork","Placement","Update","PlacementAndUpdate","Deletion","ContentReset","Callback","DidCapture","Ref","Snapshot","Passive","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","MOUNTING","MOUNTED","UNMOUNTED","isFiberMountedImpl","effectTag","isFiberMounted","assertIsMounted","findCurrentFiberUsingSlowPath","parentA","parentB","child","sibling","didFindChild","findCurrentHostFiber","parent","currentParent","SyntheticAnimationEvent","animationName","elapsedTime","pseudoElement","SyntheticClipboardEvent","clipboardData","SyntheticFocusEvent","getEventCharCode","charCode","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","getEventKey","SyntheticKeyboardEvent","repeat","SyntheticDragEvent","dataTransfer","SyntheticTouchEvent","touches","targetTouches","changedTouches","SyntheticTransitionEvent","SyntheticWheelEvent","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","nonInteractiveEventTypeNames","DOMTopLevelEventTypes","topLevelEventsToDispatchConfig","addEventTypeNameToConfig","topEvent","isInteractive","onEvent","eventTuple","knownHTMLTopLevelTypes","SimpleEventPlugin","isInteractiveTopLevelEventType","config","CALLBACK_BOOKKEEPING_POOL_SIZE","callbackBookkeepingPool","findRootContainerNode","containerInfo","handleTopLevel","bookKeeping","ancestor","ancestors","_enabled","setEnabled","enabled","trapBubbledEvent","addEventBubbleListener","dispatchInteractiveEvent","bind","trapCapturedEvent","addEventCaptureListener","getTopLevelCallbackBookKeeping","alreadyListeningTo","reactTopListenersCounter","topListenersIDKey","getListeningForDocument","mountAt","getActiveElement","body","getLeafNode","firstChild","getSiblingNode","nextSibling","getNodeForCharacterOffset","offset","nodeStart","nodeEnd","getOffsets","outerNode","selection","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","indexWithinAnchor","indexWithinFocus","outer","nodeValue","getModernOffsetsFromPoints","isTextNode","isInDocument","containsNode","innerNode","contains","compareDocumentPosition","documentElement","isSameOriginFrame","iframe","contentWindow","href","getActiveElementDeep","HTMLIFrameElement","hasSelectionCapabilities","contentEditable","restoreSelection","priorSelectionInformation","curFocusedElem","priorFocusedElem","focusedElem","priorSelectionRange","selectionRange","input","offsets","selectionStart","selectionEnd","min","temp","startMarker","endMarker","createRange","setStart","removeAllRanges","addRange","setEnd","setOffsets","setSelection","left","scrollLeft","top","scrollTop","focus","skipSelectionChangeEvent","select","lastSelection","mouseDown","getEventTargetDocument","eventTarget","constructSelectEvent","currentSelection","syntheticEvent","SelectEventPlugin","isListening","dependency","isListeningToAllDependencies","EventPluginHubInjection","didWarnSelectedSetOnOption","didWarnInvalidChild","validateProps","children","Children","selected","hostProps","content","flattenChildren","getDeclarationErrorAddendum","valuePropNames","updateOptions","multiple","propValue","setDefaultSelected","options","selectedValues","selectedValue","defaultSelected","checkSelectPropTypes","wasMultiple","didWarnValDefaultVal","dangerouslySetInnerHTML","newValue","HTML_NAMESPACE","MATH_NAMESPACE","SVG_NAMESPACE","Namespaces","html","mathml","svg","getIntrinsicNamespace","getChildNamespace","parentNamespace","reusableSVGContainer","setInnerHTML","MSApp","execUnsafeLocalFunction","arg0","arg1","arg2","arg3","createMicrosoftUnsafeLocalFunction","namespaceURI","innerHTML","svgNode","removeChild","appendChild","setTextContent","lastChild","shorthandToLonghand","background","backgroundPosition","border","borderBlockEnd","borderBlockStart","borderBottom","borderColor","borderImage","borderInlineEnd","borderInlineStart","borderLeft","borderRadius","borderRight","borderStyle","borderTop","borderWidth","columnRule","columns","flex","flexFlow","font","fontVariant","gap","grid","gridArea","gridColumn","gridColumnGap","gridGap","gridRow","gridRowGap","gridTemplate","listStyle","margin","marker","mask","maskPosition","outline","overflow","padding","placeContent","placeItems","placeSelf","textDecoration","textEmphasis","wordWrap","isUnitlessNumber","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRowEnd","gridRowSpan","gridRowStart","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prop","charAt","substring","prefixKey","dangerousStyleValue","isCustomProperty","trim","uppercasePattern","msPattern","warnValidStyle","badVendoredStyleNamePattern","hyphenPattern","badStyleValueWithSemicolonPattern","warnedStyleNames","warnedStyleValues","warnedForNaNValue","warnedForInfinityValue","camelize","string","_","character","warnHyphenatedStyleName","warnBadVendoredStyleName","warnStyleValueWithSemicolon","warnStyleValueIsNaN","warnStyleValueIsInfinity","isFinite","createDangerousStringForStyles","styles","serialized","delimiter","styleName","styleValue","setValueForStyles","setProperty","expandShorthandMap","expanded","longhands","voidElementTags","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","wbr","HTML","assertValidProps","suppressContentEditableWarning","isCustomComponent","possibleStandardNames","accept","acceptcharset","accesskey","allowfullscreen","alt","as","async","autocapitalize","autocomplete","autocorrect","autofocus","autoplay","autosave","capture","cellpadding","cellspacing","challenge","charset","cite","class","classid","classname","cols","colspan","contenteditable","contextmenu","controls","controlslist","coords","crossorigin","dangerouslysetinnerhtml","defaultchecked","defaultvalue","defer","dir","download","draggable","enctype","formmethod","formaction","formenctype","formnovalidate","formtarget","frameborder","headers","high","hreflang","htmlfor","httpequiv","icon","innerhtml","inputmode","integrity","itemid","itemprop","itemref","itemscope","itemtype","keyparams","keytype","kind","label","lang","list","loop","low","manifest","marginwidth","marginheight","max","maxlength","media","mediagroup","method","minlength","muted","nomodule","nonce","novalidate","open","optimum","pattern","placeholder","playsinline","poster","preload","profile","radiogroup","readonly","referrerpolicy","rel","required","reversed","role","rows","rowspan","sandbox","scoped","scrolling","seamless","shape","size","sizes","span","spellcheck","src","srcdoc","srclang","srcset","step","summary","tabindex","title","usemap","wmode","wrap","about","accentheight","accumulate","additive","alignmentbaseline","allowreorder","alphabetic","amplitude","arabicform","ascent","attributename","attributetype","autoreverse","azimuth","basefrequency","baselineshift","baseprofile","bbox","begin","bias","by","calcmode","capheight","clip","clippath","clippathunits","cliprule","colorinterpolation","colorinterpolationfilters","colorprofile","colorrendering","contentscripttype","contentstyletype","cursor","cx","cy","datatype","decelerate","descent","diffuseconstant","direction","display","divisor","dominantbaseline","dur","dx","dy","edgemode","elevation","enablebackground","exponent","externalresourcesrequired","fill","fillopacity","fillrule","filter","filterres","filterunits","floodopacity","floodcolor","focusable","fontfamily","fontsize","fontsizeadjust","fontstretch","fontstyle","fontvariant","fontweight","fx","fy","g1","g2","glyphname","glyphorientationhorizontal","glyphorientationvertical","glyphref","gradienttransform","gradientunits","hanging","horizadvx","horizoriginx","ideographic","imagerendering","in2","in","inlist","intercept","k1","k2","k3","k4","kernelmatrix","kernelunitlength","kerning","keypoints","keysplines","keytimes","lengthadjust","letterspacing","lightingcolor","limitingconeangle","local","markerend","markerheight","markermid","markerstart","markerunits","markerwidth","maskcontentunits","maskunits","mathematical","mode","numoctaves","operator","orient","orientation","origin","overlineposition","overlinethickness","paintorder","panose1","pathlength","patterncontentunits","patterntransform","patternunits","pointerevents","points","pointsatx","pointsaty","pointsatz","preservealpha","preserveaspectratio","primitiveunits","property","radius","refx","refy","renderingintent","repeatcount","repeatdur","requiredextensions","requiredfeatures","resource","restart","results","rotate","rx","ry","scale","security","seed","shaperendering","slope","spacing","specularconstant","specularexponent","speed","spreadmethod","startoffset","stddeviation","stemh","stemv","stitchtiles","stopcolor","stopopacity","strikethroughposition","strikethroughthickness","stroke","strokedasharray","strokedashoffset","strokelinecap","strokelinejoin","strokemiterlimit","strokewidth","strokeopacity","suppresscontenteditablewarning","suppresshydrationwarning","surfacescale","systemlanguage","tablevalues","targetx","targety","textanchor","textdecoration","textlength","textrendering","transform","typeof","u1","u2","underlineposition","underlinethickness","unicode","unicodebidi","unicoderange","unitsperem","unselectable","valphabetic","vectoreffect","version","vertadvy","vertoriginx","vertoriginy","vhanging","videographic","viewbox","viewtarget","visibility","vmathematical","vocab","widths","wordspacing","writingmode","x1","x2","xchannelselector","xheight","xlinkactuate","xlinkarcrole","xlinkhref","xlinkrole","xlinkshow","xlinktitle","xlinktype","xmlbase","xmllang","xmlns","xmlnsxlink","xmlspace","y1","y2","ychannelselector","zoomandpan","ariaProperties","warnedProperties","rARIA","rARIACamel","validateProperty","ariaName","correctName","validAriaProperties","standardName","validateProperties","invalidProps","unknownPropString","warnInvalidARIAProps","didWarnValueNull","EVENT_NAME_REGEX","INVALID_EVENT_NAME_REGEX","canUseEventSystem","isReserved","warnUnknownProperties","unknownProps","didWarnInvalidHydration","didWarnShadyDOM","DANGEROUSLY_SET_INNER_HTML","SUPPRESS_CONTENT_EDITABLE_WARNING","SUPPRESS_HYDRATION_WARNING","AUTOFOCUS","CHILDREN","STYLE","warnedUnknownTags","suppressHydrationWarning","validatePropertiesInDevelopment","warnForTextDifference","warnForPropDifference","warnForExtraAttributes","warnForInvalidEventListener","canDiffStyleForHydrationWarning","normalizeMarkupForTextOrAttribute","normalizeHTML","dialog","webview","validateARIAProperties","validateInputProperties","validateUnknownProperties","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","markup","serverText","clientText","normalizedClientText","normalizedServerText","serverValue","clientValue","normalizedClientValue","normalizedServerValue","attributeNames","names","testElement","createElementNS","ensureListeningTo","rootContainerElement","listenTo","getOwnerDocumentFromRootContainer","noop","trapClickOnNonInteractiveElement","onclick","setInitialProperties","domElement","rawProps","shadyRoot","ReactDOMInputInitWrapperState","ReactDOMInputGetHostProps","ReactDOMOptionValidateProps","ReactDOMOptionGetHostProps","ReactDOMSelectInitWrapperState","ReactDOMSelectGetHostProps","ReactDOMTextareaInitWrapperState","ReactDOMTextareaGetHostProps","nextProps","propKey","nextProp","freeze","nextHtml","setInitialDOMProperties","ReactDOMInputPostMountWrapper","ReactDOMTextareaPostMountWrapper","ReactDOMOptionPostMountWrapper","ReactDOMSelectPostMountWrapper","onClick","diffProperties","lastRawProps","nextRawProps","lastProps","updatePayload","styleUpdates","lastStyle","lastProp","lastHtml","nextStyles","expandedUpdates","expandedStyles","warnedAbout","originalKey","correctOriginalKey","warningKey","validateShorthandPropertyCollisionInDev","updateProperties","ReactDOMInputUpdateChecked","wasCustomComponentTag","updateDOMProperties","ReactDOMInputUpdateWrapper","ReactDOMTextareaUpdateWrapper","ReactDOMSelectPostUpdateWrapper","getPossibleStandardName","warnForUnmatchedText","textNode","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","validateDOMNesting","updatedAncestorInfo","specialTags","inScopeTags","buttonScopeTags","impliedEndTags","emptyAncestorInfo","formTag","aTagInScope","buttonTagInScope","nobrTagInScope","pTagInButtonScope","listItemTagAutoclosing","dlItemTagAutoclosing","oldInfo","ancestorInfo","isTagValidWithParent","parentTag","findInvalidAncestorForTag","didWarn","childTag","childText","parentInfo","invalidParent","invalidAncestor","invalidParentOrAncestor","ancestorTag","addendum","warnKey","tagDisplayName","whitespaceInfo","shim","supportsPersistence","cloneInstance","createContainerChildSet","appendChildToContainerChildSet","finalizeContainerChildren","replaceContainerChildren","cloneHiddenInstance","cloneUnhiddenInstance","createHiddenTextInstance","SUSPENSE_START_DATA","SUSPENSE_END_DATA","eventsEnabled","selectionInformation","shouldAutoFocusHostComponent","autoFocus","prepareForCommit","getSelectionInformation","ReactBrowserEventEmitterSetEnabled","createInstance","rootContainerInstance","hostContext","internalInstanceHandle","hostContextDev","ownAncestorInfo","namespace","div","appendInitialChild","parentInstance","finalizeInitialChildren","prepareUpdate","oldProps","newProps","shouldSetTextContent","__html","createTextInstance","createTextNode","isPrimaryRenderer","scheduleTimeout","cancelTimeout","noTimeout","schedulePassiveEffects","scheduleDeferredCallback","cancelPassiveEffects","cancelDeferredCallback","supportsMutation","resetTextContent","appendChildToContainer","container","insertBefore","reactRootContainer","_reactRootContainer","beforeChild","clearSuspenseBoundary","suspenseInstance","nextNode","clearSuspenseBoundaryFromContainer","hideInstance","unhideInstance","unhideTextInstance","textInstance","supportsHydration","getNextHydratableSibling","getFirstHydratableChild","hydrateInstance","extraAttributeNames","Set","attributes","add","serverHTML","expectedHTML","delete","expectedStyle","isMismatchDueToBadCasing","ownNamespace","diffHydratedProperties","supportsUserTiming","mark","clearMarks","measure","clearMeasures","currentFiber","currentPhase","currentPhaseFiber","isCommitting","hasScheduledUpdateInCurrentCommit","hasScheduledUpdateInCurrentPhase","commitCountInCurrentWorkLoop","effectCountInCurrentCommit","isWaitingForCallback","labelsInCurrentCommit","formatMarkName","markName","beginMark","endMark","formattedMarkName","formattedLabel","formatLabel","getFiberMarkName","debugID","getFiberLabel","isMounted","beginFiberMark","_debugID","has","clearFiberMark","clearMark","endFiberMark","shouldIgnoreFiber","clearPendingPhaseMeasurement","pauseTimers","_debugIsCurrentlyTiming","resumeTimersRecursively","resumeTimers","recordEffect","startWorkTimer","cancelWorkTimer","stopWorkTimer","stopFailedWorkTimer","startPhaseTimer","stopPhaseTimer","stopWorkLoopTimer","interruptedBy","didCompleteRoot","valueStack","fiberStack","warnedAboutMissingGetChildContext","index","createCursor","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","Component","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","onCommitFiberRoot","onCommitFiberUnmount","hasLoggedError","catchErrors","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","NoWork","Never","Sync","MAX_SIGNED_31_BIT_INT","UNIT_SIZE","MAGIC_NUMBER_OFFSET","msToExpirationTime","ms","expirationTimeToMs","computeExpirationBucket","currentTime","expirationInMs","bucketSizeMs","precision","LOW_PRIORITY_EXPIRATION","LOW_PRIORITY_BATCH_SIZE","computeAsyncExpiration","HIGH_PRIORITY_EXPIRATION","HIGH_PRIORITY_BATCH_SIZE","NoContext","ConcurrentMode","StrictMode","ProfileMode","hasBadMapPolyfill","debugCounter","nonExtensibleObject","preventExtensions","testMap","Map","testSet","FiberNode","pendingProps","elementType","ref","memoizedProps","updateQueue","memoizedState","contextDependencies","nextEffect","firstEffect","lastEffect","childExpirationTime","actualDuration","Number","NaN","actualStartTime","selfBaseDuration","treeBaseDuration","_debugHookTypes","createFiber","shouldConstruct","isReactComponent","createWorkInProgress","createFiberFromTypeAndProps","fiberTag","resolvedType","getTag","createFiberFromFragment","createFiberFromMode","onRender","createFiberFromProfiler","createFiberFromSuspense","createFiberFromElement","elements","createFiberFromText","createFiberFromPortal","portal","pendingChildren","implementation","assignFiberPropertiesInDEV","createFiberRoot","isConcurrent","hydrate","uninitializedFiber","createHostRootFiber","earliestPendingTime","latestPendingTime","earliestSuspendedTime","latestSuspendedTime","latestPingedTime","pingCache","pendingCommitExpirationTime","finishedWork","timeoutHandle","pendingContext","nextExpirationTimeToWorkOn","firstBatch","nextScheduledRoot","interactionThreadID","memoizedInteractions","pendingInteractionMap","ReactStrictModeWarnings","discardPendingWarnings","flushPendingDeprecationWarnings","flushPendingUnsafeLifecycleWarnings","recordDeprecationWarnings","recordUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","LIFECYCLE_SUGGESTIONS","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","pendingComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUnsafeLifecycleWarnings","pendingLegacyContextWarning","didWarnAboutDeprecatedLifecycles","didWarnAboutUnsafeLifecycles","didWarnAboutLegacyContext","setToSortedString","array","sort","lifecycleWarningsMap","strictRoot","lifecyclesWarningMessages","lifecycle","lifecycleWarnings","componentNames","formatted","suggestion","sortedComponentNames","strictRootComponentStack","findStrictRoot","maybeStrictRoot","uniqueNames","sortedNames","componentWillMount","__suppressDeprecationWarning","componentWillReceiveProps","componentWillUpdate","warningsForRoot","unsafeLifecycles","fiberArray","markPendingPriorityLevel","findNextExpirationTimeToWorkOn","markSuspendedPriorityLevel","suspendedTime","completedTime","clearPing","findEarliestOutstandingPriorityLevel","renderExpirationTime","earliestExpirationTime","didExpireAtExpirationTime","completedExpirationTime","resolveDefaultProps","baseProps","defaultProps","fakeInternalInstance","emptyRefsObject","refs","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","didWarnOnInvalidCallback","callerName","partialState","applyDerivedStateFromProps","ctor","getDerivedStateFromProps","prevState","baseState","classComponentUpdater","component","ownerFiber","_warnedAboutRefsInRender","getInstance","enqueueSetState","payload","computeExpirationForFiber","requestCurrentTime","update","createUpdate","flushPassiveEffects","enqueueUpdate","scheduleWork","enqueueReplaceState","ReplaceState","enqueueForceUpdate","ForceUpdate","checkShouldComponentUpdate","oldState","newState","nextContext","shouldComponentUpdate","shouldUpdate","isPureReactComponent","adoptClassInstance","updater","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","contextType","_context","readContext","getSnapshotBeforeUpdate","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","newApiName","callComponentWillReceiveProps","mountClassInstance","noGetInitialStateOnES6","getInitialState","isReactClassApproved","noGetDefaultPropsOnES6","getDefaultProps","noInstancePropTypes","noInstanceContextType","noInstanceContextTypes","noComponentShouldUpdate","componentShouldUpdate","noComponentDidUnmount","componentDidUnmount","noComponentDidReceiveProps","componentDidReceiveProps","noComponentWillRecieveProps","componentWillRecieveProps","noUnsafeComponentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","noInstanceDefaultProps","componentDidUpdate","noInstanceGetDerivedStateFromProps","noInstanceGetDerivedStateFromCatch","getDerivedStateFromError","noStaticGetSnapshotBeforeUpdate","checkClassInstance","processUpdateQueue","callComponentWillMount","componentDidMount","didWarnAboutMaps","didWarnAboutGenerators","didWarnAboutStringRefInStrictMode","ownerHasKeyUseWarning","ownerHasFunctionTypeWarning","warnForMissingKey","_store","validated","currentComponentErrorInfo","coerceRef","returnFiber","mixedRef","stringRef","_stringRef","throwOnInvalidObjectType","newChild","warnOnFunctionType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","last","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","clone","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","created","existing","updateElement","updatePortal","updateFragment","fragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","warnOnInvalidKey","knownKeys","isUnkeyedTopLevelFragment","isObject","reconcileSingleElement","reconcileSinglePortal","reconcileSingleTextNode","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","reconcileChildrenArray","newChildrenIterable","iteratorFn","toStringTag","entries","done","reconcileChildrenIterator","_isMockFunction","reconcileChildFibers","mountChildFibers","NO_CONTEXT","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","pushHostContainer","nextRootInstance","nextRootContext","validatedTag","getRootHostContext","popHostContainer","getHostContext","pushHostContext","parentHostContext","parentHostContextDev","getChildHostContext","popHostContext","UnmountSnapshot","UnmountMutation","MountMutation","UnmountLayout","MountLayout","MountPassive","UnmountPassive","didWarnAboutMismatchedHooksForComponent","currentlyRenderingFiber","currentHook","nextCurrentHook","firstWorkInProgressHook","workInProgressHook","nextWorkInProgressHook","remainingExpirationTime","componentUpdateQueue","sideEffectTag","didScheduleRenderPhaseUpdate","renderPhaseUpdates","numberOfReRenders","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","mountHookTypesDev","hookName","updateHookTypesDev","currentHookName","table","secondColumnStart","oldHookName","newHookName","row","warnOnHookMismatchInDev","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","refOrContext","nextRenderExpirationTime","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","ContextOnlyDispatcher","renderedWork","didRenderTooFewHooks","bailoutHooks","PassiveEffect","UpdateEffect","resetHooks","mountWorkInProgressHook","hook","queue","baseUpdate","updateWorkInProgressHook","newHook","basicStateReducer","mountReducer","reducer","initialArg","init","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchAction","updateReducer","firstRenderPhaseUpdate","markWorkInProgressReceivedUpdate","first","newBaseState","newBaseUpdate","prevUpdate","didSkip","updateExpirationTime","eagerReducer","eagerState","mountState","updateState","pushEffect","create","destroy","deps","effect","mountRef","seal","updateRef","mountEffectImpl","fiberEffectTag","hookEffectTag","updateEffectImpl","prevEffect","NoHookEffect","mountEffect","updateEffect","mountLayoutEffect","updateLayoutEffect","imperativeHandleEffect","refCallback","refObject","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","shouldWarnForUnbatchedSetState","lastRenderPhaseUpdate","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","currentState","isRendering","isBatchingUpdates","warnIfNotCurrentlyBatchingInDev","jest","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","InvalidNestedHooksDispatcherOnMountInDEV","warnInvalidContextAccess","warnInvalidHookAccess","observedBits","commitTime","profilerStartTime","getCommitTime","startProfilerTimer","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","hydrationParentFiber","nextHydratableInstance","deleteHydratableInstance","parentContainer","didNotHydrateContainerInstance","parentType","parentProps","didNotHydrateInstance","createFiberFromHostInstanceForDeletion","insertNonHydratedInstance","didNotFindHydratableContainerInstance","didNotFindHydratableContainerTextInstance","didNotFindHydratableInstance","didNotFindHydratableTextInstance","didNotFindHydratableSuspenseInstance","tryHydrate","nextInstance","canHydrateInstance","canHydrateTextInstance","tryToClaimNextHydratableInstance","firstAttemptedInstance","prepareToHydrateHostTextInstance","diffHydratedText","hydrateTextInstance","didNotMatchHydratedContainerTextInstance","didNotMatchHydratedTextInstance","skipPastDehydratedSuspenseInstance","getNextHydratableInstanceAfterSuspenseInstance","popToNextHostParent","popHydrationState","resetHydrationState","didWarnAboutBadClass","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didReceiveUpdate","reconcileChildren","nextChildren","updateForwardRef","innerPropTypes","prepareToReadContext","bailoutOnAlreadyFinishedWork","updateMemoComponent","isSimpleFunctionComponent","compare","validateFunctionComponentInDev","updateSimpleMemoComponent","currentChild","prevProps","outerMemoType","outerPropTypes","updateFunctionComponent","markRef","updateClassComponent","hasContext","isLegacyContextProvider","pushLegacyContextProvider","oldContext","hasNewLifecycles","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","resumeMountClassInstance","updateClassInstance","nextUnitOfWork","finishClassComponent","didCaptureError","forceUnmountCurrentAndReconcile","pushHostRootContext","updateHostRoot","prevChildren","enterHydrationState","mountLazyComponent","_current","status","_ctor","then","moduleObject","defaultExport","readLazyComponentType","resolvedTag","resolveLazyComponentTag","resolvedProps","hint","debugSource","updateSuspenseComponent","nextDidTimeout","nextState","timedOutAt","fallback","updateDehydratedSuspenseComponent","nextFallbackChildren","primaryChildFragment","progressedPrimaryChild","fallbackChildFragment","nextPrimaryChildren","currentPrimaryChildFragment","currentFallbackChildFragment","hiddenChild","currentPrimaryChild","reenterHydrationStateFromDehydratedSuspenseInstance","updateContextProvider","providerPropTypes","pushProvider","changedBits","oldValue","_calculateChangedBits","calculateChangedBits","hasLegacyContextChanged","nextFiber","scheduleWorkOnParentPath","propagateContextChange","hasWarnedAboutUsingContextAsConsumer","cloneChildFibers","beginWork","primaryChildExpirationTime","mountIndeterminateComponent","unresolvedProps","updateHostComponent","updateHostText","updatePortalComponent","updateMode","updateProfiler","Consumer","unstable_observedBits","updateContextConsumer","mountIncompleteClassComponent","valueCursor","rendererSigil","lastContextDependency","lastContextWithAllBitsObserved","isDisallowedContextReadInDEV","resetContextDependences","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","providerFiber","_currentValue","_currentRenderer","_currentValue2","_currentRenderer2","popProvider","currentDependencies","resolvedObservedBits","contextItem","UpdateState","CaptureUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","resetCurrentlyProcessingQueue","appendAllChildren","updateHostContainer","hasForceUpdate","createUpdateQueue","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","cloneUpdateQueue","currentQueue","appendUpdateToQueue","queue1","queue2","enqueueCapturedUpdate","workInProgressQueue","ensureWorkInProgressQueueIsAClone","getStateFromUpdate","newFirstUpdate","newExpirationTime","resultState","newFirstCapturedUpdate","commitUpdateQueue","finishedQueue","commitUpdateEffects","createCapturedValue","markUpdate","needsVisibilityToggle","isHidden","oldText","newText","branches","currentHostContext","newIsHidden","primaryChildParent","appendAllChildrenToContainer","containerChildSet","portalOrRoot","newChildSet","currentInstance","childrenUnchanged","recyclableInstance","newInstance","completeWork","popLegacyContext","popTopLevelLegacyContextObject","fiberRoot","prepareToHydrateHostInstance","prevDidTimeout","currentFallbackChild","wasHydrated","shouldCaptureSuspense","didWarnAboutUndefinedSnapshotBeforeUpdate","PossiblyWeakSet","WeakSet","logError","boundary","errorInfo","capturedError","componentStack","errorBoundary","errorBoundaryName","errorBoundaryFound","willRetry","componentNameMessage","errorBoundaryMessage","combinedMessage","logCapturedError","callComponentWillUnmountWithTimer","componentWillUnmount","safelyDetachRef","captureCommitPhaseError","safelyCallDestroy","commitBeforeMutationLifeCycles","commitHookEffectList","snapshot","didWarnSet","__reactInternalSnapshotBeforeUpdate","unmountTag","mountTag","commitPassiveHookEffects","commitLifeCycles","finishedRoot","committedExpirationTime","commitMount","commitAttachRef","instanceToUse","commitDetachRef","currentRef","commitUnmount","safelyCallComponentWillUnmount","unmountHostComponents","emptyChildSet","emptyPortalContainer","commitNestedUnmounts","isHostParent","commitPlacement","parentFiber","getHostParentFiber","isContainer","before","siblings","getHostSibling","currentParentIsContainer","currentParentIsValid","findParent","commitDeletion","detachFiber","commitWork","commitUpdate","commitTextUpdate","newDidTimeout","hideOrUnhideAllChildren","thenables","retryCache","retry","retryTimedOutBoundary","Schedule_tracing_wrap","commitContainer","PossiblyWeakMap","WeakMap","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","componentDidCatch","legacyErrorBoundariesThatAlreadyFailed","attachPingListener","threadIDs","ping","pingSuspendedRoot","throwException","sourceFiber","earliestTimeoutMs","startTimeMs","timeoutPropMs","maxDuration","absoluteTimeoutMs","maxSigned31BitInt","renderDidSuspend","nextRenderDidError","isAlreadyFailedLegacyErrorBoundary","unwindWork","unwindInterruptedWork","interruptedWork","didWarnAboutStateTransition","didWarnSetStateChildContext","warnAboutUpdateOnUnmounted","warnAboutInvalidUpdates","didWarnStateUpdateForUnmountedComponent","isClass","ReactCurrentFiberPhase","stashedWorkInProgressProperties","replayUnitOfWork","mayReplayFailedUnitOfWork","isReplayingFailedUnitOfWork","originalReplayError","rethrowOriginalError","lastUniqueAsyncExpiration","isWorking","nextRoot","nextLatestAbsoluteTimeoutMs","rootWithPendingPassiveEffects","passiveEffectCallbackHandle","passiveEffectCallback","resetStack","commitAllHostEffects","commitBeforeMutationLifecycles","commitAllLifeCycles","commitPassiveEffects","previousIsRendering","rootExpirationTime","requestWork","performSyncWork","commitRoot","clear","startCommitTimer","updateExpirationTimeBeforeCommit","childExpirationTimeBeforeCommit","earliestRemainingTime","markCommittedPriorityLevels","prevInteractions","startCommitSnapshotEffectsTimer","count","stopCommitSnapshotEffectsTimer","startCommitHostEffectsTimer","stopCommitHostEffectsTimer","startCommitLifeCyclesTimer","Scheduler_tracing_wrap","runWithPriority","NormalPriority","stopCommitLifeCyclesTimer","stopCommitTimer","onCommitRoot","ReactFiberInstrumentation","onCommitWork","updateExpirationTimeAfterCommit","childExpirationTimeAfterCommit","earliestRemainingTimeAfterCommit","onCommit","subscriber","threadID","computeThreadID","onWorkStopped","hasUnhandledError","unhandledError","scheduledInteractions","scheduledExpirationTime","interaction","__count","onInteractionScheduledWorkCompleted","resetChildExpirationTime","renderTime","newChildExpirationTime","shouldBubbleActualDurations","childUpdateExpirationTime","childChildExpirationTime","completeUnitOfWork","siblingFiber","onCompleteWork","performUnitOfWork","onBeginWork","workLoop","isYieldy","shouldYieldToRenderer","renderRoot","previousDispatcher","interactions","onWorkStarted","didFatal","startWorkLoopTimer","thrownValue","mayReplay","onFatal","onYield","rootWorkInProgress","erroredExpirationTime","hasLowerPriorityWork","onSuspend","suspendedExpirationTime","earliestExpirationTimeMs","currentTimeMs","msUntilTimeout","onComplete","rootFiber","getCurrentPriorityLevel","ImmediatePriority","UserBlockingPriority","computeInteractiveExpiration","LowPriority","IdlePriority","lowestPriorityPendingInteractiveExpirationTime","pingTime","isPriorityLevelSuspended","pingedTime","markPingedPriorityLevel","boundaryFiber","retryTime","scheduleWorkToRoot","pendingInteractions","onWorkScheduled","nestedUpdateCount","NESTED_UPDATE_LIMIT","syncUpdates","failedUnitOfWork","replayError","callbackID","firstScheduledRoot","lastScheduledRoot","callbackExpirationTime","nextFlushedRoot","nextFlushedExpirationTime","isUnbatchingUpdates","completedBatches","originalStartTimeMs","currentRendererTime","currentSchedulerTime","lastCommittedRootDuringThisBatch","recomputeCurrentRendererTime","scheduleCallbackWithExpirationTime","currentMs","performAsyncWork","onTimeout","flushRoot","findHighestPriorityRoot","addRootToSchedule","performWorkOnRoot","highestPriorityWork","highestPriorityRoot","previousScheduledRoot","didWarnAboutNestedUpdates","didWarnAboutFindNodeInStrictMode","didYield","shouldYield","performWork","minExpirationTime","didExpire","stopRequestCallbackTimer","batches","batch","_onComplete","finishRendering","completeRoot","_expirationTime","_defer","previousIsBatchingUpdates","unbatchedUpdates","interactiveUpdates","getContextForSubtree","parentComponent","findCurrentUnmaskedContext","updateContainerAtExpirationTime","onMountContainer","onUnmountContainer","onUpdateContainer","ReactCurrentFiberCurrent","scheduleRootUpdate","updateContainer","getPublicRootInstance","containerFiber","findHostInstanceWithNoPortals","hostFiber","findCurrentHostFiberWithNoPortals","overrideProps","copyWithSetImpl","obj","idx","updated","copyWithSet","topLevelUpdateWarnings","didWarnAboutUnstableCreatePortal","ReactBatch","computeUniqueAsyncExpiration","_root","_next","_callbacks","_didComplete","_hasChildren","_children","ReactWork","_didCommit","_onCommit","ReactRoot","createContainer","_internalRoot","isValidContainer","getReactRootElementInContainer","hostInstance","isRootRenderedBySomeReact","rootEl","hasNonRootReactChild","ReactDOMInputRestoreControlledState","ReactDOMTextareaRestoreControlledState","ReactDOMSelectRestoreControlledState","internalRoot","work","callbacks","commit","previous","unmount","legacy_renderSubtreeIntoContainer","createBatch","insertAfter","warnedAboutHydrateAPI","legacyCreateRootFromDOMContainer","forceHydrate","shouldHydrate","rootElement","shouldHydrateDueToLegacyHeuristic","rootSibling","warned","legacyRenderSubtreeIntoContainer","originalCallback","createPortal","createPortalImpl","findDOMNode","componentOrElement","warnedAboutRefsInRender","methodName","findHostInstanceWithWarning","_reactHasBeenPassedToCreateRootDEV","unstable_renderSubtreeIntoContainer","containerNode","unmountComponentAtNode","renderedByDifferentReact","isContainerReactRoot","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","createRoot","unstable_flushControlled","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","Events","devToolsConfig","findFiberByHostInstance","internals","isDisabled","supportsFiber","rendererID","inject","injectInternals","currentDispatcherRef","findHostInstanceByFiber","injectIntoDevTools","bundleType","ReactVersion","rendererPackageName","self","navigator","userAgent","protocol","warnNoop","publicInstance","ReactNoopUpdateQueue","completeState","emptyObject","setState","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","fnName","ComponentDummy","PureComponent","pureComponentPrototype","RESERVED_PROPS","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","hasValidRef","getter","isReactWarning","hasValidKey","ReactElement","writable","childrenLength","childArray","warnAboutAccessingKey","defineKeyPropWarningGetter","warnAboutAccessingRef","defineRefPropWarningGetter","cloneElement","_self","isValidElement","object","SEPARATOR","SUBSEPARATOR","userProvidedKeyEscapeRegex","escapeUserProvidedKey","POOL_SIZE","traverseContextPool","getPooledTraverseContext","mapResult","keyPrefix","mapFunction","mapContext","traverseContext","releaseTraverseContext","traverseAllChildren","traverseAllChildrenImpl","nameSoFar","nextName","invokeCallback","getComponentKey","subtreeCount","nextNamePrefix","ii","childrenString","escaperLookup","escape","forEachSingleChild","mapSingleChildIntoContext","childKey","mappedChild","oldElement","newKey","mapIntoWithKeyPrefixInternal","escapedPrefix","isValidElementType","resolveDispatcher","dispatcher","propTypesMisspellWarningShown","validateExplicitKey","parentName","getCurrentComponentErrorInfo","childOwner","validateChildKeys","validatePropTypes","PropTypes","createElementWithValidation","validType","elementProps","getSourceInfoErrorAddendum","typeString","validateFragmentProps","forEachFunc","forEachContext","toArray","only","createRef","createContext","_threadCount","Provider","hasWarnedAboutUsingNestedContextConsumers","hasWarnedAboutUsingConsumerProvider","defineProperties","_Provider","forwardRef","lazy","lazyType","newDefaultProps","newPropTypes","memo","inputs","Context","realContext","Suspense","newElement","createFactory","validatedFactory","unstable_ConcurrentMode","unstable_Profiler","App","Boolean","hostname","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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,EACFoN,EAAKqS,gBAAgB1B,OAChB,CACL,MAAM,KAAC1lB,GAAQ4lB,EACf,IAAIyB,EAEFA,EADErnB,IAAS8kB,IAAY9kB,IAAS+kB,KAAgC,IAAVpd,EACrC,GAIA,GAAMA,EAErB4e,EACFxR,EAAKuS,eAAef,EAAoBb,EAAe2B,GAEvDtS,EAAK4N,aAAa+C,EAAe2B,ICtJhC,SAAS3S,GAAS/M,GACvB,MAAO,GAAMA,EAGR,SAAS4f,GAAiB5f,GAC/B,cAAeA,GACb,IAAK,UACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,YACH,OAAOA,EACT,QAEE,MAAO,IFwWb,CACE,gBACA,qBACA,cACA,iBACA,aACA,YACA,YACA,sBACA,8BACA,gBACA,kBACA,oBACA,oBACA,eACA,YACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,aACA,+BACA,6BACA,cACA,iBACA,kBACA,iBACA,iBACA,aACA,aACA,eACA,oBACA,qBACA,cACA,WACA,iBACA,mBACA,kBACA,aACA,eACA,yBACA,0BACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,eACA,cACA,kBACA,iBACA,qBACA,sBACA,eACA,gBACA,eACA,eACA,YACA,gBACA,iBACA,gBACA,aACA,gBACA,gBACA,eACA,eACA,cACA,YAKAlB,QAAQif,IACR,MAAMjpB,EAAOipB,EAAclpB,QAAQiqB,GAAUC,IAC7CN,GAAW3pB,GAAQ,IAAI4pB,GACrB5pB,EAxckB,GA0clB,EACAipB,EACA,QAKJ,CACE,gBACA,gBACA,aACA,aACA,aACA,cACA,cAKAjf,QAAQif,IACR,MAAMjpB,EAAOipB,EAAclpB,QAAQiqB,GAAUC,IAC7CN,GAAW3pB,GAAQ,IAAI4pB,GACrB5pB,EAhekB,GAkelB,EACAipB,EACA,kCAKJ,CACE,WACA,WACA,aAKAjf,QAAQif,IACR,MAAMjpB,EAAOipB,EAAclpB,QAAQiqB,GAAUC,IAC7CN,GAAW3pB,GAAQ,IAAI4pB,GACrB5pB,EApfkB,GAsflB,EACAipB,EACA,0CAOJ,CAAC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IAKlD,SAASsB,GAAwBppC,GAClB,CACX,MAAM/L,EAAiB+L,EAAS9L,cAChC,OAAKo4B,GAAsB/mC,eAAe0O,IAGnCq4B,GAAsBr4B,IAFpB,MA8SN,SAASo1C,GAAqBC,EAAgBvjC,GAEjDo+B,GAAsBmF,EAASxsB,UAAW/W,GAIvC,SAASwjC,GACd/vC,EACA8c,GAGMktB,KAGJA,IAA0B,EAC1BtiD,aACE,EACA,wDACAo1B,EAAMjQ,SAASnS,cACfsF,EAAW6M,SAASnS,gBAKnB,SAASs1C,GACdhwC,EACA8c,GAGMktB,KAGJA,IAA0B,EAC1BtiD,aACE,EACA,oEACAo1B,EAAMwG,UACNtjB,EAAW6M,SAASnS,gBAKnB,SAASu1C,GACdjwC,EACAhV,EACAsS,GAGM0sC,KAGJA,IAA0B,EAC1BtiD,aACE,EACA,2DACAsD,EACAgV,EAAW6M,SAASnS,gBAKnB,SAASw1C,GACdlwC,EACAuM,GAGe,KAATA,IAOAy9B,KAGJA,IAA0B,EAC1BtiD,aACE,EACA,yEACA6kB,EACAvM,EAAW6M,SAASnS,iBCltC1B,IAAIy1C,GAAqB,OACrBC,GAAsB,OAEb,CAaX,MAAMC,EAAc,CAClB,UACA,SACA,OACA,UACA,QACA,OACA,WACA,UACA,aACA,OACA,KACA,SACA,UACA,SACA,MACA,WACA,KACA,UACA,MACA,MACA,KACA,KACA,QACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,SACA,MACA,QACA,UACA,KACA,OACA,UACA,OACA,UACA,OACA,WACA,OACA,MACA,UACA,WACA,WACA,SACA,KACA,IACA,QACA,YACA,MACA,SACA,UACA,SACA,SACA,QACA,UACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,QACA,KACA,QACA,KACA,MACA,OAIIC,EAAc,CAClB,SACA,UACA,OACA,QACA,KACA,KACA,UACA,SACA,WAKA,gBACA,OACA,SAIIC,EAAkBD,EAAYr0C,OAAO,CAAC,WAGtCu0C,EAAiB,CACrB,KACA,KACA,KACA,SACA,WACA,IACA,KACA,MAGIC,EAAoB,CACxBxkD,QAAS,KAETykD,QAAS,KACTC,YAAa,KACbC,iBAAkB,KAClBC,eAAgB,KAChBC,kBAAmB,KAEnBC,uBAAwB,KACxBC,qBAAsB,MAGxBZ,GAAsB,SAASa,EAASjmD,GACtC,IAAIkmD,EAAe,IAAKD,GAAWR,GAC/BrhC,EAAO,CAACpkB,OA+CZ,OA7CkC,IAA9BslD,EAAY72C,QAAQzO,KACtBkmD,EAAaP,YAAc,KAC3BO,EAAaN,iBAAmB,KAChCM,EAAaL,eAAiB,OAEM,IAAlCN,EAAgB92C,QAAQzO,KAC1BkmD,EAAaJ,kBAAoB,OAMH,IAA9BT,EAAY52C,QAAQzO,IACZ,YAARA,GACQ,QAARA,GACQ,MAARA,IAEAkmD,EAAaH,uBAAyB,KACtCG,EAAaF,qBAAuB,MAGtCE,EAAajlD,QAAUmjB,EAEX,SAARpkB,IACFkmD,EAAaR,QAAUthC,GAEb,MAARpkB,IACFkmD,EAAaP,YAAcvhC,GAEjB,WAARpkB,IACFkmD,EAAaN,iBAAmBxhC,GAEtB,SAARpkB,IACFkmD,EAAaL,eAAiBzhC,GAEpB,MAARpkB,IACFkmD,EAAaJ,kBAAoB1hC,GAEvB,OAARpkB,IACFkmD,EAAaH,uBAAyB3hC,GAE5B,OAARpkB,GAAwB,OAARA,IAClBkmD,EAAaF,qBAAuB5hC,GAG/B8hC,GAMT,MAAMC,EAAuB,SAASnmD,EAAKomD,GAEzC,OAAQA,GAEN,IAAK,SACH,MAAe,WAARpmD,GAA4B,aAARA,GAA8B,UAARA,EACnD,IAAK,WACH,MAAe,WAARA,GAA4B,UAARA,EAG7B,IAAK,SACH,MAAe,UAARA,EAOT,IAAK,KACH,MACU,OAARA,GACQ,OAARA,GACQ,UAARA,GACQ,WAARA,GACQ,aAARA,EAGJ,IAAK,QACL,IAAK,QACL,IAAK,QACH,MACU,OAARA,GACQ,UAARA,GACQ,WAARA,GACQ,aAARA,EAGJ,IAAK,WACH,MAAe,QAARA,GAAyB,aAARA,EAE1B,IAAK,QACH,MACU,YAARA,GACQ,aAARA,GACQ,UAARA,GACQ,UAARA,GACQ,UAARA,GACQ,UAARA,GACQ,WAARA,GACQ,aAARA,EAGJ,IAAK,OACH,MACU,SAARA,GACQ,aAARA,GACQ,YAARA,GACQ,SAARA,GACQ,SAARA,GACQ,UAARA,GACQ,aAARA,GACQ,aAARA,GACQ,UAARA,GACQ,WAARA,GACQ,aAARA,EAGJ,IAAK,OACH,MAAe,SAARA,GAA0B,SAARA,EAC3B,IAAK,YACH,MAAe,SAARA,EAMX,OAAQA,GACN,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,MACgB,OAAdomD,GACc,OAAdA,GACc,OAAdA,GACc,OAAdA,GACc,OAAdA,GACc,OAAdA,EAGJ,IAAK,KACL,IAAK,KACH,OAA8C,IAAvCZ,EAAe/2C,QAAQ23C,GAEhC,IAAK,OACL,IAAK,UACL,IAAK,MACL,IAAK,WACL,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,QACL,IAAK,KACL,IAAK,QACL,IAAK,KACL,IAAK,QACL,IAAK,KAKH,OAAoB,MAAbA,EAGX,OAAO,GAMHC,EAA4B,SAASrmD,EAAKkmD,GAC9C,OAAQlmD,GACN,IAAK,UACL,IAAK,UACL,IAAK,QACL,IAAK,aACL,IAAK,SACL,IAAK,UACL,IAAK,SACL,IAAK,MACL,IAAK,MACL,IAAK,KACL,IAAK,WACL,IAAK,aACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACL,IAAK,UACL,IAAK,UACL,IAAK,KACL,IAAK,MACL,IAAK,UACL,IAAK,QACL,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAOkmD,EAAaJ,kBAEtB,IAAK,OACH,OAAOI,EAAaR,SAAWQ,EAAaJ,kBAE9C,IAAK,KACH,OAAOI,EAAaH,uBAEtB,IAAK,KACL,IAAK,KACH,OAAOG,EAAaF,qBAEtB,IAAK,SACH,OAAOE,EAAaN,iBAEtB,IAAK,IAGH,OAAOM,EAAaP,YAEtB,IAAK,OACH,OAAOO,EAAaL,eAGxB,OAAO,MAGHS,EAAU,GAEhBnB,GAAqB,SAASoB,EAAUC,EAAWN,GAEjD,MAAMO,GADNP,EAAeA,GAAgBT,GACCxkD,QAC1BmlD,EAAYK,GAAcA,EAAWzmD,IAE1B,MAAbwmD,IACF9pD,YACc,MAAZ6pD,EACA,yEAEFA,EAAW,SAGb,MAAMG,EAAgBP,EAAqBI,EAAUH,GACjD,KACAK,EACEE,EAAkBD,EACpB,KACAL,EAA0BE,EAAUL,GAClCU,EAA0BF,GAAiBC,EACjD,IAAKC,EACH,OAGF,MAAMC,EAAcD,EAAwB5mD,IACtC8mD,EAAWxiC,KAEXyiC,IACFL,EAAgB,IAAMH,EAAW,IAAMM,EAAc,IAAMC,EAC/D,GAAIR,EAAQS,GACV,OAEFT,EAAQS,IAAW,EAEnB,IAAIC,EAAiBT,EACjBU,EAAiB,GAcrB,GAbiB,UAAbV,EACE,KAAKnhD,KAAKohD,GACZQ,EAAiB,cAEjBA,EAAiB,wBACjBC,EACE,iGAIJD,EAAiB,IAAMT,EAAW,IAGhCG,EAAe,CACjB,IAAItiC,EAAO,GACS,UAAhByiC,GAAwC,OAAbN,IAC7BniC,GACE,+EAGJ1nB,aACE,EACA,sEACAsqD,EACAH,EACAI,EACA7iC,EACA0iC,QAGFpqD,aACE,EACA,uEAEAsqD,EACAH,EACAC,I,YC9cR,SAASI,MAAQ7qD,GACfZ,aACE,EACA,2HAOG,MAAM0rD,IAAsB,EACtBC,GAAgBF,GAChBG,GAA0BH,GAC1BI,GAAiCJ,GACjCK,GAA4BL,GAC5BM,GAA2BN,GAC3BO,GAAsBP,GACtBQ,GAAwBR,GACxBS,GAA2BT,GCoDxC,IAAI9H,GAEFA,GAA6B,2BAG/B,MAAMwI,GAAsB,IACtBC,GAAoB,KAEpBtI,GAAQ,QAEd,IAAIuI,GAA0B,KAC1BC,GAA+B,KAEnC,SAASC,GAA6BjoD,EAAcuS,GAClD,OAAQvS,GACN,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,WACH,QAASuS,EAAM21C,UAEnB,OAAO,EA4DF,SAASC,GAAiBtyB,GAC/BkyB,GlC1CO7xB,GkC2CP8xB,G5BpEK,WACL,MAAMpuB,EAAcR,KACpB,MAAO,CACLQ,YAAaA,EACbE,eAAgBR,GAAyBM,GACrC9B,GAAa8B,GACb,M4B8DiBwuB,GACvBC,IAAmC,GAU9B,SAASC,GACdtoD,EACAuS,EACAg2C,EACAC,EACAC,GAEA,IAAIvqB,EACS,CAEX,MAAMwqB,EAAmBF,EAEzB,GADApD,GAAmBplD,EAAM,KAAM0oD,EAAevC,cAElB,kBAAnB5zC,EAAM6pB,UACa,kBAAnB7pB,EAAM6pB,SACb,CACA,MAAMqJ,EAAS,GAAKlzB,EAAM6pB,SACpBusB,EAAkBtD,GACtBqD,EAAevC,aACfnmD,GAEFolD,GAAmB,KAAM3f,EAAQkjB,GAEnCzqB,EAAkBwqB,EAAeE,UAInC,MAAM7G,EHwKD,SACL/hD,EACAuS,EACAivC,EACAtjB,GAGA,IAAIrY,EAIJ,MAAMsE,EAA0Bu3B,GAC9BF,GAEF,IAAIO,EACAnjB,EAAeV,EAInB,GAHIU,IAAiBnB,KACnBmB,EAAeZ,GAAsBh+B,IAEnC4+B,IAAiBnB,IAcnB,GAZE5X,EAAuBiiB,GAAkB9nC,EAAMuS,GAG/ClU,aACEwnB,GAAwB7lB,IAASA,EAAK2P,cACtC,yGAGA3P,GAIS,WAATA,EAAmB,CAGrB,MAAM6oD,EAAM1+B,EAAc3d,cAAc,OACxCq8C,EAAIhqB,UAAY,qBAEhB,MAAMzH,EAAeyxB,EAAIzxB,WACzB2qB,EAAa8G,EAAI9pB,YAAY3H,QACxB,GAAwB,kBAAb7kB,EAAMud,GAEtBiyB,EAAa53B,EAAc3d,cAAcxM,EAAM,CAAC8vB,GAAIvd,EAAMud,UAc1D,GATAiyB,EAAa53B,EAAc3d,cAAcxM,GAS5B,WAATA,EAAmB,CACrB,MAAM+U,EAASgtC,EACXxvC,EAAMsqB,SACR9nB,EAAK8nB,UAAW,EACPtqB,EAAM87B,OAKft5B,EAAKs5B,KAAO97B,EAAM87B,YAKxB0T,EAAa53B,EAAcm3B,gBAAgB1iB,EAAc5+B,GAuB3D,OAnBM4+B,IAAiBnB,KAEhB5X,GAEC,gCADF3iB,OAAO/F,UAAUuX,SAASrX,KAAK0kD,IAE9B7+C,OAAO/F,UAAU6D,eAAe3D,KAAKoiD,GAAmBz/C,KAEzDy/C,GAAkBz/C,IAAQ,EAC1B3B,cACE,EACA,mIAGA2B,KAMD+hD,EGtQsBv1C,CAC3BxM,EACAuS,EACAg2C,EACArqB,GAIF,OAFArpB,GAAkB4zC,EAAwB1G,GAC1C7sC,GAAiB6sC,EAAYxvC,GACtBwvC,EAGF,SAAS+G,GACdC,EACAh3B,GAEAg3B,EAAe/pB,YAAYjN,GAGtB,SAASi3B,GACdjH,EACA/hD,EACAuS,EACAg2C,EACAC,GAGA,OADA1G,GAAqBC,EAAY/hD,EAAMuS,EAAOg2C,GACvCN,GAA6BjoD,EAAMuS,GAGrC,SAAS02C,GACdlH,EACA/hD,EACAkpD,EACAC,EACAZ,EACAC,GAEa,CACX,MAAME,EAAmBF,EACzB,UACSW,EAAS/sB,kBAAoB8sB,EAAS9sB,WACf,kBAAtB+sB,EAAS/sB,UACc,kBAAtB+sB,EAAS/sB,UAClB,CACA,MAAMqJ,EAAS,GAAK0jB,EAAS/sB,SACvBusB,EAAkBtD,GACtBqD,EAAevC,aACfnmD,GAEFolD,GAAmB,KAAM3f,EAAQkjB,IAGrC,OAAOtF,GACLtB,EACA/hD,EACAkpD,EACAC,EACAZ,GAIG,SAASa,GAAqBppD,EAAcuS,GACjD,MACW,aAATvS,GACS,WAATA,GACS,aAATA,GAC0B,kBAAnBuS,EAAM6pB,UACa,kBAAnB7pB,EAAM6pB,UAC6B,kBAAlC7pB,EAAMgrB,yBACsB,OAAlChrB,EAAMgrB,yBACkC,MAAxChrB,EAAMgrB,wBAAwB8rB,OAQ7B,SAASC,GACd9nC,EACA+mC,EACAC,EACAC,GAIErD,GAAmB,KAAM5jC,EADAgnC,EACqBrC,cAEhD,MAAMpB,EHiLD,SACLvjC,EACAggC,GAEA,OAAOE,GAAkCF,GAAsB+H,eAC7D/nC,GGtL6B+nC,CAAe/nC,EAAM+mC,GAEpD,OADA1zC,GAAkB4zC,EAAwB1D,GACnCA,EAGF,MAAMyE,IAAoB,EAIpBC,GACW,oBAAfxhD,WAA4BA,gBAAc7L,EACtCstD,GACa,oBAAjBrhD,aAA8BA,kBAAgBjM,EAC1CutD,IAAa,EACbC,GAAyBC,6BACzBC,GAAuBC,2BAMvBC,IAAmB,EAsCzB,SAASC,GAAiBlI,GAC/B9iB,GAAe8iB,EAAY,IAWtB,SAAS/iB,GACd+pB,EACAh3B,GAEAg3B,EAAe/pB,YAAYjN,GAGtB,SAASm4B,GACdC,EACAp4B,GAEA,IAAI9c,EACAk1C,EAAU5nC,WAAaN,IACzBhN,EAAck1C,EAAUl1C,WACxBA,EAAWm1C,aAAar4B,EAAOo4B,KAE/Bl1C,EAAak1C,EACbl1C,EAAW+pB,YAAYjN,IAUzB,MAAMs4B,EAAqBF,EAAUG,oBAEX,OAAvBD,QAAsDjuD,IAAvBiuD,GACT,OAAvBp1C,EAAW4sC,SAGXD,GAAmC3sC,GAIhC,SAASm1C,GACdrB,EACAh3B,EACAw4B,GAEAxB,EAAeqB,aAAar4B,EAAOw4B,GAe9B,SAASxrB,GACdgqB,EACAh3B,GAEAg3B,EAAehqB,YAAYhN,GActB,SAASy4B,GACdzB,EACA0B,GAEA,IAAI11C,EAAO01C,EAIPv0C,EAAQ,EACZ,EAAG,CACD,IAAIw0C,EAAW31C,EAAKuiB,YAEpB,GADAyxB,EAAehqB,YAAYhqB,GACvB21C,GAAYA,EAASnoC,WAAaN,GAAc,CAClD,IAAI9E,EAASutC,EAAevtC,KAC5B,GAAIA,IAAS2qC,GAAmB,CAC9B,GAAc,IAAV5xC,EAEF,YADA6yC,EAAehqB,YAAY2rB,GAG3Bx0C,SAEOiH,IAAS0qC,IAClB3xC,IAGJnB,EAAO21C,QACA31C,GAIJ,SAAS41C,GACdR,EACAM,GAEIN,EAAU5nC,WAAaN,GACzBuoC,GAAuBL,EAAUl1C,WAAkBw1C,GAC1CN,EAAU5nC,WAAaR,IAChCyoC,GAAuBL,EAAiBM,GAMrC,SAASG,GAAapuC,IAG3BA,EAAaA,GACJ7E,MAAMk6B,QAAU,OAOpB,SAASgZ,GAAeruC,EAAoBjK,GACjDiK,EAAaA,EACb,MAAMrF,EAAY5E,EAAMitC,IAClB3N,OACUz1C,IAAd+a,GACc,OAAdA,GACAA,EAAUnW,eAAe,WACrBmW,EAAU06B,QACV,KACNr1B,EAAS7E,MAAMk6B,QAAUlN,GAAoB,UAAWkN,GAGnD,SAASiZ,GACdC,EACAvpC,GAEAupC,EAAaxyB,UAAY/W,EAOpB,MAAMwpC,IAAoB,EAwC1B,SAASC,GACdzuC,GAEA,IAAIzH,EAAOyH,EAAS8a,YAEpB,KACEviB,GACAA,EAAKwN,WAAaR,IAClBhN,EAAKwN,WAAaP,MAChB/jB,MACA8W,EAAKwN,WAAaN,IACjBlN,EAAWoI,OAAS0qC,KAEvB9yC,EAAOA,EAAKuiB,YAEd,OAAQviB,EAGH,SAASm2C,GACdnC,GAEA,IAAI93C,EAAO83C,EAAe3xB,WAE1B,KACEnmB,GACAA,EAAKsR,WAAaR,IAClB9Q,EAAKsR,WAAaP,MAChB/jB,MACAgT,EAAKsR,WAAaN,IACjBhR,EAAWkM,OAAS0qC,KAEvB52C,EAAOA,EAAKqmB,YAEd,OAAQrmB,EAGH,SAASk6C,GACd3uC,EACAxc,EACAuS,EACAg2C,EACAC,EACAC,GAMA,IAAIvqB,EAJJrpB,GAAkB4zC,EAAwBjsC,GAG1CtH,GAAiBsH,EAAUjK,GAIzB2rB,EADyBsqB,EACQI,UAInC,OHkQK,SACL7G,EACA9hD,EACA+hD,EACA9jB,EACAsjB,GAEA,IAAI37B,EACAulC,EAsBJ,OAnBE1L,IAAoE,IAAzCsC,EAAS3C,IACpCx5B,EAAuBiiB,GAAkB7nC,EAAK+hD,GAC9CrC,GAAgC1/C,EAAK+hD,GAEnCn8B,IACCq5B,IACA6C,EAAiBE,YAElB5jD,cACE,EACA,sFAEAimB,MAAyC,eAE3C46B,IAAkB,GAKdj/C,GACN,IAAK,SACL,IAAK,SACHo2B,GAAiBnd,GAAU6oC,GAC3B,MACF,IAAK,QACL,IAAK,QAEH,IAAK,IAAI57C,EAAI,EAAGA,EAAIyT,GAAgBhd,OAAQuJ,IAC1CkwB,GAAiBzc,GAAgBzT,GAAI47C,GAEvC,MACF,IAAK,SACH1rB,GAAiB1d,GAAWopC,GAC5B,MACF,IAAK,MACL,IAAK,QACL,IAAK,OACH1rB,GAAiB1d,GAAWopC,GAC5B1rB,GAAiBnd,GAAU6oC,GAC3B,MACF,IAAK,OACH1rB,GAAiBhd,GAAW0oC,GAC5B1rB,GAAiB7c,GAAYuoC,GAC7B,MACF,IAAK,UACH1rB,GAAiB3c,GAAYqoC,GAC7B,MACF,IAAK,QACHG,GAA8BH,EAAYC,GAC1C3rB,GAAiBvd,GAAaipC,GAG9BR,GAAkBC,EAAsB,YACxC,MACF,IAAK,SACHY,GAA4BL,EAAYC,GACxC,MACF,IAAK,SACHM,GAA+BP,EAAYC,GAC3C3rB,GAAiBvd,GAAaipC,GAG9BR,GAAkBC,EAAsB,YACxC,MACF,IAAK,WACHgB,GAAiCT,EAAYC,GAC7C3rB,GAAiBvd,GAAaipC,GAG9BR,GAAkBC,EAAsB,YAI5C5Z,GAAiB3nC,EAAK+hD,GAET,CACXoJ,EAAsB,IAAIC,IAC1B,MAAMC,EAAavJ,EAAWuJ,WAC9B,IAAK,IAAInlD,EAAI,EAAGA,EAAImlD,EAAW1uD,OAAQuJ,IAAK,CAE1C,OADamlD,EAAWnlD,GAAG1J,KAAKkT,eAG9B,IAAK,iBAIL,IAAK,QAEL,IAAK,UAEL,IAAK,WACH,MACF,QAGEy7C,EAAoBG,IAAID,EAAWnlD,GAAG1J,QAK9C,IAAIgnD,EAAgB,KACpB,IAAK,MAAMd,KAAWX,EAAU,CAC9B,IAAKA,EAAShhD,eAAe2hD,GAC3B,SAEF,MAAMC,EAAWZ,EAASW,GAC1B,GAAIA,IAAYpD,GAUU,kBAAbqD,EACLb,EAAWrnC,cAAgBkoC,IACblD,IACdE,GAAsBmC,EAAWrnC,YAAakoC,GAEhDa,EAAgB,CAAClE,GAAUqD,IAEA,kBAAbA,GACZb,EAAWrnC,cAAgB,GAAKkoC,IAClBlD,IACdE,GAAsBmC,EAAWrnC,YAAakoC,GAEhDa,EAAgB,CAAClE,GAAU,GAAKqD,SAG/B,GAAIrzC,EAAwBvO,eAAe2hD,GAChC,MAAZC,IACiC,oBAAbA,GACpB7C,GAA4B4C,EAASC,GAEvCrB,GAAkBC,EAAsBmB,SAErC,GAG2B,mBAAzB98B,EACP,CAEA,IAAIk7B,EACJ,MAAMn7B,EAAeO,GAAgBw8B,GACrC,GAAIjD,SAEG,GACLiD,IAAYvD,IACZuD,IAAYtD,IAGA,UAAZsD,GACY,YAAZA,GACY,aAAZA,QAGK,GAAIA,IAAYxD,GAA4B,CACjD,MAAMqM,EAAazJ,EAAWljB,UACxBikB,EAAWF,EAAWA,EAASjb,SAAQvrC,EACvCqvD,EAAevL,GACnB6B,EACY,MAAZe,EAAmBA,EAAW,IAE5B2I,IAAiBD,GACnB3L,GAAsB8C,EAAS6I,EAAYC,QAExC,GAAI9I,IAAYnD,IAIrB,GAFA4L,EAAoBM,OAAO/I,GAEvB3C,GAAiC,CACnC,MAAM2L,EAAgBzlB,GAA+B0c,GACrD7B,EAAcgB,EAAW96B,aAAa,SAClC0kC,IAAkB5K,GACpBlB,GAAsB8C,EAAS5B,EAAa4K,SAG3C,GAAI9lC,EAETulC,EAAoBM,OAAO/I,EAAQhzC,eACnCoxC,EAAc75B,GAAqB66B,EAAYY,EAASC,GAEpDA,IAAa7B,GACflB,GAAsB8C,EAAS5B,EAAa6B,QAEzC,IACJj9B,GAAsBg9B,EAAS/8B,EAAcC,KAC7CI,GACC08B,EACAC,EACAh9B,EACAC,GAEF,CACA,IAAI+lC,GAA2B,EAC/B,GAAqB,OAAjBhmC,EAEFwlC,EAAoBM,OAAO9lC,EAAaF,eACxCq7B,EAAcl6B,GACZk7B,EACAY,EACAC,EACAh9B,OAEG,CACL,IAAIimC,EAAe3tB,EAInB,GAHI2tB,IAAiBpuB,KACnBouB,EAAe7tB,GAAsB/9B,IAEnC4rD,IAAiBpuB,GAEnB2tB,EAAoBM,OAAO/I,EAAQhzC,mBAC9B,CACL,MAAM0uC,EAAewG,GAAwBlC,GACxB,OAAjBtE,GAAyBA,IAAiBsE,IAM5CiJ,GAA2B,EAE3BR,EAAoBM,OAAOrN,IAG7B+M,EAAoBM,OAAO/I,GAE7B5B,EAAc75B,GAAqB66B,EAAYY,EAASC,GAGtDA,IAAa7B,GAAgB6K,GAC/B/L,GAAsB8C,EAAS5B,EAAa6B,KAcpD,OANMwI,EAAoB/c,KAAO,IAAMqR,IAEnCI,GAAuBsL,GAInBnrD,GACN,IAAK,QAGH8iB,GAAOg/B,GACPiB,GAA8BjB,EAAYC,GAAU,GACpD,MACF,IAAK,WAGHj/B,GAAOg/B,GACPkB,GAAiClB,GACjC,MACF,IAAK,SACL,IAAK,SAMH,MACF,QACkC,oBAArBC,EAASoB,SAElBxB,GAAmCG,GAKzC,OAAO0B,EGjiBAqI,CACLtvC,EACAxc,EACAuS,EACA2rB,EACAqqB,GCjkBJ,MAEMwD,GACmB,qBAAhBvjD,aACqB,oBAArBA,YAAYwjD,MACe,oBAA3BxjD,YAAYyjD,YACY,oBAAxBzjD,YAAY0jD,SACkB,oBAA9B1jD,YAAY2jD,cAIrB,IAAIC,GAA6B,KAK7BC,GAAwC,KACxCC,GAAkC,KAIlCC,IAAwB,EACxBC,IAA6C,EAC7CC,IAA4C,EAC5CC,GAAuC,EACvCC,GAAqC,EACrCC,IAAgC,EAGpC,MAAMC,GAAqC,IAAIxB,IAEzCyB,GAAkBC,GACd,UAAgBA,IASpBC,GAAaD,IACjBvkD,YAAYwjD,KAAKc,GAAeC,KAO5BE,GAAU,CAACphB,EAAekhB,EAAkB1uD,KAChD,MAAM6uD,EAAoBJ,GAAeC,GACnCI,EAhBY,EAACthB,EAAextC,KAGlC,MAAQ,GAFOA,EAAW,UAAqB,YAE5BwtC,IADJxtC,EAAW,aAAYA,IAAY,MAc3B+uD,CAAYvhB,EAAOxtC,GAC1C,IACEmK,YAAY0jD,QAAQiB,EAAgBD,GACpC,MAAOtmD,IAMT4B,YAAYyjD,WAAWiB,GACvB1kD,YAAY2jD,cAAcgB,IAGtBE,GAAmB,CAACxhB,EAAeyhB,IAC/B,GAAEzhB,OAAWyhB,KAGjBC,GAAgB,CACpBhsD,EACAisD,EACAh3C,IAEc,OAAVA,EAEM,GAAEjV,MAAkBisD,EAAY,SAAW,WAG3C,GAAEjsD,KAAiBiV,IAIzBi3C,GAAiB,CACrBzpC,EACAxN,KAEA,MAAMjV,EAAgBxB,aAAiBikB,EAAMhkB,OAAS,UAChDstD,EAAYtpC,EAAM0pC,SAClBF,EAAgC,OAApBxpC,EAAM7N,UAClB01B,EAAQ0hB,GAAchsD,EAAeisD,EAAWh3C,GAEtD,GAAI+1C,IAAgBM,GAAsBc,IAAI9hB,GAI5C,OAAO,EAETghB,GAAsBtB,IAAI1f,GAE1B,MAAMkhB,EAAWM,GAAiBxhB,EAAOyhB,GAEzC,OADAN,GAAUD,IACH,GAGHa,GAAiB,CAAC5pC,EAAcxN,KACpC,MAAMjV,EAAgBxB,aAAiBikB,EAAMhkB,OAAS,UAChDstD,EAAYtpC,EAAM0pC,SAClBF,EAAgC,OAApBxpC,EAAM7N,UAClB01B,EAAQ0hB,GAAchsD,EAAeisD,EAAWh3C,GA/DrCu2C,KACjBvkD,YAAYyjD,WAAWa,GAAeC,KAgEtCc,CADiBR,GAAiBxhB,EAAOyhB,KAIrCQ,GAAe,CACnB9pC,EACAxN,EACAnY,KAEA,MAAMkD,EAAgBxB,aAAiBikB,EAAMhkB,OAAS,UAChDstD,EAAYtpC,EAAM0pC,SAClBF,EAAgC,OAApBxpC,EAAM7N,UAClB01B,EAAQ0hB,GAAchsD,EAAeisD,EAAWh3C,GAChDu2C,EAAWM,GAAiBxhB,EAAOyhB,GACzCL,GAAQphB,EAAOkhB,EAAU1uD,IAGrB0vD,GAAqB/pC,IAGzB,OAAQA,EAAM/jB,KACZ,KAAKuT,EACL,KAAKE,EACL,KAAKC,EACL,KAAKF,EACL,KAAKG,EACL,KAAKG,EACL,KAAKD,EACL,KAAKD,EACH,OAAO,EACT,QACE,OAAO,IAIPm6C,GAA+B,KACd,OAAjB3B,IAA+C,OAAtBC,IAC3BsB,GAAetB,GAAmBD,IAEpCC,GAAoB,KACpBD,GAAe,KACfI,IAAmC,GAG/BwB,GAAc,KAGlB,IAAIjqC,EAAQooC,GACZ,KAAOpoC,GACDA,EAAMkqC,yBACRJ,GAAa9pC,EAAO,KAAM,MAE5BA,EAAQA,EAAM5O,QAIZ+4C,GAA2BnqC,IACV,OAAjBA,EAAM5O,QACR+4C,GAAwBnqC,EAAM5O,QAE5B4O,EAAMkqC,yBACRT,GAAezpC,EAAO,OAIpBoqC,GAAe,KAEE,OAAjBhC,IACF+B,GAAwB/B,KAIrB,SAASiC,KACV7wD,MACFmvD,KA6CG,SAAS2B,GAAetqC,GAC7B,GAAIxmB,KAAqB,CACvB,IAAKuuD,IAAsBgC,GAAkB/pC,GAC3C,OAIF,GADAooC,GAAepoC,GACVypC,GAAezpC,EAAO,MACzB,OAEFA,EAAMkqC,yBAA0B,GAI7B,SAASK,GAAgBvqC,GAC9B,GAAIxmB,KAAqB,CACvB,IAAKuuD,IAAsBgC,GAAkB/pC,GAC3C,OAIFA,EAAMkqC,yBAA0B,EAChCN,GAAe5pC,EAAO,OAInB,SAASwqC,GAAcxqC,GAC5B,GAAIxmB,KAAqB,CACvB,IAAKuuD,IAAsBgC,GAAkB/pC,GAC3C,OAIF,GADAooC,GAAepoC,EAAM5O,QAChB4O,EAAMkqC,wBACT,OAEFlqC,EAAMkqC,yBAA0B,EAChCJ,GAAa9pC,EAAO,KAAM,OAIvB,SAASyqC,GAAoBzqC,GAClC,GAAIxmB,KAAqB,CACvB,IAAKuuD,IAAsBgC,GAAkB/pC,GAC3C,OAIF,GADAooC,GAAepoC,EAAM5O,QAChB4O,EAAMkqC,wBACT,OAEFlqC,EAAMkqC,yBAA0B,EAChC,MAAM7vD,EACJ2lB,EAAM/jB,MAAQiU,IACd8P,EAAM/jB,MAAQsU,GACV,0BACA,iDACNu5C,GAAa9pC,EAAO,KAAM3lB,IAIvB,SAASqwD,GAAgB1qC,EAAcxN,GAC5C,GAAIhZ,KAAqB,CACvB,IAAKuuD,GACH,OAGF,GADAiC,MACKP,GAAezpC,EAAOxN,GACzB,OAEF81C,GAAoBtoC,EACpBqoC,GAAe71C,GAIZ,SAASm4C,KACd,GAAInxD,KAAqB,CACvB,IAAKuuD,GACH,OAEF,GAAqB,OAAjBM,IAA+C,OAAtBC,GAA4B,CAIvDwB,GAAaxB,GAAmBD,GAHhBI,GACZ,+BACA,MAGNJ,GAAe,KACfC,GAAoB,MAmBjB,SAASsC,GACdC,EACAC,GAEA,GAAItxD,KAAqB,CACvB,IAAKuuD,GACH,OAEF,IAAI1tD,EAAU,KACd,GAAsB,OAAlBwwD,EACF,GAAIA,EAAc5uD,MAAQuT,EACxBnV,EAAU,yDACL,CAELA,EAAW,gBADW0B,aAAiB8uD,EAAc7uD,OAAS,iDAGvD0sD,GAA+B,IACxCruD,EAAU,gCAEZquD,GAA+B,EAC/B,IAAI7gB,EAAQijB,EACR,8CACA,uCAEJb,KACAhB,GAAQphB,EAAO,8BAA+BxtC,IC7XlD,MAAM0wD,GAAyB,GAE/B,IAAIC,GAGFA,GAAa,GAGf,ICFIC,GDEAC,IAAS,EAEb,SAASC,GAAgBvmC,GACvB,MAAO,CACL1nB,QAAS0nB,GAQb,SAAS3e,GAAOonC,EAAwBrtB,GAClCkrC,GAAQ,EAERvyD,aAAoB,EAAO,oBAMzBqnB,IAAUgrC,GAAWE,KACvBvyD,aAAoB,EAAO,4BAI/B00C,EAAOnwC,QAAU6tD,GAAWG,IAE5BH,GAAWG,IAAS,KAGlBF,GAAWE,IAAS,KAGtBA,MAGF,SAASrlD,GAAQwnC,EAAwB1pC,EAAUqc,GACjDkrC,KAEAH,GAAWG,IAAS7d,EAAOnwC,QAGzB8tD,GAAWE,IAASlrC,EAGtBqtB,EAAOnwC,QAAUyG,EC7CjBsnD,GAAoC,GAG/B,MAAMG,GAAqB,GAEhClsD,OAAO2/C,OAAOuM,IAIhB,IAAIC,GAA0CF,GAAaC,IAEvDE,GAAkDH,IAAa,GAI/DI,GAA0BH,GAE9B,SAASI,GACPprC,EACAqrC,EACAC,GAEA,OAAIA,GAA+BC,GAAkBF,GAK5CF,GAEFF,GAAmBnuD,QAG5B,SAAS0uD,GACPxrC,EACAyrC,EACAC,GAEA,MAAMtzC,EAAW4H,EAAe9R,UAChCkK,EAASuzC,4CAA8CF,EACvDrzC,EAASwzC,0CAA4CF,EAGvD,SAASG,GACP7rC,EACAyrC,GAEA,MAAM7vD,EAAOokB,EAAepkB,KACtBkwD,EAAelwD,EAAKkwD,aAC1B,IAAKA,EACH,OAAOd,GAMT,MAAM5yC,EAAW4H,EAAe9R,UAChC,GACEkK,GACAA,EAASuzC,8CAAgDF,EAEzD,OAAOrzC,EAASwzC,0CAGlB,MAAMjkD,EAAU,GAChB,IAAK,IAAI3E,KAAO8oD,EACdnkD,EAAQ3E,GAAOyoD,EAAgBzoD,GAGpB,CACX,MAAM3K,EAAOsD,aAAiBC,IAAS,UACvCmB,KACE+uD,EACAnkD,EACA,UACAtP,EACA8nB,IAUJ,OAJI/H,GACFozC,GAAaxrC,EAAgByrC,EAAiB9jD,GAGzCA,EAGT,SAASokD,KACP,OAAOb,GAA0BpuD,QAGnC,SAASyuD,GAAkB3vD,GACzB,MAAMowD,EAAoBpwD,EAAKowD,kBAC/B,OAA6B,OAAtBA,QAAoDh0D,IAAtBg0D,EAGvC,SAASC,GAAWrsC,GAClB/Z,GAAIqlD,GAA2BtrC,GAC/B/Z,GAAIolD,GAAoBrrC,GAG1B,SAASssC,GAAyBtsC,GAChC/Z,GAAIqlD,GAA2BtrC,GAC/B/Z,GAAIolD,GAAoBrrC,GAG1B,SAASusC,GACPvsC,EACAjY,EACAykD,GAEA90D,YACE2zD,GAAmBnuD,UAAYkuD,GAC/B,2GAIFvlD,GAAKwlD,GAAoBtjD,EAASiY,GAClCna,GAAKylD,GAA2BkB,EAAWxsC,GAG7C,SAASysC,GACPzsC,EACAhkB,EACA0wD,GAEA,MAAMl0C,EAAWwH,EAAM1R,UACjB89C,EAAoBpwD,EAAKowD,kBAI/B,GAAwC,oBAA7B5zC,EAASm0C,gBAAgC,CACrC,CACX,MAAMpvD,EAAgBxB,aAAiBC,IAAS,UAE3CivD,GAAkC1tD,KACrC0tD,GAAkC1tD,IAAiB,EACnD5E,aACE,EACA,iLAGA4E,EACAA,IAIN,OAAOmvD,EAGT,IAAIE,EAEFlsC,GAAgB,mBAElBgqC,GAAgB1qC,EAAO,mBACvB4sC,EAAep0C,EAASm0C,kBACxBhC,KAEEjqC,GAAgB,MAElB,IAAK,IAAImsC,KAAcD,EACrBl1D,YACEm1D,KAAcT,EACd,sEACArwD,aAAiBC,IAAS,UAC1B6wD,GAGS,CACX,MAAMp0D,EAAOsD,aAAiBC,IAAS,UACvCmB,KACEivD,EACAQ,EACA,gBACAn0D,EAMA8nB,IAIJ,MAAO,IAAImsC,KAAkBE,GAG/B,SAASE,GAAoB1sC,GAC3B,MAAM5H,EAAW4H,EAAe9R,UAI1By+C,EACHv0C,GAAYA,EAASw0C,2CACtB5B,GAYF,OARAG,GAAkBF,GAAmBnuD,QACrC2I,GAAKwlD,GAAoB0B,EAA4B3sC,GACrDva,GACEylD,GACAA,GAA0BpuD,QAC1BkjB,IAGK,EAGT,SAAS6sC,GACP7sC,EACApkB,EACAwwD,GAEA,MAAMh0C,EAAW4H,EAAe9R,UAOhC,GANA5W,YACE8gB,EACA,oHAIEg0C,EAAW,CAIb,MAAMU,EAAgBT,GACpBrsC,EACApkB,EACAuvD,IAEF/yC,EAASw0C,0CAA4CE,EAIrDjnD,GAAIqlD,GAA2BlrC,GAC/Bna,GAAIolD,GAAoBjrC,GAExBva,GAAKwlD,GAAoB6B,EAAe9sC,GACxCva,GAAKylD,GAA2BkB,EAAWpsC,QAE3Cna,GAAIqlD,GAA2BlrC,GAC/Bva,GAAKylD,GAA2BkB,EAAWpsC,GC5P/C,IAAI+sC,GAAoB,KACpBC,GAAuB,KACvBC,IAAiB,EAErB,SAASC,GAAYh8C,GACnB,OAAO,SAASC,GACd,IACE,OAAOD,EAAGC,GACV,MAAO3O,GACSyqD,KACdA,IAAiB,EACjB10D,aACE,EACA,0CACAiK,MAOH,MAAM2qD,GAC+B,qBAAnCC,+BC1BM,kBCCR,MAAMC,GAAS,EACTC,GAAQ,EACRC,GAAOC,GAEdC,GAAY,GACZC,GAAsBF,GAAwB,EAG7C,SAASG,GAAmBC,GAEjC,OAAOF,IAAwBE,EAAKH,GAAa,GAG5C,SAASI,GAAmB/mD,GACjC,OAAQ4mD,GAAsB5mD,GAAkB2mD,GAOlD,SAASK,GACPC,EACAC,EACAC,GAEA,OACEP,IATgC,IAW9BA,GAAsBK,EAAcC,EAAiBP,KAZ7BS,EAaxBD,EAAeR,IAZU,IAAUS,EADzC,IAA8BA,EAkBvB,MAAMC,GAA0B,IAC1BC,GAA0B,IAEhC,SAASC,GACdN,GAEA,OAAOD,GACLC,EACAI,GACAC,IAeG,MAAME,GAAqC,IACrCC,GAA2B,IC9DjC,MAAMC,GAAY,EACZC,GAAiB,EACjBC,GAAa,EACbC,GAAc,E,YCkD3B,IAAIC,GAoJAC,GAjJFD,IAAoB,EACpB,IACE,MAAME,EAAsBhwD,OAAOiwD,kBAAkB,IAC/CC,EAAU,IAAIC,IAAI,CAAC,CAACH,EAAqB,QACzCI,EAAU,IAAIjI,IAAI,CAAC6H,IAIzBE,EAAQp3C,IAAI,EAAG,GACfs3C,EAAQ/H,IAAI,GACZ,MAAOtvD,IAEP+2D,IAAoB,EA2IxB,SAASO,GACPtzD,EACAuzD,EACApsD,EACA+uC,GAGAzqC,KAAKzL,IAAMA,EACXyL,KAAKtE,IAAMA,EACXsE,KAAK+nD,YAAc,KACnB/nD,KAAK1L,KAAO,KACZ0L,KAAK4G,UAAY,KAGjB5G,KAAK0J,OAAS,KACd1J,KAAKqmB,MAAQ,KACbrmB,KAAKsmB,QAAU,KACftmB,KAAKwjD,MAAQ,EAEbxjD,KAAKgoD,IAAM,KAEXhoD,KAAK8nD,aAAeA,EACpB9nD,KAAKioD,cAAgB,KACrBjoD,KAAKkoD,YAAc,KACnBloD,KAAKmoD,cAAgB,KACrBnoD,KAAKooD,oBAAsB,KAE3BpoD,KAAKyqC,KAAOA,EAGZzqC,KAAK+lB,UAAYpB,GACjB3kB,KAAKqoD,WAAa,KAElBroD,KAAKsoD,YAAc,KACnBtoD,KAAKuoD,WAAa,KAElBvoD,KAAKR,eAAiBumD,GACtB/lD,KAAKwoD,oBAAsBzC,GAE3B/lD,KAAKyK,UAAY,KAEbrY,OAaF4N,KAAKyoD,eAAiBC,OAAOC,IAC7B3oD,KAAK4oD,gBAAkBF,OAAOC,IAC9B3oD,KAAK6oD,iBAAmBH,OAAOC,IAC/B3oD,KAAK8oD,iBAAmBJ,OAAOC,IAK/B3oD,KAAKyoD,eAAiB,EACtBzoD,KAAK4oD,iBAAmB,EACxB5oD,KAAK6oD,iBAAmB,EACxB7oD,KAAK8oD,iBAAmB,GAIxB9oD,KAAKgiD,SAAWuF,KAChBvnD,KAAKwY,aAAe,KACpBxY,KAAKuY,YAAc,KACnBvY,KAAKwiD,yBAA0B,EAC/BxiD,KAAK+oD,gBAAkB,KAClBzB,IAAyD,oBAA7B9vD,OAAOiwD,mBACtCjwD,OAAOiwD,kBAAkBznD,MA9E7BunD,GAAe,EAgGjB,MAAMyB,GAAc,SAClBz0D,EACAuzD,EACApsD,EACA+uC,GAGA,OAAO,IAAIod,GAAUtzD,EAAKuzD,EAAcpsD,EAAK+uC,IAG/C,SAASwe,GAAgBlF,GACvB,MAAMtyD,EAAYsyD,EAAUtyD,UAC5B,SAAUA,IAAaA,EAAUy3D,kBA2B5B,SAASC,GACd3zD,EACAsyD,EACAtoD,GAEA,IAAIkZ,EAAiBljB,EAAQiV,UAoE7B,OAnEuB,OAAnBiO,GAMFA,EAAiBswC,GACfxzD,EAAQjB,IACRuzD,EACAtyD,EAAQkG,IACRlG,EAAQi1C,MAEV/xB,EAAeqvC,YAAcvyD,EAAQuyD,YACrCrvC,EAAepkB,KAAOkB,EAAQlB,KAC9BokB,EAAe9R,UAAYpR,EAAQoR,UAIjC8R,EAAespC,SAAWxsD,EAAQwsD,SAClCtpC,EAAeF,aAAehjB,EAAQgjB,aACtCE,EAAeH,YAAc/iB,EAAQ+iB,YACrCG,EAAeqwC,gBAAkBvzD,EAAQuzD,gBAG3CrwC,EAAejO,UAAYjV,EAC3BA,EAAQiV,UAAYiO,IAEpBA,EAAeovC,aAAeA,EAI9BpvC,EAAeqN,UAAYpB,GAG3BjM,EAAe2vC,WAAa,KAC5B3vC,EAAe4vC,YAAc,KAC7B5vC,EAAe6vC,WAAa,KAExBn2D,OAKFsmB,EAAe+vC,eAAiB,EAChC/vC,EAAekwC,iBAAmB,IAItClwC,EAAe8vC,oBAAsBhzD,EAAQgzD,oBAC7C9vC,EAAelZ,eAAiBhK,EAAQgK,eAExCkZ,EAAe2N,MAAQ7wB,EAAQ6wB,MAC/B3N,EAAeuvC,cAAgBzyD,EAAQyyD,cACvCvvC,EAAeyvC,cAAgB3yD,EAAQ2yD,cACvCzvC,EAAewvC,YAAc1yD,EAAQ0yD,YACrCxvC,EAAe0vC,oBAAsB5yD,EAAQ4yD,oBAG7C1vC,EAAe4N,QAAU9wB,EAAQ8wB,QACjC5N,EAAe8qC,MAAQhuD,EAAQguD,MAC/B9qC,EAAesvC,IAAMxyD,EAAQwyD,IAEzB51D,OACFsmB,EAAemwC,iBAAmBrzD,EAAQqzD,iBAC1CnwC,EAAeowC,iBAAmBtzD,EAAQszD,kBAGrCpwC,EAgBF,SAAS0wC,GACd90D,EACAoH,EACAosD,EACAlxD,EACA6zC,EACAjrC,GAEA,IAAI8Y,EAEA+wC,EAAWxhD,EAEXyhD,EAAeh1D,EACnB,GAAoB,oBAATA,EACL20D,GAAgB30D,KAClB+0D,EAAWzhD,QAER,GAAoB,kBAATtT,EAChB+0D,EAAWrhD,OAEXuhD,EAAQ,OAAQj1D,GACd,KAAKjB,KACH,OAAOm2D,GACL1B,EAAap3B,SACb+Z,EACAjrC,EACA9D,GAEJ,KAAKhI,KACH,OAAO+1D,GACL3B,EACArd,EAAO0c,GAAiBC,GACxB5nD,EACA9D,GAEJ,KAAKpI,KACH,OAAOm2D,GACL3B,EACArd,EAAO2c,GACP5nD,EACA9D,GAEJ,KAAKnI,KACH,OAqGR,SACEu0D,EACArd,EACAjrC,EACA9D,GAI+B,kBAApBosD,EAAalpD,IACa,oBAA1BkpD,EAAa4B,UAEpBz4D,aACE,EACA,yEAKN,MAAMqnB,EAAQ0wC,GAAYzgD,EAAUu/C,EAAcpsD,EAAK+uC,EAAO4c,IAM9D,OAJA/uC,EAAMyvC,YAAcx0D,KACpB+kB,EAAMhkB,KAAOf,KACb+kB,EAAM9Y,eAAiBA,EAEhB8Y,EA7HMqxC,CAAwB7B,EAAcrd,EAAMjrC,EAAgB9D,GACrE,KAAK9H,KACH,OAkJD,SACLk0D,EACArd,EACAjrC,EACA9D,GAEA,MAAM4c,EAAQ0wC,GAAYxgD,GAAmBs/C,EAAcpsD,EAAK+uC,GAG1Dn2C,EAAOV,KAKb,OAJA0kB,EAAMyvC,YAAczzD,EACpBgkB,EAAMhkB,KAAOA,EAEbgkB,EAAM9Y,eAAiBA,EAChB8Y,EAhKMsxC,CAAwB9B,EAAcrd,EAAMjrC,EAAgB9D,GACrE,QAAS,CACP,GAAoB,kBAATpH,GAA8B,OAATA,EAC9B,OAAQA,EAAKG,UACX,KAAKjB,KACH61D,EAAWhhD,EACX,MAAMkhD,EACR,KAAK91D,KAEH41D,EAAWjhD,EACX,MAAMmhD,EACR,KAAK51D,KACH01D,EAAW/gD,EACX,MAAMihD,EACR,KAAK11D,KACHw1D,EAAW5gD,GACX,MAAM8gD,EACR,KAAKz1D,KACHu1D,EAAW1gD,GACX2gD,EAAe,KACf,MAAMC,EAGZ,IAAI5wC,EAAO,GACE,OAEAjoB,IAAT4D,GACiB,kBAATA,GACG,OAATA,GAC6B,IAA7BkD,OAAOyD,KAAK3G,GAAMpD,UAEpBynB,GACE,oIAIJ,MAAMpf,EAAY3C,EAAQvC,aAAiBuC,EAAMtC,MAAQ,KACrDiF,IACFof,GAAQ,mCAAqCpf,EAAY,MAG7DvJ,aACE,EACA,qIAGQ,MAARsE,EAAeA,SAAcA,EAC7BqkB,IAWR,OALAL,EAAQ0wC,GAAYK,EAAUvB,EAAcpsD,EAAK+uC,GACjDnyB,EAAMyvC,YAAczzD,EACpBgkB,EAAMhkB,KAAOg1D,EACbhxC,EAAM9Y,eAAiBA,EAEhB8Y,EAGF,SAASuxC,GACdnzD,EACA+zC,EACAjrC,GAEA,IAAI5I,EAAQ,KAEVA,EAAQF,EAAQG,OAElB,MAGMyhB,EAAQ8wC,GAHD1yD,EAAQpC,KACToC,EAAQgF,IACChF,EAAQmQ,MAK3BjQ,EACA6zC,EACAjrC,GAMF,OAHE8Y,EAAME,aAAe9hB,EAAQK,QAC7BuhB,EAAMC,YAAc7hB,EAAQG,OAEvByhB,EAGF,SAASkxC,GACdM,EACArf,EACAjrC,EACA9D,GAEA,MAAM4c,EAAQ0wC,GAAY9gD,EAAU4hD,EAAUpuD,EAAK+uC,GAEnD,OADAnyB,EAAM9Y,eAAiBA,EAChB8Y,EA8BT,SAASmxC,GACP3B,EACArd,EACAjrC,EACA9D,GAEA,MAAM4c,EAAQ0wC,GAAY7gD,EAAM2/C,EAAcpsD,EAAK+uC,GAG7Cn2C,GACHm2C,EAAO0c,MAAoBD,GACxB5zD,KACAI,KAKN,OAJA4kB,EAAMyvC,YAAczzD,EACpBgkB,EAAMhkB,KAAOA,EAEbgkB,EAAM9Y,eAAiBA,EAChB8Y,EAoBF,SAASyxC,GACdj5B,EACA2Z,EACAjrC,GAEA,MAAM8Y,EAAQ0wC,GAAY/gD,EAAU6oB,EAAS,KAAM2Z,GAEnD,OADAnyB,EAAM9Y,eAAiBA,EAChB8Y,EAWF,SAAS0xC,GACdC,EACAxf,EACAjrC,GAEA,MAAMsoD,EAAmC,OAApBmC,EAAOv5B,SAAoBu5B,EAAOv5B,SAAW,GAC5DpY,EAAQ0wC,GAAYjhD,EAAY+/C,EAAcmC,EAAOvuD,IAAK+uC,GAOhE,OANAnyB,EAAM9Y,eAAiBA,EACvB8Y,EAAM1R,UAAY,CAChBujB,cAAe8/B,EAAO9/B,cACtB+/B,gBAAiB,KACjBC,eAAgBF,EAAOE,gBAElB7xC,EAIF,SAAS8xC,GACdhvD,EACA9B,GAgDA,OA9Ce,OAAX8B,IAGFA,EAAS4tD,GAAYnhD,EAAwB,KAAM,KAAMq/C,KAS3D9rD,EAAO7G,IAAM+E,EAAO/E,IACpB6G,EAAOM,IAAMpC,EAAOoC,IACpBN,EAAO2sD,YAAczuD,EAAOyuD,YAC5B3sD,EAAO9G,KAAOgF,EAAOhF,KACrB8G,EAAOwL,UAAYtN,EAAOsN,UAC1BxL,EAAOsO,OAASpQ,EAAOoQ,OACvBtO,EAAOirB,MAAQ/sB,EAAO+sB,MACtBjrB,EAAOkrB,QAAUhtB,EAAOgtB,QACxBlrB,EAAOooD,MAAQlqD,EAAOkqD,MACtBpoD,EAAO4sD,IAAM1uD,EAAO0uD,IACpB5sD,EAAO0sD,aAAexuD,EAAOwuD,aAC7B1sD,EAAO6sD,cAAgB3uD,EAAO2uD,cAC9B7sD,EAAO8sD,YAAc5uD,EAAO4uD,YAC5B9sD,EAAO+sD,cAAgB7uD,EAAO6uD,cAC9B/sD,EAAOgtD,oBAAsB9uD,EAAO8uD,oBACpChtD,EAAOqvC,KAAOnxC,EAAOmxC,KACrBrvC,EAAO2qB,UAAYzsB,EAAOysB,UAC1B3qB,EAAOitD,WAAa/uD,EAAO+uD,WAC3BjtD,EAAOktD,YAAchvD,EAAOgvD,YAC5BltD,EAAOmtD,WAAajvD,EAAOivD,WAC3BntD,EAAOoE,eAAiBlG,EAAOkG,eAC/BpE,EAAOotD,oBAAsBlvD,EAAOkvD,oBACpCptD,EAAOqP,UAAYnR,EAAOmR,UACtBrY,OACFgJ,EAAOqtD,eAAiBnvD,EAAOmvD,eAC/BrtD,EAAOwtD,gBAAkBtvD,EAAOsvD,gBAChCxtD,EAAOytD,iBAAmBvvD,EAAOuvD,iBACjCztD,EAAO0tD,iBAAmBxvD,EAAOwvD,kBAEnC1tD,EAAO4mD,SAAW1oD,EAAO0oD,SACzB5mD,EAAOod,aAAelf,EAAOkf,aAC7Bpd,EAAOmd,YAAcjf,EAAOif,YAC5Bnd,EAAOonD,wBAA0BlpD,EAAOkpD,wBACxCpnD,EAAO2tD,gBAAkBzvD,EAAOyvD,gBACzB3tD,E,YCjnBF,SAASivD,GACdlgC,EACAmgC,EACAC,GAIA,MAAMC,EDwTD,SAA6BF,GAClC,IAAI7f,EAAO6f,EAAenD,GAAiBC,GAAaF,GASxD,OAPI90D,MAAuByzD,KAIzBpb,GAAQ4c,IAGH2B,GAAYlhD,EAAU,KAAM,KAAM2iC,GClUdggB,CAAoBH,GAE/C,IAAIn8C,EAmEJ,OAjEEA,EADE7b,KACM,CACNkD,QAASg1D,EACTrgC,cAAeA,EACf+/B,gBAAiB,KAEjBQ,oBAAqB3E,GACrB4E,kBAAmB5E,GACnB6E,sBAAuB7E,GACvB8E,oBAAqB9E,GACrB+E,iBAAkB/E,GAElBgF,UAAW,KAEX/pD,UAAU,EAEVgqD,4BAA6BjF,GAC7BkF,aAAc,KACdC,cAAejN,GACf59C,QAAS,KACT8qD,eAAgB,KAChBZ,UACAa,2BAA4BrF,GAC5BvmD,eAAgBumD,GAChBsF,WAAY,KACZC,kBAAmB,KAEnBC,oBAAqBxyD,kCACrByyD,qBAAsB,IAAI7L,IAC1B8L,sBAAuB,IAAI9D,KAGrB,CACNnyD,QAASg1D,EACTrgC,cAAeA,EACf+/B,gBAAiB,KAEjBa,UAAW,KAEXL,oBAAqB3E,GACrB4E,kBAAmB5E,GACnB6E,sBAAuB7E,GACvB8E,oBAAqB9E,GACrB+E,iBAAkB/E,GAElB/kD,UAAU,EAEVgqD,4BAA6BjF,GAC7BkF,aAAc,KACdC,cAAejN,GACf59C,QAAS,KACT8qD,eAAgB,KAChBZ,UACAa,2BAA4BrF,GAC5BvmD,eAAgBumD,GAChBsF,WAAY,KACZC,kBAAmB,MAIvBd,EAAmB5jD,UAAYuH,EAMtBA,E,aC5JX,MAAMu9C,GAA0B,CAC9BC,2BACAC,oCACAC,wCACAC,0BAA0BxzC,EAAcxH,KACxCi7C,8BAA8BzzC,EAAcxH,KAC5Ck7C,2BAA2B1zC,EAAcxH,KACzCm7C,+BAGW,CACX,MAAMC,EAAwB,CAC5BC,0BAA2B,oBAC3BC,iCAAkC,kCAClCC,2BAA4B,sBAG9B,IAAIC,EAAkD,GAClDC,EAAyD,GACzDC,EAAmD,GACnDC,EAAsD,IAAI9E,IAC1D+E,EAAyD,IAAI/E,IAGjE,MAAMgF,EAAmC,IAAIhN,IACvCiN,EAA+B,IAAIjN,IACnCkN,EAA4B,IAAIlN,IAEhCmN,EAAoBx8C,IACxB,MAAMy8C,EAAQ,GAId,OAHAz8C,EAAIvV,QAAQkB,IACV8wD,EAAM5uD,KAAKlC,KAEN8wD,EAAMC,OAAOpyD,KAAK,OAG3B8wD,GAAwBC,uBAAyB,KAC/CW,EAAoC,GACpCC,EAA2C,GAC3CC,EAAqC,GACrCC,EAAiC,IAAI9E,IACrC+E,EAA8B,IAAI/E,KAGpC+D,GAAwBG,oCAAsC,KAC1DY,EAA2D1xD,QAC3D,CAACkyD,EAAsBC,KACrB,MAAMC,EAA4B,GAsBlC,GApBA31D,OAAOyD,KAAKgyD,GAAsBlyD,QAAQqyD,IACxC,MAAMC,EAAoBJ,EAAqBG,GAC/C,GAAIC,EAAkBn8D,OAAS,EAAG,CAChC,MAAMo8D,EAAiB,IAAI3N,IAC3B0N,EAAkBtyD,QAAQud,IACxBg1C,EAAezN,IAAIxrD,aAAiBikB,EAAMhkB,OAAS,aACnDs4D,EAA6B/M,IAAIvnC,EAAMhkB,QAGzC,MAAMi5D,EAAYH,EAAUt8D,QAAQ,UAAW,IACzC08D,EAAatB,EAAsBkB,GACnCK,EAAuBX,EAAkBQ,GAE/CH,EAA0BhvD,KACvB,GAAEovD,oDACA,GAAEC,cAAuBC,QAK9BN,EAA0Bj8D,OAAS,EAAG,CACxC,MAAMw8D,EAA2Bj1C,GAC/By0C,GAGFj8D,aACE,EACA,0JAIAy8D,EACAP,EAA0BvyD,KAAK,YAMvC6xD,EAAiC,IAAI9E,KAGvC,MAAMgG,EAAkBr1C,IACtB,IAAIs1C,EAAkB,KAElBvkD,EAAOiP,EACX,KAAgB,OAATjP,GACDA,EAAKohC,KAAO2c,KACdwG,EAAkBvkD,GAEpBA,EAAOA,EAAKK,OAGd,OAAOkkD,GAGTlC,GAAwBE,gCAAkC,KACxD,GAAIU,EAAkCp7D,OAAS,EAAG,CAChD,MAAM28D,EAAc,IAAIlO,IACxB2M,EAAkCvxD,QAAQud,IACxCu1C,EAAYhO,IAAIxrD,aAAiBikB,EAAMhkB,OAAS,aAChDq4D,EAAiC9M,IAAIvnC,EAAMhkB,QAG7C,MAAMw5D,EAAchB,EAAkBe,GAEtC12D,cACE,EACA,mUAMA22D,GAGFxB,EAAoC,GAGtC,GAAIC,EAAyCr7D,OAAS,EAAG,CACvD,MAAM28D,EAAc,IAAIlO,IACxB4M,EAAyCxxD,QAAQud,IAC/Cu1C,EAAYhO,IAAIxrD,aAAiBikB,EAAMhkB,OAAS,aAChDq4D,EAAiC9M,IAAIvnC,EAAMhkB,QAG7C,MAAMw5D,EAAchB,EAAkBe,GAEtC12D,cACE,EACA,gRAKA22D,GAGFvB,EAA2C,GAG7C,GAAIC,EAAmCt7D,OAAS,EAAG,CACjD,MAAM28D,EAAc,IAAIlO,IACxB6M,EAAmCzxD,QAAQud,IACzCu1C,EAAYhO,IAAIxrD,aAAiBikB,EAAMhkB,OAAS,aAChDq4D,EAAiC9M,IAAIvnC,EAAMhkB,QAG7C,MAAMw5D,EAAchB,EAAkBe,GAEtC12D,cACE,EACA,sUAMA22D,GAGFtB,EAAqC,KAIzCd,GAAwBI,0BAA4B,CAClDxzC,EACAxH,KAGI67C,EAAiC1K,IAAI3pC,EAAMhkB,QAMN,oBAAhCwc,EAASi9C,qBAC6C,IAA7Dj9C,EAASi9C,mBAAmBC,8BAE5B1B,EAAkCnuD,KAAKma,GAGO,oBAAvCxH,EAASm9C,4BACoD,IAApEn9C,EAASm9C,0BAA0BD,8BAEnCzB,EAAyCpuD,KAAKma,GAGN,oBAAjCxH,EAASo9C,sBAC8C,IAA9Dp9C,EAASo9C,oBAAoBF,8BAE7BxB,EAAmCruD,KAAKma,KAI5CozC,GAAwBK,8BAAgC,CACtDzzC,EACAxH,KAEA,MAAMo8C,EAAaS,EAAer1C,GAClC,GAAmB,OAAf40C,EAMF,YALAj8D,aACE,EACA,uIAWJ,GAAI27D,EAA6B3K,IAAI3pC,EAAMhkB,MACzC,OAGF,IAAI65D,EACC1B,EAA+BxK,IAAIiL,GAStCiB,EAAkB1B,EAA+Bl8C,IAAI28C,IARrDiB,EAAkB,CAChBhC,0BAA2B,GAC3BC,iCAAkC,GAClCC,2BAA4B,IAG9BI,EAA+Bn8C,IAAI48C,EAAYiB,IAKjD,MAAMC,EAAmB,IAEiB,oBAAhCt9C,EAASi9C,qBAC8C,IAA7Dj9C,EAASi9C,mBAAmBC,8BACgB,oBAAvCl9C,EAASq7C,4BAEhBiC,EAAiBjwD,KAAK,8BAGyB,oBAAvC2S,EAASm9C,4BAEb,IADFn9C,EAASm9C,0BAA0BD,8BAEgB,oBAA9Cl9C,EAASs7C,mCAEhBgC,EAAiBjwD,KAAK,qCAGmB,oBAAjC2S,EAASo9C,sBAC+C,IAA9Dp9C,EAASo9C,oBAAoBF,8BACgB,oBAAxCl9C,EAASu7C,6BAEhB+B,EAAiBjwD,KAAK,8BAGpBiwD,EAAiBl9D,OAAS,GAC5Bk9D,EAAiBrzD,QAAQqyD,IACrBe,EAAiDf,GAAWjvD,KAC5Dma,MAMRozC,GAAwBM,2BAA6B,CACnD1zC,EACAxH,KAEA,MAAMo8C,EAAaS,EAAer1C,GAClC,GAAmB,OAAf40C,EAMF,YALAj8D,aACE,EACA,uIAOJ,GAAI47D,EAA0B5K,IAAI3pC,EAAMhkB,MACtC,OAGF,IAAI65D,EAAkBzB,EAA4Bn8C,IAAI28C,IAGzB,MAA3B50C,EAAMhkB,KAAKkwD,cACqB,MAAhClsC,EAAMhkB,KAAKowD,mBACG,OAAb5zC,GAAyD,oBAA7BA,EAASm0C,wBAEdv0D,IAApBy9D,IACFA,EAAkB,GAClBzB,EAA4Bp8C,IAAI48C,EAAYiB,IAE9CA,EAAgBhwD,KAAKma,KAIzBozC,GAAwBO,0BAA4B,KAChDS,EAA8D3xD,QAC9D,CAACszD,EAAwBnB,KACvB,MAAMW,EAAc,IAAIlO,IACxB0O,EAAWtzD,QAAQud,IACjBu1C,EAAYhO,IAAIxrD,aAAiBikB,EAAMhkB,OAAS,aAChDu4D,EAA0BhN,IAAIvnC,EAAMhkB,QAGtC,MAAMw5D,EAAchB,EAAkBe,GAChCH,EAA2Bj1C,GAC/By0C,GAGFj8D,aACE,EACA,oMAIAy8D,EACAI,MAOKpC,U,oBCxVR,SAAS4C,GACdngD,EACA3O,GAKA2O,EAAKnN,UAAW,EAGhB,MAAM0pD,EAAsBv8C,EAAKu8C,oBACjC,GAAIA,IAAwB3E,GAE1B53C,EAAKu8C,oBAAsBv8C,EAAKw8C,kBAAoBnrD,OAEpD,GAAIkrD,EAAsBlrD,EAExB2O,EAAKu8C,oBAAsBlrD,MACtB,CACqB2O,EAAKw8C,kBACPnrD,IAEtB2O,EAAKw8C,kBAAoBnrD,GAI/B+uD,GAA+B/uD,EAAgB2O,GA8G1C,SAASqgD,GACdrgD,EACAsgD,GAEAtgD,EAAKnN,UAAW,EAwDlB,SAAmBmN,EAAMugD,GACEvgD,EAAK28C,kBACN4D,IACtBvgD,EAAK28C,iBAAmB/E,IA1D1B4I,CAAUxgD,EAAMsgD,GAGhB,MAAM/D,EAAsBv8C,EAAKu8C,oBAC3BC,EAAoBx8C,EAAKw8C,kBAC3BD,IAAwB+D,EAGxBtgD,EAAKu8C,oBAFHC,IAAsB8D,EAEGtgD,EAAKw8C,kBAAoB5E,GAIzB4E,EAEpBA,IAAsB8D,IAG/BtgD,EAAKw8C,kBAAoBD,GAI3B,MAAME,EAAwBz8C,EAAKy8C,sBAC7BC,EAAsB18C,EAAK08C,oBAC7BD,IAA0B7E,GAE5B53C,EAAKy8C,sBAAwBz8C,EAAK08C,oBAAsB4D,EAEpD7D,EAAwB6D,EAE1BtgD,EAAKy8C,sBAAwB6D,EACpB5D,EAAsB4D,IAE/BtgD,EAAK08C,oBAAsB4D,GAI/BF,GAA+BE,EAAetgD,GA0BzC,SAASygD,GACdzgD,EACA0gD,GAEA,IAAIC,EAAyBD,EAE7B,MAAMnE,EAAsBv8C,EAAKu8C,oBAC3BE,EAAwBz8C,EAAKy8C,sBAOnC,OANIF,EAAsBoE,IACxBA,EAAyBpE,GAEvBE,EAAwBkE,IAC1BA,EAAyBlE,GAEpBkE,EAGF,SAASC,GACd5gD,EACAs4C,GAEA,MAAMjnD,EAAiB2O,EAAK3O,eACxBA,IAAmBumD,IAAUU,GAAejnD,IAE9C2O,EAAKi9C,2BAA6B3E,GAItC,SAAS8H,GAA+BS,EAAyB7gD,GAC/D,MAAMy8C,EAAwBz8C,EAAKy8C,sBAC7BC,EAAsB18C,EAAK08C,oBAC3BH,EAAsBv8C,EAAKu8C,oBAC3BI,EAAmB38C,EAAK28C,iBAI9B,IAAIM,EACFV,IAAwB3E,GAAS2E,EAAsBI,EAKvDM,IAA+BrF,KAC9BiJ,IAA4BjJ,IAC3B8E,EAAsBmE,KAKxB5D,EAA6BP,GAG/B,IAAIrrD,EAAiB4rD,EACjB5rD,IAAmBumD,IAAU6E,EAAwBprD,IAEvDA,EAAiBorD,GAGnBz8C,EAAKi9C,2BAA6BA,EAClCj9C,EAAK3O,eAAiBA,E,aC1QjB,SAASyvD,GAAoBlL,EAAgBmL,GAClD,GAAInL,GAAaA,EAAUoL,aAAc,CAEvC,MAAMtoD,EAAQrP,OAAOD,OAAO,GAAI23D,GAC1BC,EAAepL,EAAUoL,aAC/B,IAAK,IAAIp/C,KAAYo/C,OACKz+D,IAApBmW,EAAMkJ,KACRlJ,EAAMkJ,GAAYo/C,EAAap/C,IAGnC,OAAOlJ,EAET,OAAOqoD,EC+BT,MAAME,GAAuB,GACvBlqD,GAAU3E,MAAM2E,QAITmqD,IAAkB,IAAIp4D,IAAM8sD,WAAYuL,KAErD,IAAIC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAES,CACXT,GAA0C,IAAI5P,IAC9C6P,GAAiC,IAAI7P,IACrC8P,GAAsD,IAAI9P,IAC1D+P,GAA8C,IAAI/P,IAClDmQ,GAA4C,IAAInQ,IAChDgQ,GAAoC,IAAIhQ,IACxCoQ,GAAyC,IAAIpQ,IAC7CqQ,GAAoC,IAAIrQ,IAExC,MAAMsQ,EAA2B,IAAItQ,IAErCkQ,GAAwB,SAASvwD,EAAiB4wD,GAChD,GAAiB,OAAb5wD,GAAyC,oBAAbA,EAC9B,OAEF,MAAM5D,EAAO,GAAEw0D,KAAe5wD,IACzB2wD,EAAyBhO,IAAIvmD,KAChCu0D,EAAyBpQ,IAAInkD,GAC7BzK,aACE,EACA,kGAEAi/D,EACA5wD,KAKNswD,GAA8B,SAASt7D,EAAM67D,GAC3C,QAAqBz/D,IAAjBy/D,EAA4B,CAC9B,MAAMt6D,EAAgBxB,aAAiBC,IAAS,YAC3Cq7D,GAAkC1N,IAAIpsD,KACzC85D,GAAkC9P,IAAIhqD,GACtC5E,aACE,EACA,+GAEA4E,MAWR2B,OAAOwE,eAAeozD,GAAsB,uBAAwB,CAClE33C,YAAY,EACZxb,MAAO,WACLjM,aACE,EACA,mVASNwH,OAAO2/C,OAAOiY,IAGT,SAASgB,GACd13C,EACA23C,EACAC,EACAtZ,GAEA,MAAMuZ,EAAY73C,EAAeyvC,eAI7Bn2D,MACCC,MACCymB,EAAe+xB,KAAO2c,KAGxBkJ,EAAyBtZ,EAAWuZ,GAIxC,MAAMJ,EAAeG,EAAyBtZ,EAAWuZ,GAGvDX,GAA4BS,EAAMF,GAGpC,MAAMhI,EACa,OAAjBgI,QAA0Cz/D,IAAjBy/D,EACrBI,EACA/4D,OAAOD,OAAO,GAAIg5D,EAAWJ,GACnCz3C,EAAeyvC,cAAgBA,EAI/B,MAAMD,EAAcxvC,EAAewvC,YACf,OAAhBA,GAAwBxvC,EAAelZ,iBAAmBumD,KAC5DmC,EAAYsI,UAAYrI,GAI5B,MAAMsI,GAAwB,CAC5B3O,U3DpHK,SAAmB4O,GACX,CACX,MAAM95D,EAASU,GAAkB9B,QACjC,GAAc,OAAVoB,GAAkBA,EAAMrC,MAAQqT,EAAgB,CAClD,MAAM+oD,EAAoB/5D,EACpBka,EAAW6/C,EAAW/pD,UAC5B3V,YACE6f,EAAS8/C,yBACT,wRAKAv8D,aAAiBs8D,EAAWr8D,OAAS,eAEvCwc,EAAS8/C,0BAA2B,GAIxC,MAAMt4C,EAAgBu4C,GAAYH,GAClC,QAAKp4C,GAGEwN,GAAmBxN,KAAWsN,I2D8FrCkrC,gBAAgBpsD,EAAMqsD,EAASzxD,GAC7B,MAAMgZ,EAAQu4C,GAAYnsD,GAEpBlF,EAAiBwxD,GADHC,KAC0C34C,GAExD44C,EAASC,GAAa3xD,GAC5B0xD,EAAOH,QAAUA,OACArgE,IAAb4O,GAAuC,OAAbA,IAE1BuwD,GAAsBvwD,EAAU,YAElC4xD,EAAO5xD,SAAWA,GAGpB8xD,KACAC,GAAc/4C,EAAO44C,GACrBI,GAAah5C,EAAO9Y,IAEtB+xD,oBAAoB7sD,EAAMqsD,EAASzxD,GACjC,MAAMgZ,EAAQu4C,GAAYnsD,GAEpBlF,EAAiBwxD,GADHC,KAC0C34C,GAExD44C,EAASC,GAAa3xD,GAC5B0xD,EAAO38D,IAAMi9D,GACbN,EAAOH,QAAUA,OAEArgE,IAAb4O,GAAuC,OAAbA,IAE1BuwD,GAAsBvwD,EAAU,gBAElC4xD,EAAO5xD,SAAWA,GAGpB8xD,KACAC,GAAc/4C,EAAO44C,GACrBI,GAAah5C,EAAO9Y,IAEtBiyD,mBAAmB/sD,EAAMpF,GACvB,MAAMgZ,EAAQu4C,GAAYnsD,GAEpBlF,EAAiBwxD,GADHC,KAC0C34C,GAExD44C,EAASC,GAAa3xD,GAC5B0xD,EAAO38D,IAAMm9D,QAEIhhE,IAAb4O,GAAuC,OAAbA,IAE1BuwD,GAAsBvwD,EAAU,eAElC4xD,EAAO5xD,SAAWA,GAGpB8xD,KACAC,GAAc/4C,EAAO44C,GACrBI,GAAah5C,EAAO9Y,KAIxB,SAASmyD,GACPj5C,EACA23C,EACA7S,EACAC,EACAmU,EACAC,EACAC,GAEA,MAAMhhD,EAAW4H,EAAe9R,UAChC,GAA8C,oBAAnCkK,EAASihD,sBAAsC,CACxD/O,GAAgBtqC,EAAgB,yBAChC,MAAMs5C,EAAelhD,EAASihD,sBAC5BtU,EACAoU,EACAC,GAaF,OAXA7O,KAGEhyD,iBACmBP,IAAjBshE,EACA,gHAEA39D,aAAiBg8D,IAAS,aAIvB2B,EAGT,OAAI3B,EAAK5+D,YAAa4+D,EAAK5+D,UAAUwgE,wBAEhC5tC,GAAam5B,EAAUC,KAAcp5B,GAAautC,EAAUC,IA6NnE,SAASK,GAAmBx5C,EAAuB5H,G7D7c5C,IAAkB7U,E6D8cvB6U,EAASqhD,QAAU1B,GACnB/3C,EAAe9R,UAAYkK,E7D/cJ7U,E6DidDyc,EAAV5H,E7DhdR4T,oBAAsBzoB,E6DkdxB6U,EAASshD,uBAAyBhD,GAItC,SAASiD,GACP35C,EACA23C,EACAxpD,EACAgoD,GAEA,IAAIyD,GAA0B,EAC1BnO,EAAkBT,GAClBrjD,EAAU,KACd,MAAMkyD,EAAclC,EAAKkC,YAGvB,GAAI,gBAAiBlC,EAAM,CAQzB,KALkB,OAAhBkC,QACiB7hE,IAAhB6hE,GACCA,EAAY99D,WAAahB,WACA/C,IAAzB6hE,EAAYC,YAECxC,GAAkC/N,IAAIoO,GAAO,CAC5DL,GAAkCnQ,IAAIwQ,GAEtC,IAAIhV,EAAW,GAEbA,OADkB3qD,IAAhB6hE,EAEA,0NAI8B,kBAAhBA,EACL,mCAAqCA,EAAc,IACrDA,EAAY99D,WAAajB,KACvB,gEACuB9C,IAAzB6hE,EAAYC,SAEV,2DAGT,+CACAh7D,OAAOyD,KAAKs3D,GAAa33D,KAAK,MAC9B,KAEJ3J,aACE,EACA,yHAEAoD,aAAiBg8D,IAAS,YAC1BhV,IAMR,GAA2B,kBAAhBkX,GAA4C,OAAhBA,EACrClyD,EAAUoyD,GAAaF,OAClB,CACLpO,EAAkBL,GAAmBprC,EAAgB23C,GAAM,GAC3D,MAAM7L,EAAe6L,EAAK7L,aAC1B8N,EACmB,OAAjB9N,QAA0C9zD,IAAjB8zD,EAC3BnkD,EAAUiyD,EACN/N,GAAiB7rC,EAAgByrC,GACjCT,IAMF1xD,MACCC,MACCymB,EAAe+xB,KAAO2c,KAExB,IAAIiJ,EAAKxpD,EAAOxG,GAIpB,MAAMyQ,EAAW,IAAIu/C,EAAKxpD,EAAOxG,GAC3B8f,EAASzH,EAAeyvC,cACT,OAAnBr3C,EAASqP,YAAqCzvB,IAAnBogB,EAASqP,MAChCrP,EAASqP,MACT,KAIJ,GAHF+xC,GAAmBx5C,EAAgB5H,GAGY,oBAAlCu/C,EAAKC,0BAAqD,OAAVnwC,EAAgB,CACzE,MAAMtqB,EAAgBxB,aAAiBg8D,IAAS,YAC3Cb,GAA+BvN,IAAIpsD,KACtC25D,GAA+B3P,IAAIhqD,GACnC5E,aACE,EACA,kRAIA4E,EACmB,OAAnBib,EAASqP,MAAiB,OAAS,YACnCtqB,IAQN,GAC2C,oBAAlCw6D,EAAKC,0BACgC,oBAArCx/C,EAAS4hD,wBAChB,CACA,IAAIC,EAAqB,KACrBC,EAA4B,KAC5BC,EAAsB,KA2B1B,GAzByC,oBAAhC/hD,EAASi9C,qBAC6C,IAA7Dj9C,EAASi9C,mBAAmBC,6BAE5B2E,EAAqB,qBACkC,oBAAvC7hD,EAASq7C,4BACzBwG,EAAqB,6BAGyB,oBAAvC7hD,EAASm9C,4BACoD,IAApEn9C,EAASm9C,0BAA0BD,6BAEnC4E,EAA4B,4BAEyB,oBAA9C9hD,EAASs7C,mCAEhBwG,EAA4B,oCAGY,oBAAjC9hD,EAASo9C,sBAC8C,IAA9Dp9C,EAASo9C,oBAAoBF,6BAE7B6E,EAAsB,sBACkC,oBAAxC/hD,EAASu7C,6BACzBwG,EAAsB,8BAGC,OAAvBF,GAC8B,OAA9BC,GACwB,OAAxBC,EACA,CACA,MAAMh9D,EAAgBxB,aAAiBg8D,IAAS,YAC1CyC,EACqC,oBAAlCzC,EAAKC,yBACR,6BACA,4BACDZ,GAA4CzN,IAAIpsD,KACnD65D,GAA4C7P,IAAIhqD,GAChD5E,aACE,EACA,kSAIA4E,EACAi9D,EACuB,OAAvBH,EAA+B,OAAMA,IAAuB,GAC9B,OAA9BC,EACK,OAAMA,IACP,GACoB,OAAxBC,EAAgC,OAAMA,IAAwB,MAaxE,OAJIP,GACFpO,GAAaxrC,EAAgByrC,EAAiB9jD,GAGzCyQ,EA8BT,SAASiiD,GACPr6C,EACA5H,EACA2sC,EACAqU,GAEA,MAAMF,EAAW9gD,EAASqP,MAU1B,GATA6iC,GAAgBtqC,EAAgB,6BACkB,oBAAvC5H,EAASm9C,2BAClBn9C,EAASm9C,0BAA0BxQ,EAAUqU,GAEU,oBAA9ChhD,EAASs7C,kCAClBt7C,EAASs7C,iCAAiC3O,EAAUqU,GAEtD7O,KAEInyC,EAASqP,QAAUyxC,EAAU,CAClB,CACX,MAAM/7D,EACJxB,aAAiBqkB,EAAepkB,OAAS,YACtCi7D,GAAwCtN,IAAIpsD,KAC/C05D,GAAwC1P,IAAIhqD,GAC5C5E,aACE,EACA,kJAGA4E,IAIN46D,GAAsBc,oBAAoBzgD,EAAUA,EAASqP,MAAO,OAKxE,SAAS6yC,GACPt6C,EACA23C,EACA5S,EACAoR,IArdF,SAA4Bn2C,EAAuB23C,EAAW5S,GAC5D,MAAM3sC,EAAW4H,EAAe9R,UACnB,CACX,MAAM7V,EAAOsD,aAAiBg8D,IAAS,YACjBv/C,EAAS/b,SAGzBs7D,EAAK5+D,WAA8C,oBAA1B4+D,EAAK5+D,UAAUsD,OAC1C9D,aACE,EACA,oIAEAF,GAGFE,aACE,EACA,mHAEAF,IAKN,MAAMkiE,GACHniD,EAASoiD,iBACVpiD,EAASoiD,gBAAgBC,sBACzBriD,EAASqP,MACXlvB,YACEgiE,EACA,oLAGAliE,GAEF,MAAMqiE,GACHtiD,EAASuiD,iBACVviD,EAASuiD,gBAAgBF,qBAC3BliE,YACEmiE,EACA,yLAGAriE,GAEF,MAAMuiE,GAAuBxiD,EAASyL,UACtCtrB,YACEqiE,EACA,0GAEAviE,GAEF,MAAMwiE,GAAyBziD,EAASyhD,YACxCthE,YACEsiE,EACA,8GAEAxiE,GAEF,MAAMyiE,GAA0B1iD,EAAS0zC,aACzCvzD,YACEuiE,EACA,gHAEAziE,GAIAs/D,EAAKkC,aACLlC,EAAK7L,eACJuL,GAAuC9N,IAAIoO,KAE5CN,GAAuClQ,IAAIwQ,GAC3Cp/D,aACE,EACA,qHAEAF,IAIJ,MAAM0iE,EACsC,oBAAnC3iD,EAAS4iD,sBAClBziE,YACEwiE,EACA,8KAIA1iE,GAGAs/D,EAAK5+D,WACL4+D,EAAK5+D,UAAUwgE,sBAC2B,qBAAnCnhD,EAASihD,uBAEhB9gE,aACE,EACA,+LAGAoD,aAAiBg8D,IAAS,oBAG9B,MAAMsD,EACoC,oBAAjC7iD,EAAS8iD,oBAClB3iE,YACE0iE,EACA,4HAGA5iE,GAEF,MAAM8iE,EACyC,oBAAtC/iD,EAASgjD,yBAClB7iE,YACE4iE,EACA,mTAKA9iE,GAEF,MAAMgjE,EAC0C,oBAAvCjjD,EAASkjD,0BAClB/iE,YACE8iE,EACA,gGAEAhjE,GAEF,MAAMkjE,EACiD,oBAA9CnjD,EAASojD,iCAClBjjE,YACEgjE,EACA,8GAEAljE,GAEF,MAAMojE,EAAkBrjD,EAASjK,QAAU42C,EAC3CxsD,iBACqBP,IAAnBogB,EAASjK,QAAwBstD,EACjC,2HAEApjE,EACAA,GAEF,MAAMqjE,GAA0BtjD,EAASq+C,aACzCl+D,YACEmjE,EACA,oJAEArjE,EACAA,GAI4C,oBAArC+f,EAAS4hD,yBACuB,oBAAhC5hD,EAASujD,oBACf5E,GAAoDxN,IAAIoO,KAEzDZ,GAAoD5P,IAAIwQ,GACxDp/D,aACE,EACA,iIAEAoD,aAAiBg8D,KAIrB,MAAMiE,EACyC,oBAAtCxjD,EAASw/C,yBAClBr/D,YACEqjE,EACA,+HAEAvjE,GAEF,MAAMwjE,EACyC,oBAAtCzjD,EAAS0jD,yBAClBvjE,YACEsjE,EACA,+HAEAxjE,GAEF,MAAM0jE,EACoC,oBAAjCpE,EAAKqC,wBACdzhE,YACEwjE,EACA,8HAEA1jE,GAEF,MAAMovB,EAAQrP,EAASqP,MACnBA,IAA2B,kBAAVA,GAAsBjb,GAAQib,KACjDlvB,aACE,EACA,6CACAF,GAGoC,oBAA7B+f,EAASm0C,iBAClBh0D,YACoC,kBAA3Bo/D,EAAK3L,kBACZ,6FAEA3zD,KAwQJ2jE,CAAmBh8C,EAAgB23C,EAAM5S,GAG3C,MAAM3sC,EAAW4H,EAAe9R,UAChCkK,EAASjK,MAAQ42C,EACjB3sC,EAASqP,MAAQzH,EAAeyvC,cAChCr3C,EAASw+C,KAAOD,GAEhB,MAAMkD,EAAclC,EAAKkC,YACzB,GAA2B,kBAAhBA,GAA4C,OAAhBA,EACrCzhD,EAASzQ,QAAUoyD,GAAYF,OAC1B,CACL,MAAMpO,EAAkBL,GAAmBprC,EAAgB23C,GAAM,GACjEv/C,EAASzQ,QAAUkkD,GAAiB7rC,EAAgByrC,GAIpD,GAAIrzC,EAASqP,QAAUs9B,EAAU,CAC/B,MAAM5nD,EAAgBxB,aAAiBg8D,IAAS,YAC3CP,GAA0C7N,IAAIpsD,KACjDi6D,GAA0CjQ,IAAIhqD,GAC9C5E,aACE,EACA,uKAGA4E,IAKF6iB,EAAe+xB,KAAO2c,KACxBsE,GAAwBK,8BACtBrzC,EACA5H,GAGF46C,GAAwBM,2BACtBtzC,EACA5H,IAIA3e,MACFu5D,GAAwBI,0BACtBpzC,EACA5H,GAKN,IAAIo3C,EAAcxvC,EAAewvC,YACb,OAAhBA,IACFyM,GACEj8C,EACAwvC,EACAzK,EACA3sC,EACA+9C,GAEF/9C,EAASqP,MAAQzH,EAAeyvC,eAGlC,MAAMmI,EAA2BD,EAAKC,yBACE,oBAA7BA,IACTF,GACE13C,EACA23C,EACAC,EACA7S,GAEF3sC,EAASqP,MAAQzH,EAAeyvC,eAMS,oBAAlCkI,EAAKC,0BACgC,oBAArCx/C,EAAS4hD,yBAC+B,oBAAvC5hD,EAASq7C,2BACwB,oBAAhCr7C,EAASi9C,sBAtJtB,SAAgCr1C,EAAgB5H,GAC9CkyC,GAAgBtqC,EAAgB,sBAChC,MAAMk5C,EAAW9gD,EAASqP,MAEiB,oBAAhCrP,EAASi9C,oBAClBj9C,EAASi9C,qBAEuC,oBAAvCj9C,EAASq7C,2BAClBr7C,EAASq7C,4BAGXlJ,KAEI2O,IAAa9gD,EAASqP,QAEtBlvB,aACE,EACA,2IAGAoD,aAAiBqkB,EAAepkB,OAAS,aAG7Cm8D,GAAsBc,oBAAoBzgD,EAAUA,EAASqP,MAAO,OAiIpEy0C,CAAuBl8C,EAAgB5H,GAGvCo3C,EAAcxvC,EAAewvC,YACT,OAAhBA,IACFyM,GACEj8C,EACAwvC,EACAzK,EACA3sC,EACA+9C,GAEF/9C,EAASqP,MAAQzH,EAAeyvC,gBAIM,oBAA/Br3C,EAAS+jD,oBAClBn8C,EAAeqN,WAAajB,ICryBhC,IAAIgwC,GACAC,GACAC,GACAC,GACAC,GACAC,GAAqB9uC,MAGvByuC,IAAmB,EACnBC,IAAyB,EACzBC,GAAoC,GAOpCC,GAAwB,GACxBC,GAA8B,GAE9BC,GAAqB9uC,IACnB,GAAc,OAAVA,GAAmC,kBAAVA,EAC3B,OAEF,IAAKA,EAAM+uC,QAAU/uC,EAAM+uC,OAAOC,WAA0B,MAAbhvC,EAAM3qB,IACnD,OAEF1L,YAC0B,kBAAjBq2B,EAAM+uC,OACb,mIAGF/uC,EAAM+uC,OAAOC,WAAY,EAEzB,MAAMC,EACJ,mHAGAz8C,KACEo8C,GAAsBK,KAG1BL,GAAsBK,IAA6B,EAEnD3iE,cACE,EACA,sHAON,MAAMuS,GAAU3E,MAAM2E,QAEtB,SAASqwD,GACPC,EACAhgE,EACAkB,GAEA,IAAI++D,EAAW/+D,EAAQsxD,IACvB,GACe,OAAbyN,GACoB,oBAAbA,GACa,kBAAbA,EACP,CAEE,GAAID,EAAY/qB,KAAO2c,GAAY,CACjC,MAAMvxD,EAAgBxB,aAAiBmhE,EAAYlhE,OAAS,YACvD0gE,GAAkCn/D,KACrC5E,aACE,EACA,sQAMAwkE,EACAh9C,GAA4B+8C,IAE9BR,GAAkCn/D,IAAiB,GAKzD,GAAIa,EAAQG,OAAQ,CAClB,MAAMD,EAAiBF,EAAQG,OAC/B,IAAI6N,EACJ,GAAI9N,EAAO,CACT,MAAM+5D,EAAe/5D,EACrB5G,YACE2gE,EAAWp8D,MAAQqT,EACnB,iFAGFlD,EAAOisD,EAAW/pD,UAEpB5W,YACE0U,EACA,wGAEA+wD,GAEF,MAAMC,EAAY,GAAKD,EAEvB,GACc,OAAZjgE,GACgB,OAAhBA,EAAQwyD,KACe,oBAAhBxyD,EAAQwyD,KACfxyD,EAAQwyD,IAAI2N,aAAeD,EAE3B,OAAOlgE,EAAQwyD,IAEjB,MAAMA,EAAM,SAAS/rD,GACnB,IAAIqzD,EAAO5qD,EAAK4qD,KACZA,IAASD,KAEXC,EAAO5qD,EAAK4qD,KAAO,IAEP,OAAVrzD,SACKqzD,EAAKoG,GAEZpG,EAAKoG,GAAaz5D,GAItB,OADA+rD,EAAI2N,WAAaD,EACV1N,EAEPh4D,YACsB,kBAAbylE,EACP,8FAEFzlE,YACE0G,EAAQG,OACR,+XAMA4+D,GAIN,OAAOA,EAGT,SAASG,GAAyBJ,EAAoBK,GACpD,GAAyB,aAArBL,EAAYlhE,KAAqB,CACnC,IAAI+mD,EAAW,GAEbA,EACE,0EAEAxiC,KAEJ7oB,aACE,EACA,wDAC6C,oBAA7CwH,OAAO/F,UAAUuX,SAASrX,KAAKkkE,GAC3B,qBAAuBr+D,OAAOyD,KAAK46D,GAAUj7D,KAAK,MAAQ,IAC1Di7D,EACJxa,IAKN,SAASya,KACP,MAAMR,EACJ,4LAGAz8C,KAEEq8C,GAA4BI,KAGhCJ,GAA4BI,IAA6B,EAEzD3iE,cACE,EACA,8LAUJ,SAASojE,GAAgBC,GACvB,SAASC,EAAYT,EAAoBU,GACvC,IAAKF,EAEH,OAOF,MAAMG,EAAOX,EAAYjN,WACZ,OAAT4N,GACFA,EAAK9N,WAAa6N,EAClBV,EAAYjN,WAAa2N,GAEzBV,EAAYlN,YAAckN,EAAYjN,WAAa2N,EAErDA,EAAc7N,WAAa,KAC3B6N,EAAcnwC,UAAYf,GAG5B,SAASoxC,EACPZ,EACAa,GAEA,IAAKL,EAEH,OAAO,KAKT,IAAIE,EAAgBG,EACpB,KAAyB,OAAlBH,GACLD,EAAYT,EAAaU,GACzBA,EAAgBA,EAAc5vC,QAEhC,OAAO,KAGT,SAASgwC,EACPd,EACAa,GAKA,MAAME,EAAgD,IAAI5O,IAE1D,IAAI6O,EAAgBH,EACpB,KAAyB,OAAlBG,GACqB,OAAtBA,EAAc96D,IAChB66D,EAAiBjmD,IAAIkmD,EAAc96D,IAAK86D,GAExCD,EAAiBjmD,IAAIkmD,EAAchT,MAAOgT,GAE5CA,EAAgBA,EAAclwC,QAEhC,OAAOiwC,EAGT,SAASE,EACPn+C,EACAwvC,EACAtoD,GAIA,MAAMk3D,EAAQvN,GAAqB7wC,EAAOwvC,GAG1C,OAFA4O,EAAMlT,MAAQ,EACdkT,EAAMpwC,QAAU,KACTowC,EAGT,SAASC,EACPC,EACAC,EACAC,GAGA,GADAF,EAASpT,MAAQsT,GACZd,EAEH,OAAOa,EAET,MAAMrhE,EAAUohE,EAASnsD,UACzB,GAAgB,OAAZjV,EAAkB,CACpB,MAAMuhE,EAAWvhE,EAAQguD,MACzB,OAAIuT,EAAWF,GAEbD,EAAS7wC,UAAYlB,GACdgyC,GAGAE,EAKT,OADAH,EAAS7wC,UAAYlB,GACdgyC,EAIX,SAASG,EAAiBJ,GAMxB,OAHIZ,GAAiD,OAAvBY,EAASnsD,YACrCmsD,EAAS7wC,UAAYlB,IAEhB+xC,EAGT,SAASK,EACPzB,EACAhgE,EACAwZ,EACAxP,GAEA,GAAgB,OAAZhK,GAAoBA,EAAQjB,MAAQ0T,EAAU,CAEhD,MAAMivD,EAAUnN,GACd/6C,EACAwmD,EAAY/qB,KACZjrC,GAGF,OADA03D,EAAQxtD,OAAS8rD,EACV0B,EACF,CAEL,MAAMC,EAAWV,EAASjhE,EAASwZ,GAEnC,OADAmoD,EAASztD,OAAS8rD,EACX2B,GAIX,SAASC,EACP5B,EACAhgE,EACAkB,EACA8I,GAEA,GAAgB,OAAZhK,GAAoBA,EAAQuyD,cAAgBrxD,EAAQpC,KAAM,CAE5D,MAAM6iE,EAAWV,EAASjhE,EAASkB,EAAQmQ,OAO3C,OANAswD,EAASnP,IAAMuN,GAAUC,EAAahgE,EAASkB,GAC/CygE,EAASztD,OAAS8rD,EAEhB2B,EAAS3+C,aAAe9hB,EAAQK,QAChCogE,EAAS5+C,YAAc7hB,EAAQG,OAE1BsgE,EACF,CAEL,MAAMD,EAAUrN,GACdnzD,EACA8+D,EAAY/qB,KACZjrC,GAIF,OAFA03D,EAAQlP,IAAMuN,GAAUC,EAAahgE,EAASkB,GAC9CwgE,EAAQxtD,OAAS8rD,EACV0B,GAIX,SAASG,EACP7B,EACAhgE,EACAy0D,EACAzqD,GAEA,GACc,OAAZhK,GACAA,EAAQjB,MAAQwT,GAChBvS,EAAQoR,UAAUujB,gBAAkB8/B,EAAO9/B,eAC3C30B,EAAQoR,UAAUujD,iBAAmBF,EAAOE,eAC5C,CAEA,MAAM+M,EAAUlN,GACdC,EACAuL,EAAY/qB,KACZjrC,GAGF,OADA03D,EAAQxtD,OAAS8rD,EACV0B,EACF,CAEL,MAAMC,EAAWV,EAASjhE,EAASy0D,EAAOv5B,UAAY,IAEtD,OADAymC,EAASztD,OAAS8rD,EACX2B,GAIX,SAASG,EACP9B,EACAhgE,EACA+hE,EACA/3D,EACA9D,GAEA,GAAgB,OAAZlG,GAAoBA,EAAQjB,MAAQ2T,EAAU,CAEhD,MAAMgvD,EAAU1N,GACd+N,EACA/B,EAAY/qB,KACZjrC,EACA9D,GAGF,OADAw7D,EAAQxtD,OAAS8rD,EACV0B,EACF,CAEL,MAAMC,EAAWV,EAASjhE,EAAS+hE,GAEnC,OADAJ,EAASztD,OAAS8rD,EACX2B,GAIX,SAASK,EACPhC,EACAK,EACAr2D,GAEA,GAAwB,kBAAbq2D,GAA6C,kBAAbA,EAAuB,CAIhE,MAAMqB,EAAUnN,GACd,GAAK8L,EACLL,EAAY/qB,KACZjrC,GAGF,OADA03D,EAAQxtD,OAAS8rD,EACV0B,EAGT,GAAwB,kBAAbrB,GAAsC,OAAbA,EAAmB,CACrD,OAAQA,EAASphE,UACf,KAAKtB,KAAoB,CACvB,MAAM+jE,EAAUrN,GACdgM,EACAL,EAAY/qB,KACZjrC,GAIF,OAFA03D,EAAQlP,IAAMuN,GAAUC,EAAa,KAAMK,GAC3CqB,EAAQxtD,OAAS8rD,EACV0B,EAET,KAAK9jE,KAAmB,CACtB,MAAM8jE,EAAUlN,GACd6L,EACAL,EAAY/qB,KACZjrC,GAGF,OADA03D,EAAQxtD,OAAS8rD,EACV0B,GAIX,GAAIhyD,GAAQ2wD,IAAa3hE,aAAc2hE,GAAW,CAChD,MAAMqB,EAAU1N,GACdqM,EACAL,EAAY/qB,KACZjrC,EACA,MAGF,OADA03D,EAAQxtD,OAAS8rD,EACV0B,EAGTtB,GAAyBJ,EAAaK,GASxC,MAL0B,oBAAbA,GACTC,KAIG,KAGT,SAAS2B,EACPjC,EACAkC,EACA7B,EACAr2D,GAIA,MAAM9D,EAAmB,OAAbg8D,EAAoBA,EAASh8D,IAAM,KAE/C,GAAwB,kBAAbm6D,GAA6C,kBAAbA,EAIzC,OAAY,OAARn6D,EACK,KAEFu7D,EACLzB,EACAkC,EACA,GAAK7B,EACLr2D,GAIJ,GAAwB,kBAAbq2D,GAAsC,OAAbA,EAAmB,CACrD,OAAQA,EAASphE,UACf,KAAKtB,KACH,OAAI0iE,EAASn6D,MAAQA,EACfm6D,EAASvhE,OAASjB,KACbikE,EACL9B,EACAkC,EACA7B,EAAShvD,MAAM6pB,SACflxB,EACA9D,GAGG07D,EACL5B,EACAkC,EACA7B,EACAr2D,GAGK,KAGX,KAAKpM,KACH,OAAIyiE,EAASn6D,MAAQA,EACZ27D,EACL7B,EACAkC,EACA7B,EACAr2D,GAGK,KAKb,GAAI0F,GAAQ2wD,IAAa3hE,aAAc2hE,GACrC,OAAY,OAARn6D,EACK,KAGF47D,EACL9B,EACAkC,EACA7B,EACAr2D,EACA,MAIJo2D,GAAyBJ,EAAaK,GASxC,MAL0B,oBAAbA,GACTC,KAIG,KAGT,SAAS6B,EACPpB,EACAf,EACAoC,EACA/B,EACAr2D,GAEA,GAAwB,kBAAbq2D,GAA6C,kBAAbA,EAAuB,CAIhE,OAAOoB,EACLzB,EAFmBe,EAAiBhmD,IAAIqnD,IAAW,KAInD,GAAK/B,EACLr2D,GAIJ,GAAwB,kBAAbq2D,GAAsC,OAAbA,EAAmB,CACrD,OAAQA,EAASphE,UACf,KAAKtB,KAAoB,CACvB,MAAM0kE,EACJtB,EAAiBhmD,IACE,OAAjBslD,EAASn6D,IAAek8D,EAAS/B,EAASn6D,MACvC,KACP,OAAIm6D,EAASvhE,OAASjB,KACbikE,EACL9B,EACAqC,EACAhC,EAAShvD,MAAM6pB,SACflxB,EACAq2D,EAASn6D,KAGN07D,EACL5B,EACAqC,EACAhC,EACAr2D,GAGJ,KAAKpM,KAKH,OAAOikE,EACL7B,EAJAe,EAAiBhmD,IACE,OAAjBslD,EAASn6D,IAAek8D,EAAS/B,EAASn6D,MACvC,KAILm6D,EACAr2D,GAKN,GAAI0F,GAAQ2wD,IAAa3hE,aAAc2hE,GAAW,CAEhD,OAAOyB,EACL9B,EAFmBe,EAAiBhmD,IAAIqnD,IAAW,KAInD/B,EACAr2D,EACA,MAIJo2D,GAAyBJ,EAAaK,GASxC,MAL0B,oBAAbA,GACTC,KAIG,KAMT,SAASgC,EACPzxC,EACA0xC,GAGE,GAAqB,kBAAV1xC,GAAgC,OAAVA,EAC/B,OAAO0xC,EAET,OAAQ1xC,EAAM5xB,UACZ,KAAKtB,KACL,KAAKC,KACH+hE,GAAkB9uC,GAClB,MAAM3qB,EAAM2qB,EAAM3qB,IAClB,GAAmB,kBAARA,EACT,MAEF,GAAkB,OAAdq8D,EAAoB,EACtBA,EAAY,IAAIpY,KACNE,IAAInkD,GACd,MAEF,IAAKq8D,EAAU9V,IAAIvmD,GAAM,CACvBq8D,EAAUlY,IAAInkD,GACd,MAEF/I,cACE,EACA,iRAKA+I,GAOR,OAAOq8D,EAkmBT,OAzHA,SACEvC,EACAa,EACAR,EACAr2D,GAUA,MAAMw4D,EACgB,kBAAbnC,GACM,OAAbA,GACAA,EAASvhE,OAASjB,MACD,OAAjBwiE,EAASn6D,IACPs8D,IACFnC,EAAWA,EAAShvD,MAAM6pB,UAI5B,MAAMunC,EAA+B,kBAAbpC,GAAsC,OAAbA,EAEjD,GAAIoC,EACF,OAAQpC,EAASphE,UACf,KAAKtB,KACH,OAAO6jE,EA3If,SACExB,EACAa,EACA3/D,EACA8I,GAEA,MAAM9D,EAAMhF,EAAQgF,IACpB,IAAI2qB,EAAQgwC,EACZ,KAAiB,OAAVhwC,GAAgB,CAGrB,GAAIA,EAAM3qB,MAAQA,EAAK,CACrB,GACE2qB,EAAM9xB,MAAQ2T,EACVxR,EAAQpC,OAASjB,KACjBgzB,EAAM0hC,cAAgBrxD,EAAQpC,KAClC,CACA8hE,EAAwBZ,EAAanvC,EAAMC,SAC3C,MAAM6wC,EAAWV,EACfpwC,EACA3vB,EAAQpC,OAASjB,KACbqD,EAAQmQ,MAAM6pB,SACdh6B,EAAQmQ,OASd,OANAswD,EAASnP,IAAMuN,GAAUC,EAAanvC,EAAO3vB,GAC7CygE,EAASztD,OAAS8rD,EAEhB2B,EAAS3+C,aAAe9hB,EAAQK,QAChCogE,EAAS5+C,YAAc7hB,EAAQG,OAE1BsgE,EAEPf,EAAwBZ,EAAanvC,GACrC,MAGF4vC,EAAYT,EAAanvC,GAE3BA,EAAQA,EAAMC,QAGhB,GAAI5vB,EAAQpC,OAASjB,KAAqB,CACxC,MAAM6jE,EAAU1N,GACd9yD,EAAQmQ,MAAM6pB,SACd8kC,EAAY/qB,KACZjrC,EACA9I,EAAQgF,KAGV,OADAw7D,EAAQxtD,OAAS8rD,EACV0B,EACF,CACL,MAAMA,EAAUrN,GACdnzD,EACA8+D,EAAY/qB,KACZjrC,GAIF,OAFA03D,EAAQlP,IAAMuN,GAAUC,EAAaa,EAAmB3/D,GACxDwgE,EAAQxtD,OAAS8rD,EACV0B,GAiFDgB,CACE1C,EACAa,EACAR,EACAr2D,IAGN,KAAKpM,KACH,OAAO4jE,EArFf,SACExB,EACAa,EACApM,EACAzqD,GAEA,MAAM9D,EAAMuuD,EAAOvuD,IACnB,IAAI2qB,EAAQgwC,EACZ,KAAiB,OAAVhwC,GAAgB,CAGrB,GAAIA,EAAM3qB,MAAQA,EAAK,CACrB,GACE2qB,EAAM9xB,MAAQwT,GACdse,EAAMzf,UAAUujB,gBAAkB8/B,EAAO9/B,eACzC9D,EAAMzf,UAAUujD,iBAAmBF,EAAOE,eAC1C,CACAiM,EAAwBZ,EAAanvC,EAAMC,SAC3C,MAAM6wC,EAAWV,EACfpwC,EACA4jC,EAAOv5B,UAAY,IAIrB,OADAymC,EAASztD,OAAS8rD,EACX2B,EAEPf,EAAwBZ,EAAanvC,GACrC,MAGF4vC,EAAYT,EAAanvC,GAE3BA,EAAQA,EAAMC,QAGhB,MAAM4wC,EAAUlN,GACdC,EACAuL,EAAY/qB,KACZjrC,GAGF,OADA03D,EAAQxtD,OAAS8rD,EACV0B,EA6CCiB,CACE3C,EACAa,EACAR,EACAr2D,IAMV,GAAwB,kBAAbq2D,GAA6C,kBAAbA,EACzC,OAAOmB,EA5LX,SACExB,EACAa,EACArnD,EACAxP,GAIA,GAA0B,OAAtB62D,GAA8BA,EAAkB9hE,MAAQ0T,EAAU,CAGpEmuD,EAAwBZ,EAAaa,EAAkB/vC,SACvD,MAAM6wC,EAAWV,EAASJ,EAAmBrnD,GAE7C,OADAmoD,EAASztD,OAAS8rD,EACX2B,EAITf,EAAwBZ,EAAaa,GACrC,MAAMa,EAAUnN,GACd/6C,EACAwmD,EAAY/qB,KACZjrC,GAGF,OADA03D,EAAQxtD,OAAS8rD,EACV0B,EAoKHkB,CACE5C,EACAa,EACA,GAAKR,EACLr2D,IAKN,GAAI0F,GAAQ2wD,GACV,OAniBJ,SACEL,EACAa,EACAgC,EACA74D,GAqBa,CAEX,IAAIu4D,EAAY,KAChB,IAAK,IAAIt9D,EAAI,EAAGA,EAAI49D,EAAYnnE,OAAQuJ,IAAK,CAE3Cs9D,EAAYD,EADEO,EAAY59D,GACUs9D,IAIxC,IAAIO,EAAoC,KACpCC,EAAiC,KAEjCb,EAAWrB,EACXQ,EAAkB,EAClBe,EAAS,EACTY,EAAe,KACnB,KAAoB,OAAbd,GAAqBE,EAASS,EAAYnnE,OAAQ0mE,IAAU,CAC7DF,EAASlU,MAAQoU,GACnBY,EAAed,EACfA,EAAW,MAEXc,EAAed,EAASpxC,QAE1B,MAAMswC,EAAWa,EACfjC,EACAkC,EACAW,EAAYT,GACZp4D,GAEF,GAAiB,OAAbo3D,EAAmB,CAKJ,OAAbc,IACFA,EAAWc,GAEb,MAEExC,GACE0B,GAAmC,OAAvBd,EAASnsD,WAGvBwrD,EAAYT,EAAakC,GAG7Bb,EAAkBF,EAAWC,EAAUC,EAAiBe,GAC/B,OAArBW,EAEFD,EAAsB1B,EAMtB2B,EAAiBjyC,QAAUswC,EAE7B2B,EAAmB3B,EACnBc,EAAWc,EAGb,GAAIZ,IAAWS,EAAYnnE,OAGzB,OADAklE,EAAwBZ,EAAakC,GAC9BY,EAGT,GAAiB,OAAbZ,EAAmB,CAGrB,KAAOE,EAASS,EAAYnnE,OAAQ0mE,IAAU,CAC5C,MAAMhB,EAAWY,EACfhC,EACA6C,EAAYT,GACZp4D,GAEGo3D,IAGLC,EAAkBF,EAAWC,EAAUC,EAAiBe,GAC/B,OAArBW,EAEFD,EAAsB1B,EAEtB2B,EAAiBjyC,QAAUswC,EAE7B2B,EAAmB3B,GAErB,OAAO0B,EAIT,MAAM/B,EAAmBD,EAAqBd,EAAakC,GAG3D,KAAOE,EAASS,EAAYnnE,OAAQ0mE,IAAU,CAC5C,MAAMhB,EAAWe,EACfpB,EACAf,EACAoC,EACAS,EAAYT,GACZp4D,GAEEo3D,IACEZ,GACyB,OAAvBY,EAASnsD,WAKX8rD,EAAiBvW,OACE,OAAjB4W,EAASl7D,IAAek8D,EAAShB,EAASl7D,KAIhDm7D,EAAkBF,EAAWC,EAAUC,EAAiBe,GAC/B,OAArBW,EACFD,EAAsB1B,EAEtB2B,EAAiBjyC,QAAUswC,EAE7B2B,EAAmB3B,GAUvB,OANIZ,GAGFO,EAAiBx7D,QAAQsrB,GAAS4vC,EAAYT,EAAanvC,IAGtDiyC,EAuYEG,CACLjD,EACAa,EACAR,EACAr2D,GAIJ,GAAItL,aAAc2hE,GAChB,OA7YJ,SACEL,EACAa,EACAqC,EACAl5D,GAKA,MAAMm5D,EAAazkE,aAAcwkE,GACjC1oE,YACwB,oBAAf2oE,EACP,sGAIW,CAIS,oBAAX1lE,QAEqC,cAA5CylE,EAAoBzlE,OAAO2lE,eAE3BjmE,aACEoiE,GACA,kTAMFA,IAAyB,GAItB2D,EAA0BG,UAAYF,IACzChmE,aACEmiE,GACA,qJAIFA,IAAmB,GAKrB,MAAMuD,EAAcM,EAAWhnE,KAAK+mE,GACpC,GAAIL,EAAa,CACf,IAAIN,EAAY,KACZ50B,EAAOk1B,EAAY9yD,OACvB,MAAQ49B,EAAK21B,KAAM31B,EAAOk1B,EAAY9yD,OAAQ,CAE5CwyD,EAAYD,EADE30B,EAAKlnC,MACiB87D,KAK1C,MAAMM,EAAcM,EAAWhnE,KAAK+mE,GACpC1oE,YAAyB,MAAfqoE,EAAqB,4CAE/B,IAAIC,EAAoC,KACpCC,EAAiC,KAEjCb,EAAWrB,EACXQ,EAAkB,EAClBe,EAAS,EACTY,EAAe,KAEfr1B,EAAOk1B,EAAY9yD,OACvB,KAEe,OAAbmyD,IAAsBv0B,EAAK21B,KAC3BlB,IAAUz0B,EAAOk1B,EAAY9yD,OAC7B,CACImyD,EAASlU,MAAQoU,GACnBY,EAAed,EACfA,EAAW,MAEXc,EAAed,EAASpxC,QAE1B,MAAMswC,EAAWa,EACfjC,EACAkC,EACAv0B,EAAKlnC,MACLuD,GAEF,GAAiB,OAAbo3D,EAAmB,CAKhBc,IACHA,EAAWc,GAEb,MAEExC,GACE0B,GAAmC,OAAvBd,EAASnsD,WAGvBwrD,EAAYT,EAAakC,GAG7Bb,EAAkBF,EAAWC,EAAUC,EAAiBe,GAC/B,OAArBW,EAEFD,EAAsB1B,EAMtB2B,EAAiBjyC,QAAUswC,EAE7B2B,EAAmB3B,EACnBc,EAAWc,EAGb,GAAIr1B,EAAK21B,KAGP,OADA1C,EAAwBZ,EAAakC,GAC9BY,EAGT,GAAiB,OAAbZ,EAAmB,CAGrB,MAAQv0B,EAAK21B,KAAMlB,IAAUz0B,EAAOk1B,EAAY9yD,OAAQ,CACtD,MAAMqxD,EAAWY,EAAYhC,EAAaryB,EAAKlnC,MAAOuD,GACrC,OAAbo3D,IAGJC,EAAkBF,EAAWC,EAAUC,EAAiBe,GAC/B,OAArBW,EAEFD,EAAsB1B,EAEtB2B,EAAiBjyC,QAAUswC,EAE7B2B,EAAmB3B,GAErB,OAAO0B,EAIT,MAAM/B,EAAmBD,EAAqBd,EAAakC,GAG3D,MAAQv0B,EAAK21B,KAAMlB,IAAUz0B,EAAOk1B,EAAY9yD,OAAQ,CACtD,MAAMqxD,EAAWe,EACfpB,EACAf,EACAoC,EACAz0B,EAAKlnC,MACLuD,GAEe,OAAbo3D,IACEZ,GACyB,OAAvBY,EAASnsD,WAKX8rD,EAAiBvW,OACE,OAAjB4W,EAASl7D,IAAek8D,EAAShB,EAASl7D,KAIhDm7D,EAAkBF,EAAWC,EAAUC,EAAiBe,GAC/B,OAArBW,EACFD,EAAsB1B,EAEtB2B,EAAiBjyC,QAAUswC,EAE7B2B,EAAmB3B,GAUvB,OANIZ,GAGFO,EAAiBx7D,QAAQsrB,GAAS4vC,EAAYT,EAAanvC,IAGtDiyC,EAmNES,CACLvD,EACAa,EACAR,EACAr2D,GAaJ,GATIy4D,GACFrC,GAAyBJ,EAAaK,GAId,oBAAbA,GACTC,KAGoB,qBAAbD,IAA6BmC,EAItC,OAAQxC,EAAYjhE,KAClB,KAAKqT,EAGD,GADiB4tD,EAAY5uD,UAChB7R,OAAOikE,gBAElB,MAON,KAAKrxD,EAAmB,CACtB,MAAMo8C,EAAYyR,EAAYlhE,KAC9BtE,aACE,EACA,mIAGA+zD,EAAUvvD,aAAeuvD,EAAUhzD,MAAQ,cAOnD,OAAOqlE,EAAwBZ,EAAaa,IAMzC,MAAM4C,GAAuBlD,IAAgB,GACvCmD,GAAmBnD,IAAgB,GC5yChD,MAAMoD,GAA0B,GAEhC,IAAIxV,GAA4DF,GAC9D0V,IAEEC,GAA2D3V,GAC7D0V,IAEEE,GAA+D5V,GACjE0V,IAGF,SAASG,GAAuBjpE,GAM9B,OALAL,YACEK,IAAM8oE,GACN,wGAGM9oE,EAGV,SAASkpE,KAEP,OADqBD,GAAgBD,GAAwB7jE,SAI/D,SAASgkE,GAAkBlhD,EAAcmhD,GAGvCt7D,GAAKk7D,GAAyBI,EAAkBnhD,GAGhDna,GAAKi7D,GAAyB9gD,EAAOA,GAOrCna,GAAKwlD,GAAoBwV,GAAY7gD,GACrC,MAAMohD,EfmDD,SACL7c,GAEA,IAAIvoD,EACA4oD,EACJ,MAAMrmC,EAAWgmC,EAAsBhmC,SACvC,OAAQA,GACN,KAAKL,GACL,KAAKC,GAAwB,CAC3BniB,EAAOuiB,IAAaL,GAAgB,YAAc,YAClD,IAAIrI,EAAQ0uC,EAA4BxvB,gBACxC6vB,EAAY/uC,EAAOA,EAAK+kB,aAAeX,GAAkB,KAAM,IAC/D,MAEF,QAAS,CACP,MAAMksB,EACJ5nC,IAAaN,GACTsmC,EAAsBtzC,WACtBszC,EACAsD,EAAe1B,EAAUvrB,cAAgB,KAC/C5+B,EAAOmqD,EAAU/hC,QACjBwgC,EAAY3qB,GAAkB4tB,EAAc7rD,GAC5C,OAGS,CACX,MAAMqlE,EAAerlE,EAAK2P,cAE1B,MAAO,CAACi5C,YAAWzC,aADEd,GAAoB,KAAMggB,Ke9EzBC,CAAmBH,GAE3Cl7D,GAAIolD,GAAoBrrC,GACxBna,GAAKwlD,GAAoB+V,EAAiBphD,GAG5C,SAASuhD,GAAiBvhD,GACxB/Z,GAAIolD,GAAoBrrC,GACxB/Z,GAAI66D,GAAyB9gD,GAC7B/Z,GAAI86D,GAAyB/gD,GAG/B,SAASwhD,KAEP,OADgBR,GAAgB3V,GAAmBnuD,SAIrD,SAASukE,GAAgBzhD,GACSghD,GAC9BD,GAAwB7jE,SAD1B,MAGM6K,EAAuBi5D,GAAgB3V,GAAmBnuD,SAC1Ds8D,Ef8DD,SACLkI,EACA1lE,EACAuoD,GAEa,CACX,MAAMod,EAAyBD,EAM/B,MAAO,CAAC9c,UALU3qB,GAAkB0nC,EAAqB/c,UAAW5oD,GAKjDmmD,aAJEd,GACnBsgB,EAAqBxf,aACrBnmD,KexEgB4lE,CAAoB75D,EAASiY,EAAMhkB,MAGnD+L,IAAYyxD,IAMhB3zD,GAAKi7D,GAAyB9gD,EAAOA,GACrCna,GAAKwlD,GAAoBmO,EAAax5C,IAGxC,SAAS6hD,GAAe7hD,GAGlB8gD,GAAwB5jE,UAAY8iB,IAIxC/Z,GAAIolD,GAAoBrrC,GACxB/Z,GAAI66D,GAAyB9gD,IC3FxB,MAAMqM,GAA6B,EAC7By1C,GAA6B,EAC7BC,GAA6B,EAC7BC,GAA6B,EAC7BC,GAA6B,GAC7BC,GAA6B,GAC7BC,GAA6B,GAC7BC,GAA6B,KC0BnCnlE,uBAAD,IAA2B1C,KA+DjC,IAAI8nE,GAEFA,GAA0C,IAAIhb,IA8BhD,IAAIkP,GAAuC9I,GAGvC6U,GAAwC,KAMxCC,GAA2B,KAC3BC,GAA+B,KAC/BC,GAAuC,KACvCC,GAAkC,KAClCC,GAAsC,KAEtCC,GAA0CnV,GAC1CoV,GAA4D,KAC5DC,GAA+B,EAW/BC,IAAwC,EAExCC,GAGO,KAEPC,GAA4B,EAChC,MAAMC,GAAkB,GAGxB,IAAIC,GAAkC,KAKlCC,GAAuC,KACvCC,IAAmC,EAEvC,SAASC,KACM,CACX,MAAMC,EAAaJ,GAEE,OAAjBC,GACFA,GAAe,CAACG,GAEhBH,GAAav9D,KAAK09D,IAKxB,SAASC,KACM,CACX,MAAMD,EAAaJ,GAEE,OAAjBC,KACFC,KACID,GAAaC,MAA6BE,GAOpD,SAAiCE,GAClB,CACX,MAAMlmE,EAAgBxB,aAClBumE,GAAsCtmE,MAE1C,IAAKqmE,GAAwC1Y,IAAIpsD,KAC/C8kE,GAAwC9a,IAAIhqD,GAEvB,OAAjB6lE,IAAuB,CACzB,IAAIM,EAAQ,GAEZ,MAAMC,EAAoB,GAE1B,IAAK,IAAIxhE,EAAI,EAAGA,GAAOkhE,GAAwClhE,IAAK,CAClE,MAAMyhE,EAAcR,GAAajhE,GAC3B0hE,EACJ1hE,IAAQkhE,GACJI,EACAG,EAEN,IAAIE,EAAO,GAAE3hE,EAAI,MAAMyhE,IAIvB,KAAOE,EAAIlrE,OAAS+qE,GAClBG,GAAO,IAGTA,GAAOD,EAAc,KAErBH,GAASI,EAGXzpE,cACE,EACA,qWAOAkD,EACAmmE,KAjDFK,CAAwBR,KAwDhC,SAASS,KACPtsE,aACE,EACA,8aASJ,SAASusE,GACPC,EACAC,GAEA,GAAiB,OAAbA,EAUF,OARE9pE,cACE,EACA,2KAGA8oE,KAGG,EAMHe,EAAStrE,SAAWurE,EAASvrE,QAC/ByB,cACE,EACA,qJAIA8oE,GACC,IAAGe,EAAS5hE,KAAK,SACjB,IAAG6hE,EAAS7hE,KAAK,UAIxB,IAAK,IAAIH,EAAI,EAAGA,EAAIgiE,EAASvrE,QAAUuJ,EAAI+hE,EAAStrE,OAAQuJ,IAC1D,IAAI2pB,GAAGo4C,EAAS/hE,GAAIgiE,EAAShiE,IAG7B,OAAO,EAET,OAAO,EAGF,SAASiiE,GACdlnE,EACAkjB,EACAqrC,EACAl9C,EACA81D,EACAC,GAEA/N,GAAuB+N,EACvBhC,GAA0BliD,EAC1BoiD,GAA8B,OAAZtlE,EAAmBA,EAAQ2yD,cAAgB,KAG3DuT,GACc,OAAZlmE,EACMA,EAAQuzD,gBACV,KACN4S,IAA2B,EAwBzBpmE,GAAuBC,QADD,OAApBslE,GAC+B+B,GACP,OAAjBnB,GAMwBoB,GAEAC,GASrC,IAAIrsC,EAAWqzB,EAAUl9C,EAAO81D,GAEhC,GAAItB,GAA8B,CAChC,GACEA,IAA+B,EAC/BE,IAAqB,EAGrBT,GAA8B,OAAZtlE,EAAmBA,EAAQ2yD,cAAgB,KAC7D8S,GAAyBF,GAEzBF,GAAc,KACdG,GAAqB,KACrBG,GAAuB,KAIrBQ,IAA2B,EAG7BpmE,GAAuBC,QACnBqnE,GAGJnsC,EAAWqzB,EAAUl9C,EAAO81D,SACrBtB,IAETC,GAAqB,KACrBC,GAAoB,EAKtBhmE,GAAuBC,QAAUwnE,GAEjC,MAAMC,EAAuBrC,GAE7BqC,EAAa9U,cAAgB4S,GAC7BkC,EAAaz9D,eAAiB07D,GAC9B+B,EAAa/U,YAAeiT,GAC5B8B,EAAal3C,WAAaq1C,GAGxB6B,EAAalU,gBAAkB2S,GAKjC,MAAMwB,EACY,OAAhBrC,IAA6C,OAArBA,GAAYt1D,KAgCtC,OA9BAspD,GAAuB9I,GACvB6U,GAA0B,KAE1BC,GAAc,KACdC,GAAkB,KAClBC,GAA0B,KAC1BC,GAAqB,KACrBC,GAAyB,KAGvBQ,GAAuB,KACvBC,GAAe,KACfC,IAA2B,EAG7BT,GAA0BnV,GAC1BoV,GAAuB,KACvBC,GAAgB,EAOhBprE,aACGktE,EACD,mGAIKxsC,EAGF,SAASysC,GACd3nE,EACAkjB,EACAlZ,GAEAkZ,EAAewvC,YAAc1yD,EAAQ0yD,YACrCxvC,EAAeqN,aAAeq3C,GAAgBC,IAC1C7nE,EAAQgK,gBAAkBA,IAC5BhK,EAAQgK,eAAiBumD,IAItB,SAASuX,KAGd/nE,GAAuBC,QAAUwnE,GAKjCnO,GAAuB9I,GACvB6U,GAA0B,KAE1BC,GAAc,KACdC,GAAkB,KAClBC,GAA0B,KAC1BC,GAAqB,KACrBC,GAAyB,KAGvBS,GAAe,KACfC,IAA2B,EAE3BF,GAAuB,KAGzBP,GAA0BnV,GAC1BoV,GAAuB,KACvBC,GAAgB,EAEhBC,IAA+B,EAC/BC,GAAqB,KACrBC,GAAoB,EAGtB,SAASgC,KACP,MAAMC,EAAa,CACjBrV,cAAe,KAEfqI,UAAW,KACXiN,MAAO,KACPC,WAAY,KAEZn4D,KAAM,MAUR,OAP2B,OAAvBy1D,GAEFD,GAA0BC,GAAqBwC,EAG/CxC,GAAqBA,GAAmBz1D,KAAOi4D,EAE1CxC,GAGT,SAAS2C,KAMP,GAA+B,OAA3B1C,GAEFD,GAAqBC,GACrBA,GAAyBD,GAAmBz1D,KAE5Cs1D,GAAcC,GACdA,GAAkC,OAAhBD,GAAuBA,GAAYt1D,KAAO,SACvD,CAELvV,YACsB,OAApB8qE,GACA,wDAEFD,GAAcC,GAEd,MAAM8C,EAAgB,CACpBzV,cAAe0S,GAAY1S,cAE3BqI,UAAWqK,GAAYrK,UACvBiN,MAAO5C,GAAY4C,MACnBC,WAAY7C,GAAY6C,WAExBn4D,KAAM,MAKNy1D,GAFyB,OAAvBA,GAEmBD,GAA0B6C,EAG1B5C,GAAmBz1D,KAAOq4D,EAEjD9C,GAAkBD,GAAYt1D,KAEhC,OAAOy1D,GAST,SAAS6C,GAAqB19C,EAAU3P,GACtC,MAAyB,oBAAXA,EAAwBA,EAAO2P,GAAS3P,EAGxD,SAASstD,GACPC,EACAC,EACAC,GAEA,MAAMT,EAAOD,KACb,IAAIW,EAEFA,OADWxtE,IAATutE,EACaA,EAAKD,GAEHA,EAEnBR,EAAKrV,cAAgBqV,EAAKhN,UAAY0N,EACtC,MAAMT,EAASD,EAAKC,MAAQ,CAC1BtH,KAAM,KACNgI,SAAU,KACVC,oBAAqBL,EACrBM,kBAAoBH,GAEhBC,EAAyBV,EAAMU,SAAYG,GAAexzC,KAC9D,KAEE8vC,GACF6C,GAEF,MAAO,CAACD,EAAKrV,cAAegW,GAG9B,SAASI,GACPR,EACAC,EACAC,GAEA,MAAMT,EAAOG,KACPF,EAAQD,EAAKC,MAQnB,GAPAztE,YACY,OAAVytE,EACA,6EAGFA,EAAMW,oBAAsBL,EAExBxC,GAAoB,EAAG,CAGzB,MAAM4C,EAAyBV,EAAMU,SACrC,GAA2B,OAAvB7C,GAA6B,CAE/B,MAAMkD,EAAyBlD,GAAmB/qD,IAAIktD,GACtD,QAA+B/sE,IAA3B8tE,EAAsC,CACxClD,GAAmBtb,OAAOyd,GAC1B,IAAI5L,EAAW2L,EAAKrV,cAChB+I,EAASsN,EACb,EAAG,CAKD3M,EAAWkM,EAAQlM,EADJX,EAAO1gD,QAEtB0gD,EAASA,EAAO3rD,WACE,OAAX2rD,GAmBT,OAfK9sC,GAAGytC,EAAU2L,EAAKrV,gBACrBsW,KAGFjB,EAAKrV,cAAgB0J,EAKjB2L,EAAKE,aAAeD,EAAMtH,OAC5BqH,EAAKhN,UAAYqB,GAGnB4L,EAAMY,kBAAoBxM,EAEnB,CAACA,EAAUsM,IAGtB,MAAO,CAACX,EAAKrV,cAAegW,GAI9B,MAAMhI,EAAOsH,EAAMtH,KAEbuH,EAAaF,EAAKE,WAClBlN,EAAYgN,EAAKhN,UAGvB,IAAIkO,EAYJ,GAXmB,OAAfhB,GACW,OAATvH,IAIFA,EAAK5wD,KAAO,MAEdm5D,EAAQhB,EAAWn4D,MAEnBm5D,EAAiB,OAATvI,EAAgBA,EAAK5wD,KAAO,KAExB,OAAVm5D,EAAgB,CAClB,IAAI7M,EAAWrB,EACXmO,EAAe,KACfC,EAAgB,KAChBC,EAAanB,EACbxM,EAASwN,EACTI,GAAU,EACd,EAAG,CACD,MAAMC,EAAuB7N,EAAO1xD,eACpC,GAAIu/D,EAAuBlQ,GAIpBiQ,IACHA,GAAU,EACVF,EAAgBC,EAChBF,EAAe9M,GAGbkN,EAAuB7D,KACzBA,GAA0B6D,QAI5B,GAAI7N,EAAO8N,eAAiBjB,EAG1BlM,EAAaX,EAAO+N,eACf,CAELpN,EAAWkM,EAAQlM,EADJX,EAAO1gD,QAI1BquD,EAAa3N,EACbA,EAASA,EAAO3rD,WACE,OAAX2rD,GAAmBA,IAAWwN,GAElCI,IACHF,EAAgBC,EAChBF,EAAe9M,GAKZztC,GAAGytC,EAAU2L,EAAKrV,gBACrBsW,KAGFjB,EAAKrV,cAAgB0J,EACrB2L,EAAKE,WAAakB,EAClBpB,EAAKhN,UAAYmO,EAEjBlB,EAAMY,kBAAoBxM,EAG5B,MAAMsM,EAAyBV,EAAMU,SACrC,MAAO,CAACX,EAAKrV,cAAegW,GAG9B,SAASe,GACPhB,GAEA,MAAMV,EAAOD,KACe,oBAAjBW,IACTA,EAAeA,KAEjBV,EAAKrV,cAAgBqV,EAAKhN,UAAY0N,EACtC,MAAMT,EAASD,EAAKC,MAAQ,CAC1BtH,KAAM,KACNgI,SAAU,KACVC,oBAAqBP,GACrBQ,kBAAoBH,GAEhBC,EAEDV,EAAMU,SAAYG,GAAexzC,KACpC,KAEE8vC,GACF6C,GAEF,MAAO,CAACD,EAAKrV,cAAegW,GAG9B,SAASgB,GACPjB,GAEA,OAAOK,GAAcV,IAGvB,SAASuB,GAAW7qE,EAAK8qE,EAAQC,EAASC,GACxC,MAAMC,EAAiB,CACrBjrE,MACA8qE,SACAC,UACAC,OAEAh6D,KAAO,MAET,GAA6B,OAAzB41D,GACFA,GArNK,CACL5S,WAAY,MAqNZ4S,GAAqB5S,WAAaiX,EAAOj6D,KAAOi6D,MAC3C,CACL,MAAMjX,EAAa4S,GAAqB5S,WACxC,GAAmB,OAAfA,EACF4S,GAAqB5S,WAAaiX,EAAOj6D,KAAOi6D,MAC3C,CACL,MAAMlX,EAAcC,EAAWhjD,KAC/BgjD,EAAWhjD,KAAOi6D,EAClBA,EAAOj6D,KAAO+iD,EACd6S,GAAqB5S,WAAaiX,GAGtC,OAAOA,EAGT,SAASC,GAAYniD,GACnB,MAAMkgD,EAAOD,KACPvV,EAAM,CAACxyD,QAAS8nB,GAKtB,OAHE9lB,OAAOkoE,KAAK1X,GAEdwV,EAAKrV,cAAgBH,EACdA,EAGT,SAAS2X,GAAariD,GAEpB,OADaqgD,KACDxV,cAGd,SAASyX,GAAgBC,EAAgBC,EAAeT,EAAQE,GAC9D,MAAM/B,EAAOD,KACPf,OAAoB9rE,IAAT6uE,EAAqB,KAAOA,EAC7CnE,IAAiByE,EACjBrC,EAAKrV,cAAgBiX,GAAWU,EAAeT,OAAQ3uE,EAAW8rE,GAGpE,SAASuD,GAAiBF,EAAgBC,EAAeT,EAAQE,GAC/D,MAAM/B,EAAOG,KACPnB,OAAoB9rE,IAAT6uE,EAAqB,KAAOA,EAC7C,IAAID,OAAU5uE,EAEd,GAAoB,OAAhBmqE,GAAsB,CACxB,MAAMmF,EAAanF,GAAY1S,cAE/B,GADAmX,EAAUU,EAAWV,QACJ,OAAb9C,EAAmB,CAErB,GAAID,GAAmBC,EADNwD,EAAWT,MAG1B,YADAH,GAAWa,GAAcZ,EAAQC,EAAS9C,IAMhDpB,IAAiByE,EACjBrC,EAAKrV,cAAgBiX,GAAWU,EAAeT,EAAQC,EAAS9C,GAGlE,SAAS0D,GACPb,EACAE,GAEA,OAAOK,GACLvC,GAAeD,GACf1C,GAAiBD,GACjB4E,EACAE,GAIJ,SAASY,GACPd,EACAE,GAEA,OAAOQ,GACL1C,GAAeD,GACf1C,GAAiBD,GACjB4E,EACAE,GAIJ,SAASa,GACPf,EACAE,GAEA,OAAOK,GACLvC,GACAhD,GAAkBG,GAClB6E,EACAE,GAIJ,SAASc,GACPhB,EACAE,GAEA,OAAOQ,GACL1C,GACAhD,GAAkBG,GAClB6E,EACAE,GAIJ,SAASe,GACPjB,EACArX,GAEA,GAAmB,oBAARA,EAAoB,CAC7B,MAAMuY,EAAcvY,EACdtjD,EAAO26D,IAEb,OADAkB,EAAY77D,GACL,KACL67D,EAAY,OAET,GAAY,OAARvY,QAAwBt3D,IAARs3D,EAAmB,CAC5C,MAAMwY,EAAYxY,EAEhBr1D,aACE6tE,EAAUlrE,eAAe,WACzB,+HAEA,wBAA0BkC,OAAOyD,KAAKulE,GAAW5lE,KAAK,MAAQ,KAGlE,MAAM8J,EAAO26D,IAEb,OADAmB,EAAUhrE,QAAUkP,EACb,KACL87D,EAAUhrE,QAAU,OAK1B,SAASirE,GACPzY,EACAqX,EACAE,GAGE5sE,aACoB,oBAAX0sE,EACP,+GAEW,OAAXA,SAAyBA,EAAS,QAKtC,MAAMqB,EACK,OAATnB,QAA0B7uE,IAAT6uE,EAAqBA,EAAK/5D,OAAO,CAACwiD,IAAQ,KAE7D,OAAO4X,GACLvC,GACAhD,GAAkBG,GAClB8F,GAAuBx1C,KAAK,KAAMu0C,EAAQrX,GAC1C0Y,GAIJ,SAASC,GACP3Y,EACAqX,EACAE,GAGE5sE,aACoB,oBAAX0sE,EACP,+GAEW,OAAXA,SAAyBA,EAAS,QAKtC,MAAMqB,EACK,OAATnB,QAA0B7uE,IAAT6uE,EAAqBA,EAAK/5D,OAAO,CAACwiD,IAAQ,KAE7D,OAAO+X,GACL1C,GACAhD,GAAkBG,GAClB8F,GAAuBx1C,KAAK,KAAMu0C,EAAQrX,GAC1C0Y,GAIJ,SAASE,GAAmB3kE,EAAU4kE,IAMtC,MAAMC,GAAmBF,GAEzB,SAASG,GAAiBzhE,EAAaigE,GACrC,MACM/C,OAAoB9rE,IAAT6uE,EAAqB,KAAOA,EAE7C,OAHahC,KAERpV,cAAgB,CAAC7oD,EAAUk9D,GACzBl9D,EAGT,SAAS0hE,GAAkB1hE,EAAaigE,GACtC,MAAM/B,EAAOG,KACPnB,OAAoB9rE,IAAT6uE,EAAqB,KAAOA,EACvChP,EAAYiN,EAAKrV,cACvB,GAAkB,OAAdoI,GACe,OAAbiM,EAAmB,CAErB,GAAID,GAAmBC,EADejM,EAAU,IAE9C,OAAOA,EAAU,GAKvB,OADAiN,EAAKrV,cAAgB,CAAC7oD,EAAUk9D,GACzBl9D,EAGT,SAAS2hE,GACPC,EACA3B,GAEA,MAAM/B,EAAOD,KACPf,OAAoB9rE,IAAT6uE,EAAqB,KAAOA,EACvCrnD,EAAYgpD,IAElB,OADA1D,EAAKrV,cAAgB,CAACjwC,EAAWskD,GAC1BtkD,EAGT,SAASipD,GACPD,EACA3B,GAEA,MAAM/B,EAAOG,KACPnB,OAAoB9rE,IAAT6uE,EAAqB,KAAOA,EACvChP,EAAYiN,EAAKrV,cACvB,GAAkB,OAAdoI,GAEe,OAAbiM,EAAmB,CAErB,GAAID,GAAmBC,EADejM,EAAU,IAE9C,OAAOA,EAAU,GAIvB,MAAMr4C,EAAYgpD,IAElB,OADA1D,EAAKrV,cAAgB,CAACjwC,EAAWskD,GAC1BtkD,EAKT,IAAIkpD,IAAiC,EAWrC,SAAS9C,GACPhmD,EACAmlD,EACAjtD,GAEAxgB,YACEurE,GAAoBC,GACpB,wFAKA7oE,aACE8I,UAAUvK,QAAU,EACpB,qMAMJ,MAAMuZ,EAAY6N,EAAM7N,UACxB,GACE6N,IAAUsiD,IACK,OAAdnwD,GAAsBA,IAAcmwD,GACrC,CAIAS,IAA+B,EAC/B,MAAMnK,EAAuB,CAC3B1xD,eAAgBqvD,GAChBr+C,SACAwuD,aAAc,KACdC,WAAY,KACZ15D,KAAM,MAEmB,OAAvB+1D,KACFA,GAAqB,IAAI3T,KAE3B,MAAM6W,EAAyBlD,GAAmB/qD,IAAIktD,GACtD,QAA+B/sE,IAA3B8tE,EACFlD,GAAmBhrD,IAAImtD,EAAOvM,OACzB,CAEL,IAAImQ,EAAwB7C,EAC5B,KAAsC,OAA/B6C,EAAsB97D,MAC3B87D,EAAwBA,EAAsB97D,KAEhD87D,EAAsB97D,KAAO2rD,OAE1B,CACLE,KAEA,MACM5xD,EAAiBwxD,GADHC,KAC0C34C,GAExD44C,EAAuB,CAC3B1xD,iBACAgR,SACAwuD,aAAc,KACdC,WAAY,KACZ15D,KAAM,MAIF4wD,EAAOsH,EAAMtH,KACnB,GAAa,OAATA,EAEFjF,EAAO3rD,KAAO2rD,MACT,CACL,MAAMwN,EAAQvI,EAAK5wD,KACL,OAAVm5D,IAEFxN,EAAO3rD,KAAOm5D,GAEhBvI,EAAK5wD,KAAO2rD,EAId,GAFAuM,EAAMtH,KAAOjF,EAGX54C,EAAM9Y,iBAAmBumD,KACV,OAAdt7C,GAAsBA,EAAUjL,iBAAmBumD,IACpD,CAIA,MAAMqY,EAAsBX,EAAMW,oBAClC,GAA4B,OAAxBA,EAA8B,CAChC,IAAIkD,EAEFA,EAAiB/rE,GAAuBC,QACxCD,GAAuBC,QAAU+rE,GAEnC,IACE,MAAMC,EAAmB/D,EAAMY,kBACzBY,EAAab,EAAoBoD,EAAchxD,GAOrD,GAFA0gD,EAAO8N,aAAeZ,EACtBlN,EAAO+N,WAAaA,EAChB76C,GAAG66C,EAAYuC,GAKjB,OAEF,MAAO/wE,IAhBT,QAoBI8E,GAAuBC,QAAU8rE,KAMA,IAAnCF,ICypBH,SAAyC9oD,IAExB,IAAhBmpD,KAA+C,IAAtBC,IAC3BzwE,aACE,EACA,uXASAoD,aAAiBikB,EAAMhkB,MACvBmkB,GAA4BH,IDvqB5BqpD,CAAgCrpD,GAGpCg5C,GAAah5C,EAAO9Y,IAhIlB,qBAAuBoiE,OACzBR,IAAiC,GAmI9B,MAAMpE,GAAoC,CAC/CvK,eAEAoP,YAAavF,GACbwF,WAAYxF,GACZyF,UAAWzF,GACX0F,oBAAqB1F,GACrB2F,gBAAiB3F,GACjB4F,QAAS5F,GACT6F,WAAY7F,GACZ8F,OAAQ9F,GACR+F,SAAU/F,GACVgG,cAAehG,IAiCjB,IAAIS,GAAiD,KACjDD,GAA8D,KAC9DD,GAAkD,KAClD0F,GAA8D,KAC9DhB,GAA+D,KAEtD,CACX,MAAMiB,EAA2B,KAC/B7vE,cACE,EACA,iQAOE8vE,EAAwB,KAC5B9vE,cACE,EACA,4MAOJoqE,GAA8B,CAC5BtK,YAAW,CACTpyD,EACAqiE,IAEOjQ,GAAYpyD,EAASqiE,GAG9Bb,YAAW,CAAIviE,EAAaigE,KAC1B9D,GAAuB,cACvBG,KACOmF,GAAczhE,EAAUigE,IAEjCuC,WAAU,CACRzhE,EACAqiE,KAEAjH,GAAuB,aACvBG,KACOnJ,GAAYpyD,EAASqiE,IAE9BX,UAAS,CACP1C,EACAE,KAEA9D,GAAuB,YACvBG,KACOsE,GAAYb,EAAQE,IAE7ByC,oBAAmB,CACjBha,EACAqX,EACAE,KAEA9D,GAAuB,sBACvBG,KACO6E,GAAsBzY,EAAKqX,EAAQE,IAE5C0C,gBAAe,CACb5C,EACAE,KAEA9D,GAAuB,kBACvBG,KACOwE,GAAkBf,EAAQE,IAEnC2C,QAAW7C,EAAiBE,GAC1B9D,GAAuB,UACvBG,KACA,MAAM0F,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+sE,GACjC,IACE,OAAOtB,GAAU5B,EAAQE,GAD3B,QAGEhqE,GAAuBC,QAAU8rE,IAGrCa,WACEpE,EACAC,EACAC,GAEAxC,GAAuB,aACvBG,KACA,MAAM0F,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+sE,GACjC,IACE,OAAOzE,GAAaC,EAASC,EAAYC,GAD3C,QAGE1oE,GAAuBC,QAAU8rE,IAGrCc,OAAU9kD,IACRm+C,GAAuB,SACvBG,KACO6D,GAASniD,IAElB+kD,SACEnE,GAEAzC,GAAuB,WACvBG,KACA,MAAM0F,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+sE,GACjC,IACE,OAAOrD,GAAWhB,GADpB,QAGE3oE,GAAuBC,QAAU8rE,IAGrCgB,cAAiBrmE,EAAU4kE,GACzBpF,GAAuB,gBACvBG,OAKJkB,GAA2C,CACzCrK,YAAW,CACTpyD,EACAqiE,IAEOjQ,GAAYpyD,EAASqiE,GAG9Bb,YAAW,CAAIviE,EAAaigE,KAC1B9D,GAAuB,cACvBK,KACOiF,GAAczhE,EAAUigE,IAEjCuC,WAAU,CACRzhE,EACAqiE,KAEAjH,GAAuB,aACvBK,KACOrJ,GAAYpyD,EAASqiE,IAE9BX,UAAS,CACP1C,EACAE,KAEA9D,GAAuB,YACvBK,KACOoE,GAAYb,EAAQE,IAE7ByC,oBAAmB,CACjBha,EACAqX,EACAE,KAEA9D,GAAuB,sBACvBK,KACO2E,GAAsBzY,EAAKqX,EAAQE,IAE5C0C,gBAAe,CACb5C,EACAE,KAEA9D,GAAuB,kBACvBK,KACOsE,GAAkBf,EAAQE,IAEnC2C,QAAW7C,EAAiBE,GAC1B9D,GAAuB,UACvBK,KACA,MAAMwF,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+sE,GACjC,IACE,OAAOtB,GAAU5B,EAAQE,GAD3B,QAGEhqE,GAAuBC,QAAU8rE,IAGrCa,WACEpE,EACAC,EACAC,GAEAxC,GAAuB,aACvBK,KACA,MAAMwF,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+sE,GACjC,IACE,OAAOzE,GAAaC,EAASC,EAAYC,GAD3C,QAGE1oE,GAAuBC,QAAU8rE,IAGrCc,OAAU9kD,IACRm+C,GAAuB,SACvBK,KACO2D,GAASniD,IAElB+kD,SACEnE,GAEAzC,GAAuB,WACvBK,KACA,MAAMwF,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+sE,GACjC,IACE,OAAOrD,GAAWhB,GADpB,QAGE3oE,GAAuBC,QAAU8rE,IAGrCgB,cAAiBrmE,EAAU4kE,GACzBpF,GAAuB,gBACvBK,OAKJe,GAA+B,CAC7BpK,YAAW,CACTpyD,EACAqiE,IAEOjQ,GAAYpyD,EAASqiE,GAG9Bb,YAAW,CAAIviE,EAAaigE,KAC1B9D,GAAuB,cACvBK,KACOkF,GAAe1hE,EAAUigE,IAElCuC,WAAU,CACRzhE,EACAqiE,KAEAjH,GAAuB,aACvBK,KACOrJ,GAAYpyD,EAASqiE,IAE9BX,UAAS,CACP1C,EACAE,KAEA9D,GAAuB,YACvBK,KACOqE,GAAad,EAAQE,IAE9ByC,oBAAmB,CACjBha,EACAqX,EACAE,KAEA9D,GAAuB,sBACvBK,KACO6E,GAAuB3Y,EAAKqX,EAAQE,IAE7C0C,gBAAe,CACb5C,EACAE,KAEA9D,GAAuB,kBACvBK,KACOuE,GAAmBhB,EAAQE,IAEpC2C,QAAW7C,EAAiBE,GAC1B9D,GAAuB,UACvBK,KACA,MAAMwF,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+rE,GACjC,IACE,OAAOJ,GAAW9B,EAAQE,GAD5B,QAGEhqE,GAAuBC,QAAU8rE,IAGrCa,WACEpE,EACAC,EACAC,GAEAxC,GAAuB,aACvBK,KACA,MAAMwF,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+rE,GACjC,IACE,OAAOhD,GAAcR,GADvB,QAGExoE,GAAuBC,QAAU8rE,IAGrCc,OAAU9kD,IACRm+C,GAAuB,SACvBK,KACO6D,MAET0C,SACEnE,GAEAzC,GAAuB,WACvBK,KACA,MAAMwF,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+rE,GACjC,IACE,OAAOpC,KADT,QAGE5pE,GAAuBC,QAAU8rE,IAGrCgB,cAAa,CAAIrmE,EAAU4kE,KACzBpF,GAAuB,gBACvBK,KACOgF,GAAiB7kE,EAAO4kE,KAInC0B,GAA2C,CACzC9P,YAAW,CACTpyD,EACAqiE,KAEAF,IACO/P,GAAYpyD,EAASqiE,IAG9Bb,YAAW,CAAIviE,EAAaigE,KAC1B9D,GAAuB,cACvBgH,IACA7G,KACOmF,GAAczhE,EAAUigE,IAEjCuC,WAAU,CACRzhE,EACAqiE,KAEAjH,GAAuB,aACvBgH,IACA7G,KACOnJ,GAAYpyD,EAASqiE,IAE9BX,UAAS,CACP1C,EACAE,KAEA9D,GAAuB,YACvBgH,IACA7G,KACOsE,GAAYb,EAAQE,IAE7ByC,oBAAmB,CACjBha,EACAqX,EACAE,KAEA9D,GAAuB,sBACvBgH,IACA7G,KACO6E,GAAsBzY,EAAKqX,EAAQE,IAE5C0C,gBAAe,CACb5C,EACAE,KAEA9D,GAAuB,kBACvBgH,IACA7G,KACOwE,GAAkBf,EAAQE,IAEnC2C,QAAW7C,EAAiBE,GAC1B9D,GAAuB,UACvBgH,IACA7G,KACA,MAAM0F,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+sE,GACjC,IACE,OAAOtB,GAAU5B,EAAQE,GAD3B,QAGEhqE,GAAuBC,QAAU8rE,IAGrCa,WACEpE,EACAC,EACAC,GAEAxC,GAAuB,aACvBgH,IACA7G,KACA,MAAM0F,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+sE,GACjC,IACE,OAAOzE,GAAaC,EAASC,EAAYC,GAD3C,QAGE1oE,GAAuBC,QAAU8rE,IAGrCc,OAAU9kD,IACRm+C,GAAuB,SACvBgH,IACA7G,KACO6D,GAASniD,IAElB+kD,SACEnE,GAEAzC,GAAuB,WACvBgH,IACA7G,KACA,MAAM0F,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+sE,GACjC,IACE,OAAOrD,GAAWhB,GADpB,QAGE3oE,GAAuBC,QAAU8rE,IAGrCgB,cAAiBrmE,EAAU4kE,GACzBpF,GAAuB,gBACvBgH,IACA7G,OAKJ2F,GAA4C,CAC1C9O,YAAW,CACTpyD,EACAqiE,KAEAF,IACO/P,GAAYpyD,EAASqiE,IAG9Bb,YAAW,CAAIviE,EAAaigE,KAC1B9D,GAAuB,cACvBgH,IACA3G,KACOkF,GAAe1hE,EAAUigE,IAElCuC,WAAU,CACRzhE,EACAqiE,KAEAjH,GAAuB,aACvBgH,IACA3G,KACOrJ,GAAYpyD,EAASqiE,IAE9BX,UAAS,CACP1C,EACAE,KAEA9D,GAAuB,YACvBgH,IACA3G,KACOqE,GAAad,EAAQE,IAE9ByC,oBAAmB,CACjBha,EACAqX,EACAE,KAEA9D,GAAuB,sBACvBgH,IACA3G,KACO6E,GAAuB3Y,EAAKqX,EAAQE,IAE7C0C,gBAAe,CACb5C,EACAE,KAEA9D,GAAuB,kBACvBgH,IACA3G,KACOuE,GAAmBhB,EAAQE,IAEpC2C,QAAW7C,EAAiBE,GAC1B9D,GAAuB,UACvBgH,IACA3G,KACA,MAAMwF,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+rE,GACjC,IACE,OAAOJ,GAAW9B,EAAQE,GAD5B,QAGEhqE,GAAuBC,QAAU8rE,IAGrCa,WACEpE,EACAC,EACAC,GAEAxC,GAAuB,aACvBgH,IACA3G,KACA,MAAMwF,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+rE,GACjC,IACE,OAAOhD,GAAcR,GADvB,QAGExoE,GAAuBC,QAAU8rE,IAGrCc,OAAU9kD,IACRm+C,GAAuB,SACvBgH,IACA3G,KACO6D,MAET0C,SACEnE,GAEAzC,GAAuB,WACvBgH,IACA3G,KACA,MAAMwF,EAAiB/rE,GAAuBC,QAC9CD,GAAuBC,QAAU+rE,GACjC,IACE,OAAOpC,KADT,QAGE5pE,GAAuBC,QAAU8rE,IAGrCgB,cAAa,CAAIrmE,EAAU4kE,KACzBpF,GAAuB,gBACvBgH,IACA3G,KACOgF,GAAiB7kE,EAAO4kE,KE5rDrC,IAAI8B,GAAqB,EACrBC,IAA6B,EAEjC,SAASC,KACP,OAAOF,GAUT,SAASG,GAAmBxqD,GACrBlmB,OAILwwE,GAAoBlmE,0BAEd4b,EAAMswC,gBAAiC,IAC3CtwC,EAAMswC,gBAAkBlsD,4BAI5B,SAASqmE,GAA2BzqD,GAC7BlmB,OAGLwwE,IAAqB,GAGvB,SAASI,GACP1qD,EACA2qD,GAEA,GAAK7wE,MAIDwwE,IAAqB,EAAG,CAC1B,MAAM/7C,EAAcnqB,0BAAQkmE,GAC5BtqD,EAAMmwC,gBAAkB5hC,EACpBo8C,IACF3qD,EAAMuwC,iBAAmBhiC,GAE3B+7C,IAAqB,GCdzB,IAAIM,GAAqC,KACrCC,GAAoD,KACpDvlD,IAAuB,EA4B3B,SAASwlD,GACP5N,EACA1kD,GAGE,OAAQ0kD,EAAYjhE,KAClB,KAAKuT,GpB0kBJ,SACLu7D,EACAvyD,GAGMA,EAAS+F,WAAaR,GACxBijC,GAAgC+pB,EAAkBvyD,GACzCA,EAAS+F,WAAaN,IAG/BgjC,GAA6B8pB,EAAkBvyD,GoBnlB7CwyD,CACE9N,EAAY5uD,UAAUujB,cACtBrZ,GAEF,MACF,KAAK9I,GpBmlBJ,SACLu7D,EACAC,EACAnmB,EACAvsC,IAE2D,IAA5C0yD,EAAY7vB,MACrB7iC,EAAS+F,WAAaR,GACxBijC,GAAgC+D,EAAiBvsC,GACxCA,EAAS+F,WAAaN,IAG/BgjC,GAA6B8D,EAAiBvsC,IoB9lB5C2yD,CACEjO,EAAYlhE,KACZkhE,EAAYvN,cACZuN,EAAY5uD,UACZkK,GAMR,MAAMolD,EZoiBD,WACL,MAAM59C,EAAQ0wC,GAAYhhD,EAAe,KAAM,KAAMk/C,IAIrD,OAFA5uC,EAAMyvC,YAAc,UACpBzvC,EAAMhkB,KAAO,UACNgkB,EYziBeorD,GACtBxN,EAActvD,UAAYkK,EAC1BolD,EAAcxsD,OAAS8rD,EACvBU,EAAcnwC,UAAYf,GAOK,OAA3BwwC,EAAYjN,YACdiN,EAAYjN,WAAWF,WAAa6N,EACpCV,EAAYjN,WAAa2N,GAEzBV,EAAYlN,YAAckN,EAAYjN,WAAa2N,EAIvD,SAASyN,GAA0BnO,EAAoBl9C,GAGnD,OAFFA,EAAMyN,WAAalB,GAET2wC,EAAYjhE,KAClB,KAAKuT,EAAU,CACb,MAAMu7D,EAAkB7N,EAAY5uD,UAAUujB,cAC9C,OAAQ7R,EAAM/jB,KACZ,KAAKyT,EACH,MAAM1T,EAAOgkB,EAAMhkB,KACLgkB,EAAMwvC,cpB8jBzB,SACLub,EACA/uE,EACAuS,GAGE2yC,GAA+B6pB,EAAiB/uE,GoBnkBxCsvE,CAAsCP,EAAiB/uE,GACvD,MACF,KAAK2T,GpBqkBR,SACLo7D,EACAvtD,GAGE2jC,GAA4B4pB,EAAiBvtD,GoBxkBrC+tD,CAA0CR,EAD7B/qD,EAAMwvC,cAOvB,MAEF,KAAK9/C,EAAe,CACCwtD,EAAYlhE,KAA/B,MACMkvE,EAAchO,EAAYvN,cAC1B5K,EAAiBmY,EAAY5uD,UACnC,OAAQ0R,EAAM/jB,KACZ,KAAKyT,EACH,MAAM1T,EAAOgkB,EAAMhkB,KACLgkB,EAAMwvC,cpBqkBzB,SACLyb,EACAC,EACAnmB,EACA/oD,EACAuS,IAE2D,IAA5C28D,EAAY7vB,KACzB6F,GAA+B6D,EAAgB/oD,GoB5kBvCwvE,CACEP,EACAC,EACAnmB,EACA/oD,GAGF,MACF,KAAK2T,GpBwkBR,SACLs7D,EACAC,EACAnmB,EACAvnC,IAE2D,IAA5C0tD,EAAY7vB,KACzB8F,GAA4B4D,EAAgBvnC,GoB7kBpCiuD,CACER,EACAC,EACAnmB,EAJW/kC,EAAMwvC,cAOnB,MACF,KAAKt/C,IpB0kBR,SACL+6D,EACAC,EACAnmB,GAEemmB,EAAY7vB,IoB9kBjBqwB,CACET,EACAC,GAKN,MAEF,QACE,QAKR,SAASS,GAAW3rD,EAAO4rD,GACzB,OAAQ5rD,EAAM/jB,KACZ,KAAKyT,EAAe,CAClB,MAAM1T,EAAOgkB,EAAMhkB,KAEbwc,GADQwH,EAAMwvC,apBoUnB,SACLh3C,EACAxc,EACAuS,GAEA,OACEiK,EAAS+F,WAAaR,IACtB/hB,EAAK2P,gBAAkB6M,EAASsF,SAASnS,cAElC,KAGA6M,EoB/UYqzD,CAAmBD,EAAc5vE,IAClD,OAAiB,OAAbwc,IACFwH,EAAM1R,UAAakK,GACZ,GAIX,KAAK7I,EAAU,CACb,MACMo3C,EpByUL,SACLvuC,EACAgF,GAEA,MAAa,KAATA,GAAehF,EAAS+F,WAAaP,GAEhC,KAGAxF,EoBlVgBszD,CAAuBF,EAD/B5rD,EAAMwvC,cAEnB,OAAqB,OAAjBzI,IACF/mC,EAAM1R,UAAay4C,GACZ,GAIX,KAAK72C,GACH,GAAIjW,KAA8B,CAChC,MAAMwsD,GpB6UZjuC,EoB7U0DozD,GpB+U7CrtD,WAAaN,GAEjB,KAGAzF,EoBnVH,GAAyB,OAArBiuC,EAIF,OAFAzmC,EAAM/jB,IAAMsU,GACZyP,EAAM1R,UAAam4C,GACZ,EAGX,OAAO,EAET,QACE,OAAO,EpBiUN,IACLjuC,EoB9TF,SAASuzD,GAAiC/rD,GACxC,IAAKsF,GACH,OAEF,IAAIsmD,EAAef,GACnB,IAAKe,EAKH,OAHAP,GAA2BT,GAA4B5qD,GACvDsF,IAAc,OACdslD,GAAuB5qD,GAGzB,MAAMgsD,EAAyBJ,EAC/B,IAAKD,GAAW3rD,EAAO4rD,GAAe,CAKpC,GADAA,EAAe3kB,GAAyB+kB,IACnCJ,IAAiBD,GAAW3rD,EAAO4rD,GAKtC,OAHAP,GAA2BT,GAA4B5qD,GACvDsF,IAAc,OACdslD,GAAuB5qD,GAOzB8qD,GACGF,GACDoB,GAGJpB,GAAuB5qD,EACvB6qD,GAAyB3jB,GAAyB0kB,GAmCpD,SAASK,GAAiCjsD,GACnCgnC,IACHtvD,aACE,EACA,wIAKJ,MAAMqvD,EAA6B/mC,EAAM1R,UACnCoI,EAAsBsJ,EAAM2vC,cAC5B+J,EpBuTD,SACL3S,EACAvpC,EACAinC,GAGA,OADA5zC,GAAkB4zC,EAAwBsC,GHshBrC,SAA0BhG,EAAgBvjC,GAE/C,OADoBujC,EAASxsB,YAAc/W,EGthBpC0uD,CAAiBnlB,EAAcvpC,GoB7TjB2uD,CAAoBplB,EAAcrwC,EAAasJ,GAElE,GAAI05C,EAAc,CAGhB,MAAMwD,EAAc0N,GACpB,GAAoB,OAAhB1N,EACF,OAAQA,EAAYjhE,KAClB,KAAKuT,EACqB0tD,EAAY5uD,UAAUujB,epBkVnD,SACLk5C,EACAhkB,EACAvpC,GAGEsjC,GAAqBiG,EAAcvpC,GoBvV3B4uD,CACErB,EACAhkB,EACArwC,GAEF,MAEF,KAAKhH,EAAe,CACCwtD,EAAYlhE,KAA/B,MACMkvE,EAAchO,EAAYvN,cACTuN,EAAY5uD,WpBiVxC,SACL28D,EACAC,EACAnmB,EACAgC,EACAvpC,IAE2D,IAA5C0tD,EAAY7vB,KACzByF,GAAqBiG,EAAcvpC,GoBxV3B6uD,CACEpB,EACAC,EACAnmB,EACAgC,EACArwC,GAEF,QAMV,OAAOgjD,EAGT,SAAS4S,GAAmCtsD,GACrCgnC,IACHtvD,aACE,EACA,0IAIJ,IAAI+uD,EAAmBzmC,EAAM1R,UAC7B5W,YACE+uD,EACA,uHAGFokB,GpB6QK,SACLpkB,GAEA,IAAI11C,EAAO01C,EAAiBnzB,YAIxBphB,EAAQ,EACZ,KAAOnB,GAAM,CACX,GAAIA,EAAKwN,WAAaN,GAAc,CAClC,IAAI9E,EAASpI,EAAWoI,KACxB,GAAIA,IAAS2qC,GAAmB,CAC9B,GAAc,IAAV5xC,EACF,OAAO+0C,GAA0Bl2C,GAEjCmB,SAEOiH,IAAS0qC,IAClB3xC,IAGJnB,EAAOA,EAAKuiB,YAGd,OAAO,KoBrSkBi5C,CACvB9lB,GAIJ,SAAS+lB,GAAoBxsD,GAC3B,IAAImO,EAASnO,EAAM5O,OACnB,KACa,OAAX+c,GACAA,EAAOlyB,MAAQyT,GACfye,EAAOlyB,MAAQuT,GACf2e,EAAOlyB,MAAQsU,IAEf4d,EAASA,EAAO/c,OAElBw5D,GAAuBz8C,EAGzB,SAASs+C,GAAkBzsD,GACzB,IAAKgnC,GACH,OAAO,EAET,GAAIhnC,IAAU4qD,GAGZ,OAAO,EAET,IAAKtlD,GAMH,OAFAknD,GAAoBxsD,GACpBsF,IAAc,GACP,EAGT,MAAMtpB,EAAOgkB,EAAMhkB,KAOnB,GACEgkB,EAAM/jB,MAAQyT,GACJ,SAAT1T,GACU,SAATA,IACCopD,GAAqBppD,EAAMgkB,EAAM2vC,eACpC,CACA,IAAIic,EAAef,GACnB,KAAOe,GACLd,GAAyB9qD,EAAO4rD,GAChCA,EAAe3kB,GAAyB2kB,GAQ5C,OAJAY,GAAoBxsD,GACpB6qD,GAAyBD,GACrB3jB,GAAyBjnC,EAAM1R,WAC/B,MACG,EAGT,SAASo+D,KACF1lB,KAIL4jB,GAAuB,KACvBC,GAAyB,KACzBvlD,IAAc,GC1ShB,MAAMtmB,GAAoBzE,KAAqByE,kBAE/C,IAEI2tE,GACAC,GACAC,GACAC,GACOC,GANPC,IAA4B,EAgBzB,SAASC,GACd/vE,EACAkjB,EACA8sD,EACA3W,GAOEn2C,EAAe2N,MALD,OAAZ7wB,EAKqB0jE,GACrBxgD,EACA,KACA8sD,EACA3W,GASqBoK,GACrBvgD,EACAljB,EAAQ6wB,MACRm/C,EACA3W,GAqCN,SAAS4W,GACPjwE,EACAkjB,EACAqrC,EACA/M,EACA6X,GAOE,GAAIn2C,EAAepkB,OAASokB,EAAeqvC,YAAa,CAGtD,MAAM2d,EAAiB3hB,EAAUxnC,UAC7BmpD,GACFjwE,KACEiwE,EACA1uB,EACA,OACA3iD,aAAiB0vD,GACjBlrC,IAMR,MAAM9jB,EAASgvD,EAAUhvD,OACnBizD,EAAMtvC,EAAesvC,IAG3B,IAAIwd,EA0CJ,OAzCAG,GAAqBjtD,EAAgBm2C,GAEnCv3D,GAAkB9B,QAAUkjB,EAC5BM,GAAgB,UAChBwsD,EAAe9I,GACblnE,EACAkjB,EACA3jB,EACAiiD,EACAgR,EACA6G,IAGA78D,MACCC,MACCymB,EAAe+xB,KAAO2c,KAGa,OAAjC1uC,EAAeyvC,gBACjBqd,EAAe9I,GACblnE,EACAkjB,EACA3jB,EACAiiD,EACAgR,EACA6G,IAIN71C,GAAgB,MAYF,OAAZxjB,GAAqB8vE,IAUzB5sD,EAAeqN,WAAanB,GAC5B2gD,GACE/vE,EACAkjB,EACA8sD,EACA3W,GAEKn2C,EAAe2N,QAhBpB82C,GAAa3nE,EAASkjB,EAAgBm2C,GAC/B+W,GACLpwE,EACAkjB,EACAm2C,IAeN,SAASgX,GACPrwE,EACAkjB,EACAqrC,EACA/M,EACA+nB,EACAlQ,GAEA,GAAgB,OAAZr5D,EAAkB,CACpB,IAAIlB,EAAOyvD,EAAUzvD,KACrB,GbOG,SAAmCA,GACxC,MACkB,oBAATA,IACN20D,GAAgB30D,SACK5D,IAAtB4D,EAAK66D,aaVH2W,CAA0BxxE,IACJ,OAAtByvD,EAAUgiB,cAEiBr1E,IAA3BqzD,EAAUoL,aAUV,OALAz2C,EAAenkB,IAAMmU,GACrBgQ,EAAepkB,KAAOA,EAEpB0xE,GAA+BttD,EAAgBpkB,GAE1C2xE,GACLzwE,EACAkjB,EACApkB,EACA0iD,EACA+nB,EACAlQ,GAGS,CACX,MAAM6W,EAAiBpxE,EAAKioB,UACxBmpD,GAGFjwE,KACEiwE,EACA1uB,EACA,OACA3iD,aAAiBC,GACjBukB,IAIN,IAAIwN,EAAQ+iC,GACVrF,EAAUzvD,KACV,KACA0iD,EACA,KACAt+B,EAAe+xB,KACfokB,GAKF,OAHAxoC,EAAM2hC,IAAMtvC,EAAesvC,IAC3B3hC,EAAM3c,OAASgP,EACfA,EAAe2N,MAAQA,EAChBA,EAEI,CACX,MAAM/xB,EAAOyvD,EAAUzvD,KACjBoxE,EAAiBpxE,EAAKioB,UACxBmpD,GAGFjwE,KACEiwE,EACA1uB,EACA,OACA3iD,aAAiBC,GACjBukB,IAIN,IAAIqtD,EAAiB1wE,EAAQ6wB,MAC7B,GAAI04C,EAAuBlQ,EAAsB,CAG/C,MAAMsX,EAAYD,EAAaje,cAE/B,IAAI8d,EAAUhiB,EAAUgiB,QAExB,GADAA,EAAsB,OAAZA,EAAmBA,EAAU1hD,GACnC0hD,EAAQI,EAAWnvB,IAAcxhD,EAAQwyD,MAAQtvC,EAAesvC,IAClE,OAAO4d,GACLpwE,EACAkjB,EACAm2C,GAKNn2C,EAAeqN,WAAanB,GAC5B,IAAIixC,EAAW1M,GACb+c,EACAlvB,GAMF,OAHA6e,EAAS7N,IAAMtvC,EAAesvC,IAC9B6N,EAASnsD,OAASgP,EAClBA,EAAe2N,MAAQwvC,EAChBA,EAGT,SAASoQ,GACPzwE,EACAkjB,EACAqrC,EACA/M,EACA+nB,EACAlQ,GAOE,GAAIn2C,EAAepkB,OAASokB,EAAeqvC,YAAa,CAGtD,IAAIqe,EAAgB1tD,EAAeqvC,YAC/Bqe,EAAc3xE,WAAaX,OAI7BsyE,EAAgBlxE,aAA4BkxE,IAE9C,MAAMC,EAAiBD,GAAkBA,EAAoB7pD,UACzD8pD,GACF5wE,KACE4wE,EACArvB,EACA,OACA3iD,aAAiB+xE,GACjBvtD,IAMR,GAAgB,OAAZrjB,EAAkB,CACpB,MAAM2wE,EAAY3wE,EAAQyyD,cAC1B,GACE5jC,GAAa8hD,EAAWnvB,IACxBxhD,EAAQwyD,MAAQtvC,EAAesvC,MAE/Bsd,IAAmB,EACfvG,EAAuBlQ,GACzB,OAAO+W,GACLpwE,EACAkjB,EACAm2C,GAKR,OAAOyX,GACL9wE,EACAkjB,EACAqrC,EACA/M,EACA6X,GAqDJ,SAAS0X,GAAQ/wE,EAAuBkjB,GACtC,MAAMsvC,EAAMtvC,EAAesvC,KAEZ,OAAZxyD,GAA4B,OAARwyD,GACR,OAAZxyD,GAAoBA,EAAQwyD,MAAQA,KAGrCtvC,EAAeqN,WAAaX,IAIhC,SAASkhD,GACP9wE,EACAkjB,EACAqrC,EACA/M,EACA6X,GAGE,GAAIn2C,EAAepkB,OAASokB,EAAeqvC,YAAa,CAGtD,MAAM2d,EAAiB3hB,EAAUxnC,UAC7BmpD,GACFjwE,KACEiwE,EACA1uB,EACA,OACA3iD,aAAiB0vD,GACjBlrC,IAMR,MACMxY,EAAUkkD,GAAiB7rC,EADTorC,GAAmBprC,EAAgBqrC,GAAW,IAGtE,IAAIyhB,EA0CJ,OAzCAG,GAAqBjtD,EAAgBm2C,GAEnCv3D,GAAkB9B,QAAUkjB,EAC5BM,GAAgB,UAChBwsD,EAAe9I,GACblnE,EACAkjB,EACAqrC,EACA/M,EACA32C,EACAwuD,IAGA78D,MACCC,MACCymB,EAAe+xB,KAAO2c,KAGa,OAAjC1uC,EAAeyvC,gBACjBqd,EAAe9I,GACblnE,EACAkjB,EACAqrC,EACA/M,EACA32C,EACAwuD,IAIN71C,GAAgB,MAYF,OAAZxjB,GAAqB8vE,IAUzB5sD,EAAeqN,WAAanB,GAC5B2gD,GACE/vE,EACAkjB,EACA8sD,EACA3W,GAEKn2C,EAAe2N,QAhBpB82C,GAAa3nE,EAASkjB,EAAgBm2C,GAC/B+W,GACLpwE,EACAkjB,EACAm2C,IAeN,SAAS2X,GACPhxE,EACAkjB,EACAqrC,EACA/M,EACA6X,GAGE,GAAIn2C,EAAepkB,OAASokB,EAAeqvC,YAAa,CAGtD,MAAM2d,EAAiB3hB,EAAUxnC,UAC7BmpD,GACFjwE,KACEiwE,EACA1uB,EACA,OACA3iD,aAAiB0vD,GACjBlrC,IASR,IAAI4tD,EAUJ,IAAIzU,EATA0U,GAAwB3iB,IAC1B0iB,GAAa,EACbE,GAA0BjuD,IAE1B+tD,GAAa,EAEfd,GAAqBjtD,EAAgBm2C,GAIpB,OAFAn2C,EAAe9R,WAGd,OAAZpR,IAKFA,EAAQiV,UAAY,KACpBiO,EAAejO,UAAY,KAE3BiO,EAAeqN,WAAalB,IAG9BwtC,GACE35C,EACAqrC,EACA/M,GAGFgc,GACEt6C,EACAqrC,EACA/M,EACA6X,GAEFmD,GAAe,GAGfA,EAFqB,OAAZx8D,ER0Kb,SACEkjB,EACA23C,EACA5S,EACAoR,GAEA,MAAM/9C,EAAW4H,EAAe9R,UAE1B42C,EAAW9kC,EAAeuvC,cAChCn3C,EAASjK,MAAQ22C,EAEjB,MAAMopB,EAAa91D,EAASzQ,QACtBkyD,EAAclC,EAAKkC,YACzB,IAAIT,EACJ,GAA2B,kBAAhBS,GAA4C,OAAhBA,EACrCT,EAAcW,GAAYF,OACrB,CAMLT,EAAcvN,GAAiB7rC,EALGorC,GAChCprC,EACA23C,GACA,IAKJ,MAAMC,EAA2BD,EAAKC,yBAChCuW,EACgC,oBAA7BvW,GACqC,oBAArCx/C,EAAS4hD,wBASfmU,GACqD,oBAA9C/1D,EAASs7C,kCAC+B,oBAAvCt7C,EAASm9C,2BAEdzQ,IAAaC,GAAYmpB,IAAe9U,GAC1CiB,GACEr6C,EACA5H,EACA2sC,EACAqU,GAKNgV,KAEA,MAAMlV,EAAWl5C,EAAeyvC,cAChC,IAAI0J,EAAY/gD,EAASqP,MAAQyxC,EAC7B1J,EAAcxvC,EAAewvC,YAWjC,GAVoB,OAAhBA,IACFyM,GACEj8C,EACAwvC,EACAzK,EACA3sC,EACA+9C,GAEFgD,EAAWn5C,EAAeyvC,eAG1B3K,IAAaC,GACbmU,IAAaC,IACZpN,OACAsiB,KAOD,MAH0C,oBAA/Bj2D,EAAS+jD,oBAClBn8C,EAAeqN,WAAajB,KAEvB,EAG+B,oBAA7BwrC,IACTF,GACE13C,EACA23C,EACAC,EACA7S,GAEFoU,EAAWn5C,EAAeyvC,eAG5B,MAAM6J,EACJ+U,MACApV,GACEj5C,EACA23C,EACA7S,EACAC,EACAmU,EACAC,EACAC,GA0CJ,OAvCIE,GAIC6U,GAC8C,oBAAvC/1D,EAASq7C,2BACwB,oBAAhCr7C,EAASi9C,qBAElB/K,GAAgBtqC,EAAgB,sBACW,oBAAhC5H,EAASi9C,oBAClBj9C,EAASi9C,qBAEuC,oBAAvCj9C,EAASq7C,2BAClBr7C,EAASq7C,4BAEXlJ,MAEwC,oBAA/BnyC,EAAS+jD,oBAClBn8C,EAAeqN,WAAajB,MAKY,oBAA/BhU,EAAS+jD,oBAClBn8C,EAAeqN,WAAajB,IAK9BpM,EAAeuvC,cAAgBxK,EAC/B/kC,EAAeyvC,cAAgB0J,GAKjC/gD,EAASjK,MAAQ42C,EACjB3sC,EAASqP,MAAQ0xC,EACjB/gD,EAASzQ,QAAUyxD,EAEZE,EQrTUgV,CACbtuD,EACAqrC,EACA/M,EACA6X,GRqTN,SACEr5D,EACAkjB,EACA23C,EACA5S,EACAoR,GAEA,MAAM/9C,EAAW4H,EAAe9R,UAE1B42C,EAAW9kC,EAAeuvC,cAChCn3C,EAASjK,MACP6R,EAAepkB,OAASokB,EAAeqvC,YACnCvK,EACAyR,GAAoBv2C,EAAepkB,KAAMkpD,GAE/C,MAAMopB,EAAa91D,EAASzQ,QACtBkyD,EAAclC,EAAKkC,YACzB,IAAIT,EACJ,GAA2B,kBAAhBS,GAA4C,OAAhBA,EACrCT,EAAcW,GAAYF,OACrB,CAELT,EAAcvN,GAAiB7rC,EADHorC,GAAmBprC,EAAgB23C,GAAM,IAIvE,MAAMC,EAA2BD,EAAKC,yBAChCuW,EACgC,oBAA7BvW,GACqC,oBAArCx/C,EAAS4hD,wBASfmU,GACqD,oBAA9C/1D,EAASs7C,kCAC+B,oBAAvCt7C,EAASm9C,2BAEdzQ,IAAaC,GAAYmpB,IAAe9U,GAC1CiB,GACEr6C,EACA5H,EACA2sC,EACAqU,GAKNgV,KAEA,MAAMlV,EAAWl5C,EAAeyvC,cAChC,IAAI0J,EAAY/gD,EAASqP,MAAQyxC,EAC7B1J,EAAcxvC,EAAewvC,YAYjC,GAXoB,OAAhBA,IACFyM,GACEj8C,EACAwvC,EACAzK,EACA3sC,EACA+9C,GAEFgD,EAAWn5C,EAAeyvC,eAI1B3K,IAAaC,GACbmU,IAAaC,IACZpN,OACAsiB,KAoBD,MAhB2C,oBAAhCj2D,EAASujD,qBAEhB7W,IAAahoD,EAAQyyD,eACrB2J,IAAap8D,EAAQ2yD,gBAErBzvC,EAAeqN,WAAajB,KAGgB,oBAArChU,EAAS4hD,0BAEhBlV,IAAahoD,EAAQyyD,eACrB2J,IAAap8D,EAAQ2yD,gBAErBzvC,EAAeqN,WAAaV,MAGzB,EAG+B,oBAA7BirC,IACTF,GACE13C,EACA23C,EACAC,EACA7S,GAEFoU,EAAWn5C,EAAeyvC,eAG5B,MAAM6J,EACJ+U,MACApV,GACEj5C,EACA23C,EACA7S,EACAC,EACAmU,EACAC,EACAC,GA0DJ,OAvDIE,GAIC6U,GAC+C,oBAAxC/1D,EAASu7C,4BACyB,oBAAjCv7C,EAASo9C,sBAElBlL,GAAgBtqC,EAAgB,uBACY,oBAAjC5H,EAASo9C,qBAClBp9C,EAASo9C,oBAAoBzQ,EAAUoU,EAAUC,GAEA,oBAAxChhD,EAASu7C,4BAClBv7C,EAASu7C,2BAA2B5O,EAAUoU,EAAUC,GAE1D7O,MAEyC,oBAAhCnyC,EAASujD,qBAClB37C,EAAeqN,WAAajB,IAEkB,oBAArChU,EAAS4hD,0BAClBh6C,EAAeqN,WAAaV,MAKa,oBAAhCvU,EAASujD,qBAEhB7W,IAAahoD,EAAQyyD,eACrB2J,IAAap8D,EAAQ2yD,gBAErBzvC,EAAeqN,WAAajB,KAGgB,oBAArChU,EAAS4hD,0BAEhBlV,IAAahoD,EAAQyyD,eACrB2J,IAAap8D,EAAQ2yD,gBAErBzvC,EAAeqN,WAAaV,KAMhC3M,EAAeuvC,cAAgBxK,EAC/B/kC,EAAeyvC,cAAgB0J,GAKjC/gD,EAASjK,MAAQ42C,EACjB3sC,EAASqP,MAAQ0xC,EACjB/gD,EAASzQ,QAAUyxD,EAEZE,EQ7dUiV,CACbzxE,EACAkjB,EACAqrC,EACA/M,EACA6X,GAGJ,MAAMqY,EAAiBC,GACrB3xE,EACAkjB,EACAqrC,EACAiO,EACAyU,EACA5X,GAGWn2C,EAAe9R,UACjBC,QAAUmwC,IACjBrkD,aACE0yE,GACA,8HAEAhxE,aAAiBqkB,EAAepkB,OAAS,eAE3C+wE,IAA+B,GAGnC,OAAO6B,EAGT,SAASC,GACP3xE,EACAkjB,EACAqrC,EACAiO,EACAyU,EACA5X,GAGA0X,GAAQ/wE,EAASkjB,GAEjB,MAAM0uD,GAAmB1uD,EAAeqN,UAAYZ,MAAgBR,GAEpE,IAAKqtC,IAAiBoV,EAMpB,OAJIX,GACFlhB,GAA0B7sC,EAAgBqrC,GAAW,GAGhD6hB,GACLpwE,EACAkjB,EACAm2C,GAIJ,MAAM/9C,EAAW4H,EAAe9R,UAIhC,IAAI4+D,EA+DJ,OAhEAluE,GAAkB9B,QAAUkjB,EAG1B0uD,GAC8C,oBAAvCrjB,EAAUyQ,0BAOjBgR,EAAe,KAEXpzE,MACF2wE,OAIA/pD,GAAgB,UAChBwsD,EAAe10D,EAAS/b,UAEtB/C,MACCC,MACCymB,EAAe+xB,KAAO2c,KAExBt2C,EAAS/b,SAEXikB,GAAgB,OAOpBN,EAAeqN,WAAanB,GACZ,OAAZpvB,GAAoB4xE,EA/lB1B,SACE5xE,EACAkjB,EACA8sD,EACA3W,GAUAn2C,EAAe2N,MAAQ4yC,GACrBvgD,EACAljB,EAAQ6wB,MACR,KACAwoC,GAMFn2C,EAAe2N,MAAQ4yC,GACrBvgD,EACA,KACA8sD,EACA3W,GAwkBAwY,CACE7xE,EACAkjB,EACA8sD,EACA3W,GAGF0W,GACE/vE,EACAkjB,EACA8sD,EACA3W,GAMJn2C,EAAeyvC,cAAgBr3C,EAASqP,MAGpCsmD,GACFlhB,GAA0B7sC,EAAgBqrC,GAAW,GAGhDrrC,EAAe2N,MAGxB,SAASihD,GAAoB5uD,GAC3B,MAAMvK,EAAQuK,EAAe9R,UACzBuH,EAAKg9C,eACPtG,GACEnsC,EACAvK,EAAKg9C,eACLh9C,EAAKg9C,iBAAmBh9C,EAAK9N,SAEtB8N,EAAK9N,SAEdwkD,GAA0BnsC,EAAgBvK,EAAK9N,SAAS,GAE1Dm5D,GAAkB9gD,EAAgBvK,EAAKgc,eAGzC,SAASo9C,GAAe/xE,EAASkjB,EAAgBm2C,GAC/CyY,GAAoB5uD,GACpB,MAAMwvC,EAAcxvC,EAAewvC,YACnCl4D,YACkB,OAAhBk4D,EACA,qJAIF,MAAMlR,EAAYt+B,EAAeovC,aAC3ByI,EAAY73C,EAAeyvC,cAC3Bqf,EAA6B,OAAdjX,EAAqBA,EAAU75D,QAAU,KAC9Di+D,GACEj8C,EACAwvC,EACAlR,EACA,KACA6X,GAEF,MAGM2W,EAHY9sD,EAAeyvC,cAGFzxD,QAC/B,GAAI8uE,IAAiBgC,EAInB,OADAxC,KACOY,GACLpwE,EACAkjB,EACAm2C,GAGJ,MAAM1gD,EAAkBuK,EAAe9R,UAqCvC,OAnCe,OAAZpR,GAAsC,OAAlBA,EAAQ6wB,QAC7BlY,EAAKo8C,SD7yBT,SAA6BjyC,GAC3B,IAAKgnC,GACH,OAAO,EAGT,MAAMjC,EAAiB/kC,EAAM1R,UAAUujB,cAIvC,OAHAg5C,GAAyB3jB,GAAwBnC,GACjD6lB,GAAuB5qD,EACvBsF,IAAc,GACP,ECqyBL6pD,CAAoB/uD,IAWpBA,EAAeqN,WAAalB,GAK5BnM,EAAe2N,MAAQ6yC,GACrBxgD,EACA,KACA8sD,EACA3W,KAKF0W,GACE/vE,EACAkjB,EACA8sD,EACA3W,GAEFmW,MAEKtsD,EAAe2N,MA4DxB,SAASqhD,GACPC,EACAjvD,EACAqvC,EACAgX,EACAlQ,GAEiB,OAAb8Y,IAKFA,EAASl9D,UAAY,KACrBiO,EAAejO,UAAY,KAE3BiO,EAAeqN,WAAalB,IAG9B,MAAMhe,EAAQ6R,EAAeovC,aAG7BjF,GAAgBnqC,GAChB,IAAIqrC,ETh8BC,SAAkC1tD,GACvC,MAAMuxE,EAASvxE,EAAcC,QACvBma,EAASpa,EAAcE,QAC7B,OAAQqxE,GACN,KAAKzxE,KAEH,OADqBsa,EAGvB,KAAKra,KAEH,MADqBqa,EAGvB,KAAKva,KAEH,MADqCua,EAGvC,QAAS,CACPpa,EAAcC,QAAUJ,KACxB,MACMlB,GAAWq7D,EADJh6D,EAAcwxE,SA6B3B,OA3BA7yE,EAAS8yE,KACPC,IACE,GAAI1xE,EAAcC,UAAYJ,KAAS,CACrC,MAAM8xE,EAAgBD,EAAa7wE,aAEXxG,IAAlBs3E,GACFr1E,cACE,EACA,wKAGAo1E,GAIN1xE,EAAcC,QAAUH,KACxBE,EAAcE,QAAUyxE,IAG5Bv3E,IACM4F,EAAcC,UAAYJ,OAC5BG,EAAcC,QAAUF,KACxBC,EAAcE,QAAU9F,KAKtB4F,EAAcC,SACpB,KAAKH,KACH,OAAOE,EAAcE,QACvB,KAAKH,KACH,MAAMC,EAAcE,QAGxB,MADAF,EAAcE,QAAUvB,EAClBA,IS04BMizE,CAAsBlgB,GAEtCrvC,EAAepkB,KAAOyvD,EACtB,MAAMmkB,EAAexvD,EAAenkB,IblpB/B,SAAiCwvD,GACtC,GAAyB,oBAAdA,EACT,OAAOkF,GAAgBlF,GAAan8C,EAAiBD,EAChD,QAAkBjX,IAAdqzD,GAAyC,OAAdA,EAAoB,CACxD,MAAMtvD,EAAWsvD,EAAUtvD,SAC3B,GAAIA,IAAad,KACf,OAAO2U,EAET,GAAI7T,IAAaZ,KACf,OAAO4U,GAGX,OAAOZ,EasoBmCsgE,CAAwBpkB,GAClEnB,GAAelqC,GACf,MAAM0vD,EAAgBnZ,GAAoBlL,EAAWl9C,GACrD,IAAIwf,EACJ,OAAQ6hD,GACN,KAAKvgE,EAEDq+D,GAA+BttD,EAAgBqrC,GAEjD19B,EAAQigD,GACN,KACA5tD,EACAqrC,EACAqkB,EACAvZ,GAEF,MAEF,KAAKjnD,EACHye,EAAQmgD,GACN,KACA9tD,EACAqrC,EACAqkB,EACAvZ,GAEF,MAEF,KAAKvmD,EACH+d,EAAQo/C,GACN,KACA/sD,EACAqrC,EACAqkB,EACAvZ,GAEF,MAEF,KAAKpmD,GAED,GAAIiQ,EAAepkB,OAASokB,EAAeqvC,YAAa,CACtD,MAAMse,EAAiBtiB,EAAUxnC,UAC7B8pD,GACF5wE,KACE4wE,EACA+B,EACA,OACA/zE,aAAiB0vD,GACjBlrC,IAKRwN,EAAQw/C,GACN,KACAntD,EACAqrC,EACAkL,GAAoBlL,EAAUzvD,KAAM8zE,GACpCrJ,EACAlQ,GAEF,MAEF,QAAS,CACP,IAAIwZ,EAAO,GAGO,OAAdtkB,GACqB,kBAAdA,GACPA,EAAUtvD,WAAaX,OAEvBu0E,EAAO,6DAMXr4E,aACE,EACA,6HAEA+zD,EACAskB,IAIN,OAAOhiD,EA+MT,SAAS2/C,GAA+BttD,EAAuBqrC,GAQ7D,GAPIA,GACF9yD,aACG8yD,EAAUW,kBACX,wEACAX,EAAUvvD,aAAeuvD,EAAUhzD,MAAQ,aAGpB,OAAvB2nB,EAAesvC,IAAc,CAC/B,IAAIrvC,EAAO,GACX,MAAMpf,EAAYqf,KACdrf,IACFof,GAAQ,mCAAqCpf,EAAY,MAG3D,IAAIm/C,EAAan/C,GAAamf,EAAespC,UAAY,GACzD,MAAMsmB,EAAc5vD,EAAeF,aAC/B8vD,IACF5vB,EAAa4vB,EAAY5uE,SAAW,IAAM4uE,EAAYxuE,YAEnDsrE,GAAyB1sB,KAC5B0sB,GAAyB1sB,IAAc,EACvC/lD,cACE,EACA,6HAGAgmB,IAKN,GAAkD,oBAAvCorC,EAAUuM,yBAAyC,CAC5D,MAAMz6D,EAAgBxB,aAAiB0vD,IAAc,UAEhDohB,GAA+CtvE,KAClD5E,aACE,EACA,mEACA4E,GAEFsvE,GAA+CtvE,IAAiB,GAIpE,GACmC,kBAA1BkuD,EAAUwO,aACS,OAA1BxO,EAAUwO,YACV,CACA,MAAM18D,EAAgBxB,aAAiB0vD,IAAc,UAEhDmhB,GAA2CrvE,KAC9C5E,aACE,EACA,sDACA4E,GAEFqvE,GAA2CrvE,IAAiB,IAKlE,SAAS0yE,GACP/yE,EACAkjB,EACAm2C,GAEA,MAAMpkB,EAAO/xB,EAAe+xB,KACtBuM,EAAYt+B,EAAeovC,aAIjC,IAEI0gB,EAwCAniD,EAKA9gB,EA/CAkjE,EAAkC/vD,EAAeyvC,cAgDrD,IA7CKzvC,EAAeqN,UAAYZ,MAAgBR,IAE9C8jD,EAAY,KACZD,GAAiB,IAIjBC,EAAY,CACVC,WAA0B,OAAdD,EAAqBA,EAAUC,WAAa3iB,IAE1DyiB,GAAiB,EACjB9vD,EAAeqN,YAAcZ,IAkCf,OAAZ3vB,EAAkB,CACpB,GAAIjD,WAGyB7B,IAAvBsmD,EAAU2xB,WACZtE,GAAiC3rD,GAE7BA,EAAenkB,MAAQsU,IACzB,OAAO+/D,GACL,KACAlwD,EACAm2C,GAQR,GAAI2Z,EAAgB,CAElB,MAAMK,EAAuB7xB,EAAU2xB,SACjCG,EAAuBtf,GAC3B,KACA/e,EACAsb,GACA,MAGF,IAAKrtC,EAAe+xB,KAAO0c,MAAoBD,GAAW,CAGxD,MACM6hB,EACgB,OAFiBrwD,EAAeyvC,cAG/CzvC,EAAe2N,MAAYA,MAC3B3N,EAAe2N,MACtByiD,EAAqBziD,MAAQ0iD,EAG/B,MAAMC,EAAwBxf,GAC5Bqf,EACAp+B,EACAokB,EACA,MAEFia,EAAqBxiD,QAAU0iD,EAC/B3iD,EAAQyiD,EAGRvjE,EAAOyjE,EACP3iD,EAAM3c,OAASnE,EAAKmE,OAASgP,MACxB,CAEL,MAAMuwD,EAAsBjyB,EAAUtmB,SACtCrK,EAAQ9gB,EAAO2zD,GACbxgD,EACA,KACAuwD,EACApa,QAGC,CAKL,GADqC,OADnBr5D,EAAQ2yD,cAEN,CAGlB,MAAM+gB,EAAsC1zE,EAAQ6wB,MAC9C8iD,EAAuCD,EAA4B5iD,QACzE,GAAIkiD,EAAgB,CAGlB,MAAMK,EAAuB7xB,EAAU2xB,SACjCG,EAAuB3f,GAC3B+f,EACAA,EAA4BphB,cAI9B,IAAKpvC,EAAe+xB,KAAO0c,MAAoBD,GAAW,CAGxD,MACM6hB,EACgB,OAFiBrwD,EAAeyvC,cAG/CzvC,EAAe2N,MAAYA,MAC3B3N,EAAe2N,MAClB0iD,IAA2BG,EAA4B7iD,QACzDyiD,EAAqBziD,MAAQ0iD,GAMjC,GAAI32E,MAAuBsmB,EAAe+xB,KAAO4c,GAAa,CAE5D,IAAIyB,EAAmB,EACnBsgB,EAAcN,EAAqBziD,MACvC,KAAuB,OAAhB+iD,GACLtgB,GAAoBsgB,EAAYtgB,iBAChCsgB,EAAcA,EAAY9iD,QAE5BwiD,EAAqBhgB,iBAAmBA,EAK1C,MAAMkgB,EAAyBF,EAAqBxiD,QAAU6iC,GAC5DggB,EACAN,EACAM,EAA6B3pE,gBAE/B6mB,EAAQyiD,EACRA,EAAqBtgB,oBAAsBzC,GAG3CxgD,EAAOyjE,EACP3iD,EAAM3c,OAASnE,EAAKmE,OAASgP,MACxB,CAGL,MAAMuwD,EAAsBjyB,EAAUtmB,SAChC24C,EAAsBH,EAA4B7iD,MAexDA,EAAQ9gB,EAda0zD,GACnBvgD,EACA2wD,EACAJ,EACApa,QAYC,CAGL,MAAMwa,EAAsB7zE,EAAQ6wB,MACpC,GAAImiD,EAAgB,CAGlB,MAAMK,EAAuB7xB,EAAU2xB,SACjCG,EAAuBtf,GAG3B,KACA/e,EACAsb,GACA,MASF,GAPA+iB,EAAqBziD,MAAQgjD,GAOxB3wD,EAAe+xB,KAAO0c,MAAoBD,GAAW,CAGxD,MACM6hB,EACgB,OAFiBrwD,EAAeyvC,cAG/CzvC,EAAe2N,MAAYA,MAC3B3N,EAAe2N,MACtByiD,EAAqBziD,MAAQ0iD,EAK/B,GAAI32E,MAAuBsmB,EAAe+xB,KAAO4c,GAAa,CAE5D,IAAIyB,EAAmB,EACnBsgB,EAAcN,EAAqBziD,MACvC,KAAuB,OAAhB+iD,GACLtgB,GAAoBsgB,EAAYtgB,iBAChCsgB,EAAcA,EAAY9iD,QAE5BwiD,EAAqBhgB,iBAAmBA,EAI1C,MAAMkgB,EAAyBF,EAAqBxiD,QAAUkjC,GAC5Dqf,EACAp+B,EACAokB,EACA,MAEFma,EAAsBjjD,WAAalB,GACnCwB,EAAQyiD,EACRA,EAAqBtgB,oBAAsBzC,GAG3CxgD,EAAOyjE,EACP3iD,EAAM3c,OAASnE,EAAKmE,OAASgP,MACxB,CAGL,MAAMuwD,EAAsBjyB,EAAUtmB,SACtCnrB,EAAO8gB,EAAQ4yC,GACbvgD,EACA2wD,EACAJ,EACApa,IAINn2C,EAAe9R,UAAYpR,EAAQoR,UAKrC,OAFA8R,EAAeyvC,cAAgBsgB,EAC/B/vD,EAAe2N,MAAQA,EAChB9gB,EAGT,SAASqjE,GACPpzE,EACAkjB,EACAm2C,GAEA,GAAgB,OAAZr5D,EAIF,OADAkjB,EAAelZ,eAAiBwmD,GACzB,KAIT,MAAMvB,EAAoBjvD,EAAQgzD,qBAAuBqG,EACzD,GAAIyW,IAAoB7gB,EAAmB,CASzCjvD,EAAQiV,UAAY,KACpBiO,EAAejO,UAAY,KAG3B,IAAI+qD,EAAc98C,EAAehP,OACjC1Z,YACkB,OAAhBwlE,EACA,+EAGF,MAAMW,EAAOX,EAAYjN,WAiBzB,OAhBa,OAAT4N,GACFA,EAAK9N,WAAa7yD,EAClBggE,EAAYjN,WAAa/yD,GAEzBggE,EAAYlN,YAAckN,EAAYjN,WAAa/yD,EAErDA,EAAQ6yD,WAAa,KACrB7yD,EAAQuwB,UAAYf,GAGpBtM,EAAenkB,IAAMiU,GACrBkQ,EAAe9R,UAAY,KAC3B8R,EAAeyvC,cAAgB,KAE/BzvC,EAAeqN,WAAalB,GAErB0jD,GAAwB,KAAM7vD,EAAgBm2C,GAEvD,IAAKn2C,EAAeqN,UAAYZ,MAAgBR,GAAU,EDxkD5D,SACErM,GAEA,IAAKgnC,GACH,OAAO,EAGT,MAAMP,EAAmBzmC,EAAM1R,UAC/Bu8D,GAAyB5jB,GAAyBR,GAClD+lB,GAAoBxsD,GACpBsF,IAAc,ECgkDZ0rD,CAAoD5wD,GACpD,MACM8sD,EADY9sD,EAAeovC,aACFp3B,SAO/B,OANAhY,EAAe2N,MAAQ6yC,GACrBxgD,EACA,KACA8sD,EACA3W,GAEKn2C,EAAe2N,MAKtB,OADA3N,EAAe2N,MAAQ,KAChB,KAkCX,SAASkjD,GACP/zE,EACAkjB,EACAm2C,GAEA,MACMxuD,EADuCqY,EAAepkB,KACZk+D,SAE1C/U,EAAW/kC,EAAeovC,aAC1BtK,EAAW9kC,EAAeuvC,cAE1Bn2B,EAAW2rB,EAASxhD,MAEb,CACX,MAAMutE,EAAoB9wD,EAAepkB,KAAKioB,UAE1CitD,GACF/zE,KACE+zE,EACA/rB,EACA,OACA,mBACA5kC,IAON,GAFA4wD,GAAa/wD,EAAgBoZ,GAEZ,OAAb0rB,EAAmB,CACrB,MACMksB,EC9lDH,SACLrpE,EACAyxB,EACA63C,GAEA,GAAIvlD,GAAGulD,EAAU73C,GAEf,OAAO,EACF,CACL,MAAM43C,EACqC,oBAAlCrpE,EAAQupE,sBACXvpE,EAAQupE,sBAAsBD,EAAU73C,GACxCo0B,GAUN,OAPEvzD,cACG+2E,EAAcxjB,MAA2BwjB,EAC1C,+FAEAA,GAGiB,EAAdA,GDwkDaG,CAAqBxpE,EAASyxB,EADjC0rB,EAASvhD,OAE1B,GAAoB,IAAhBytE,GAEF,GACElsB,EAAS9sB,WAAa+sB,EAAS/sB,WAC9Bo5C,KAED,OAAOlE,GACLpwE,EACAkjB,EACAm2C,QC/iDH,SACLn2C,EACArY,EACAqpE,EACA7a,GAEA,IAAIv2C,EAAQI,EAAe2N,MACb,OAAV/N,IAEFA,EAAM5O,OAASgP,GAEjB,KAAiB,OAAVJ,GAAgB,CACrB,IAAIyxD,EAGJ,MAAM1pC,EAAO/nB,EAAM8vC,oBACnB,GAAa,OAAT/nB,EAAe,CACjB0pC,EAAYzxD,EAAM+N,MAElB,IAAI+J,EAAaiQ,EAAKq+B,MACtB,KAAsB,OAAftuC,GAAqB,CAE1B,GACEA,EAAW/vB,UAAYA,GACqB,KAA3C+vB,EAAWsyC,aAAegH,GAC3B,CAGA,GAAIpxD,EAAM/jB,MAAQqT,EAAgB,CAEhC,MAAMspD,EAASC,GAAatC,GAC5BqC,EAAO38D,IAAMm9D,GAKbL,GAAc/4C,EAAO44C,GAGnB54C,EAAM9Y,eAAiBqvD,IACzBv2C,EAAM9Y,eAAiBqvD,GAEzB,IAAIpkD,EAAY6N,EAAM7N,UAEN,OAAdA,GACAA,EAAUjL,eAAiBqvD,IAE3BpkD,EAAUjL,eAAiBqvD,GAG7Bmb,GAAyB1xD,EAAM5O,OAAQmlD,GAGnCxuB,EAAK7gC,eAAiBqvD,IACxBxuB,EAAK7gC,eAAiBqvD,GAKxB,MAEFz+B,EAAaA,EAAW7qB,WAErB,GAAI+S,EAAM/jB,MAAQ8T,EAEvB0hE,EAAYzxD,EAAMhkB,OAASokB,EAAepkB,KAAO,KAAOgkB,EAAM+N,WACzD,GACL9zB,MACA+lB,EAAM/jB,MAAQsU,GACd,CAIIyP,EAAM9Y,eAAiBqvD,IACzBv2C,EAAM9Y,eAAiBqvD,GAEzB,IAAIpkD,EAAY6N,EAAM7N,UAEN,OAAdA,GACAA,EAAUjL,eAAiBqvD,IAE3BpkD,EAAUjL,eAAiBqvD,GAM7Bmb,GAAyB1xD,EAAOu2C,GAChCkb,EAAYzxD,EAAMgO,aAGlByjD,EAAYzxD,EAAM+N,MAGpB,GAAkB,OAAd0jD,EAEFA,EAAUrgE,OAAS4O,OAInB,IADAyxD,EAAYzxD,EACS,OAAdyxD,GAAoB,CACzB,GAAIA,IAAcrxD,EAAgB,CAEhCqxD,EAAY,KACZ,MAEF,IAAIzjD,EAAUyjD,EAAUzjD,QACxB,GAAgB,OAAZA,EAAkB,CAEpBA,EAAQ5c,OAASqgE,EAAUrgE,OAC3BqgE,EAAYzjD,EACZ,MAGFyjD,EAAYA,EAAUrgE,OAG1B4O,EAAQyxD,GDg8CNE,CACEvxD,EACArY,EACAqpE,EACA7a,GAON,OADA0W,GAAkB/vE,EAASkjB,EADP+kC,EAAS/sB,SAC2Bm+B,GACjDn2C,EAAe2N,MA7mDtB4+C,GAAuB,GACvBC,GAA6C,GAC7CC,GAAiD,GACjDC,GAA2B,GAC3BC,IAA+B,EA4mDjC,IAAI6E,IAAuC,EAiEpC,SAASzL,KACd6G,IAAmB,EAGrB,SAASM,GACPpwE,EACAkjB,EACAm2C,GAgBA,OAdAhM,GAAgBnqC,GAEA,OAAZljB,IAEFkjB,EAAe0vC,oBAAsB5yD,EAAQ4yD,qBAG3Ch2D,MAEF2wE,KAI0BrqD,EAAe8vC,oBACjBqG,EAIjB,MP1hBJ,SACLr5D,EACAkjB,GAOA,GALA1oB,YACc,OAAZwF,GAAoBkjB,EAAe2N,QAAU7wB,EAAQ6wB,MACrD,sCAG2B,OAAzB3N,EAAe2N,MACjB,OAGF,IAAI6/C,EAAextD,EAAe2N,MAC9BwvC,EAAW1M,GACb+c,EACAA,EAAape,aACboe,EAAa1mE,gBAKf,IAHAkZ,EAAe2N,MAAQwvC,EAEvBA,EAASnsD,OAASgP,EACc,OAAzBwtD,EAAa5/C,SAClB4/C,EAAeA,EAAa5/C,QAC5BuvC,EAAWA,EAASvvC,QAAU6iC,GAC5B+c,EACAA,EAAape,aACboe,EAAa1mE,gBAEfq2D,EAASnsD,OAASgP,EAEpBm9C,EAASvvC,QAAU,KO+fjB6jD,CAAiB30E,EAASkjB,GACnBA,EAAe2N,OAI1B,SAAS+jD,GACP50E,EACAkjB,EACAm2C,GAEA,MAAMkQ,EAAuBrmD,EAAelZ,eAE5C,GAAgB,OAAZhK,EAAkB,CAIpB,GAHiBA,EAAQyyD,gBACRvvC,EAAeovC,cAEHgiB,KAG3BxE,IAAmB,OACd,GAAIvG,EAAuBlQ,EAAsB,CAKtD,OAJAyW,IAAmB,EAIX5sD,EAAenkB,KACrB,KAAKuT,EACHw/D,GAAoB5uD,GACpBssD,KACA,MACF,KAAKh9D,EACH+xD,GAAgBrhD,GAChB,MACF,KAAK9Q,EAEC8+D,GADchuD,EAAepkB,OAE/BqyE,GAA0BjuD,GAE5B,MAEF,KAAK3Q,EACHyxD,GACE9gD,EACAA,EAAe9R,UAAUujB,eAE3B,MACF,KAAK9hB,EAEHohE,GAAa/wD,EADIA,EAAeuvC,cAAchsD,OAE9C,MAEF,KAAKsM,EACCnW,OACFsmB,EAAeqN,WAAajB,IAE9B,MACF,KAAKtc,GAGH,GAD6B,OADOkQ,EAAeyvC,cAEnC,CAKd,MACMkiB,EAD+B3xD,EAAe2N,MAE7BmiC,oBACvB,GACE6hB,IAA+BtkB,IAC/BskB,GAA8Bxb,EAI9B,OAAO0Z,GACL/yE,EACAkjB,EACAm2C,GAEG,CAGL,MAAMxoC,EAAQu/C,GACZpwE,EACAkjB,EACAm2C,GAEF,OAAc,OAAVxoC,EAGKA,EAAMC,QAEN,MAIb,MAEF,KAAKzd,GACH,GAAItW,KAA8B,CAIhCmmB,EAAeqN,WAAaZ,GAC5B,OAIN,OAAOygD,GACLpwE,EACAkjB,EACAm2C,SAIJyW,IAAmB,EAMrB,OAFA5sD,EAAelZ,eAAiBumD,GAExBrtC,EAAenkB,KACrB,KAAKsT,EAEH,OAv2BN,SACE8/D,EACAjvD,EACAqrC,EACA8K,GAEiB,OAAb8Y,IAKFA,EAASl9D,UAAY,KACrBiO,EAAejO,UAAY,KAE3BiO,EAAeqN,WAAalB,IAG9B,MAAMhe,EAAQ6R,EAAeovC,aAEvBznD,EAAUkkD,GAAiB7rC,EADTorC,GAAmBprC,EAAgBqrC,GAAW,IAKtE,IAAI9nD,EAGF,GALF0pE,GAAqBjtD,EAAgBm2C,GAMjC9K,EAAUtyD,WAC4B,oBAA/BsyD,EAAUtyD,UAAUsD,OAC3B,CACA,MAAMc,EAAgBxB,aAAiB0vD,IAAc,UAEhDkhB,GAAqBpvE,KACxB5E,aACE,EACA,yKAEA4E,EACAA,GAEFovE,GAAqBpvE,IAAiB,GA8B5C,GA1BM6iB,EAAe+xB,KAAO2c,IACxBsE,GAAwBM,2BAA2BtzC,EAAgB,MAGrEphB,GAAkB9B,QAAUkjB,EAC5Bzc,EAAQygE,GACN,KACAhkD,EACAqrC,EACAl9C,EACAxG,EACAwuD,GAaJn2C,EAAeqN,WAAanB,GAGT,kBAAV3oB,GACG,OAAVA,GACwB,oBAAjBA,EAAMlH,aACMrE,IAAnBuL,EAAMxH,SACN,CAEAikB,EAAenkB,IAAMqT,EAGrB01D,KAKA,IAAImJ,GAAa,EACbC,GAAwB3iB,IAC1B0iB,GAAa,EACbE,GAA0BjuD,IAE1B+tD,GAAa,EAGf/tD,EAAeyvC,cACG,OAAhBlsD,EAAMkkB,YAAkCzvB,IAAhBuL,EAAMkkB,MAAsBlkB,EAAMkkB,MAAQ,KAEpE,MAAMmwC,EAA2BvM,EAAUuM,yBAY3C,MAXwC,oBAA7BA,GACTF,GACE13C,EACAqrC,EACAuM,EACAzpD,GAIJqrD,GAAmBx5C,EAAgBzc,GACnC+2D,GAAmBt6C,EAAgBqrC,EAAWl9C,EAAOgoD,GAC9CsY,GACL,KACAzuD,EACAqrC,GACA,EACA0iB,EACA5X,GA4BF,OAxBAn2C,EAAenkB,IAAMoT,GAGjB3V,MACCC,MACCymB,EAAe+xB,KAAO2c,KAGa,OAAjC1uC,EAAeyvC,gBACjBlsD,EAAQygE,GACN,KACAhkD,EACAqrC,EACAl9C,EACAxG,EACAwuD,IAKR0W,GAAkB,KAAM7sD,EAAgBzc,EAAO4yD,GAE7CmX,GAA+BttD,EAAgBqrC,GAE1CrrC,EAAe2N,MAytBbikD,CACL90E,EACAkjB,EAHkBA,EAAeqvC,YAKjC8G,GAGJ,KAAKlmD,GAEH,OAAO++D,GACLlyE,EACAkjB,EAHkBA,EAAeqvC,YAKjCgX,EACAlQ,GAGJ,KAAKlnD,EAAmB,CACtB,MAAMo8C,EAAYrrC,EAAepkB,KAC3Bi2E,EAAkB7xD,EAAeovC,aAKvC,OAAOwe,GACL9wE,EACAkjB,EACAqrC,EANArrC,EAAeqvC,cAAgBhE,EAC3BwmB,EACAtb,GAAoBlL,EAAWwmB,GAMnC1b,GAGJ,KAAKjnD,EAAgB,CACnB,MAAMm8C,EAAYrrC,EAAepkB,KAC3Bi2E,EAAkB7xD,EAAeovC,aAKvC,OAAO0e,GACLhxE,EACAkjB,EACAqrC,EANArrC,EAAeqvC,cAAgBhE,EAC3BwmB,EACAtb,GAAoBlL,EAAWwmB,GAMnC1b,GAGJ,KAAK/mD,EACH,OAAOy/D,GAAe/xE,EAASkjB,EAAgBm2C,GACjD,KAAK7mD,EACH,OA9nCN,SAA6BxS,EAASkjB,EAAgBm2C,GACpDkL,GAAgBrhD,GAEA,OAAZljB,GACF6uE,GAAiC3rD,GAGnC,MAAMpkB,EAAOokB,EAAepkB,KACtB0iD,EAAYt+B,EAAeovC,aAC3Bqe,EAAwB,OAAZ3wE,EAAmBA,EAAQyyD,cAAgB,KAE7D,IAAIud,EAAexuB,EAAUtmB,SAkB7B,OAjB0BgtB,GAAqBppD,EAAM0iD,GAOnDwuB,EAAe,KACQ,OAAdW,GAAsBzoB,GAAqBppD,EAAM6xE,KAG1DztD,EAAeqN,WAAad,IAG9BshD,GAAQ/wE,EAASkjB,GAIfm2C,IAAyB7I,IACzBttC,EAAe+xB,KAAO0c,IACUnQ,ErBtpBnB76B,QqBypBbzD,EAAelZ,eAAiBkZ,EAAe8vC,oBAAsBxC,GAC9D,OAGTuf,GACE/vE,EACAkjB,EACA8sD,EACA3W,GAEKn2C,EAAe2N,OAilCXmkD,CAAoBh1E,EAASkjB,EAAgBm2C,GACtD,KAAK5mD,EACH,OAhlCN,SAAwBzS,EAASkjB,GAM/B,OALgB,OAAZljB,GACF6uE,GAAiC3rD,GAI5B,KA0kCI+xD,CAAej1E,EAASkjB,GACjC,KAAKlQ,GACH,OAAO+/D,GACL/yE,EACAkjB,EACAm2C,GAEJ,KAAK9mD,EACH,OAlXN,SACEvS,EACAkjB,EACAm2C,GAEA2K,GAAkB9gD,EAAgBA,EAAe9R,UAAUujB,eAC3D,MAAMq7C,EAAe9sD,EAAeovC,aAqBpC,OApBgB,OAAZtyD,EAMFkjB,EAAe2N,MAAQ4yC,GACrBvgD,EACA,KACA8sD,EACA3W,GAGF0W,GACE/vE,EACAkjB,EACA8sD,EACA3W,GAGGn2C,EAAe2N,MAuVXqkD,CACLl1E,EACAkjB,EACAm2C,GAEJ,KAAKvmD,EAAY,CACf,MAAMhU,EAAOokB,EAAepkB,KACtBi2E,EAAkB7xD,EAAeovC,aAKvC,OAAO2d,GACLjwE,EACAkjB,EACApkB,EANAokB,EAAeqvC,cAAgBzzD,EAC3Bi2E,EACAtb,GAAoB36D,EAAMi2E,GAM9B1b,GAGJ,KAAK3mD,EACH,OAjlDN,SACE1S,EACAkjB,EACAm2C,GASA,OANA0W,GACE/vE,EACAkjB,EAHmBA,EAAeovC,aAKlC+G,GAEKn2C,EAAe2N,MAqkDXixC,CAAe9hE,EAASkjB,EAAgBm2C,GACjD,KAAK1mD,EACH,OApkDN,SACE3S,EACAkjB,EACAm2C,GASA,OANA0W,GACE/vE,EACAkjB,EAHmBA,EAAeovC,aAAap3B,SAK/Cm+B,GAEKn2C,EAAe2N,MAwjDXskD,CAAWn1E,EAASkjB,EAAgBm2C,GAC7C,KAAKtmD,EACH,OAvjDN,SACE/S,EACAkjB,EACAm2C,GAaA,OAXIz8D,OACFsmB,EAAeqN,WAAajB,IAI9BygD,GACE/vE,EACAkjB,EAJgBA,EAAeovC,aACFp3B,SAK7Bm+B,GAEKn2C,EAAe2N,MAuiDXukD,CAAep1E,EAASkjB,EAAgBm2C,GACjD,KAAKxmD,EACH,OAAOkhE,GACL/zE,EACAkjB,EACAm2C,GAEJ,KAAKzmD,EACH,OAtTN,SACE5S,EACAkjB,EACAm2C,GAEA,IAAIxuD,EAA6BqY,EAAepkB,UASd5D,IAA3B2P,EAAcmyD,SAIbnyD,IAAYA,EAAQwqE,WACjBX,KACHA,IAAuC,EACvCv3E,cACE,EACA,qJAMN0N,EAAWA,EAAcmyD,SAG7B,MAAM/U,EAAW/kC,EAAeovC,aAC1B/yD,EAAS0oD,EAAS/sB,SAGtBz/B,YACoB,oBAAX8D,EACP,uPAOJ4wE,GAAqBjtD,EAAgBm2C,GACrC,MAAM/8B,EAAW2gC,GAAYpyD,EAASo9C,EAASqtB,uBAC/C,IAAIzS,EAaJ,OAXE/gE,GAAkB9B,QAAUkjB,EAC5BM,GAAgB,UAChBq/C,EAActjE,EAAO+8B,GACrB9Y,GAAgB,MAMlBN,EAAeqN,WAAanB,GAC5B2gD,GAAkB/vE,EAASkjB,EAAgB2/C,EAAaxJ,GACjDn2C,EAAe2N,MA0PX0kD,CACLv1E,EACAkjB,EACAm2C,GAEJ,KAAKpmD,GAAe,CAClB,MAAMnU,EAAOokB,EAAepkB,KAG5B,IAAI8zE,EAAgBnZ,GAAoB36D,EAFhBokB,EAAeovC,cAIrC,GAAIpvC,EAAepkB,OAASokB,EAAeqvC,YAAa,CACtD,MAAMse,EAAiB/xE,EAAKioB,UACxB8pD,GACF5wE,KACE4wE,EACA+B,EACA,OACA/zE,aAAiBC,GACjBukB,IAMR,OADAuvD,EAAgBnZ,GAAoB36D,EAAKA,KAAM8zE,GACxCvC,GACLrwE,EACAkjB,EACApkB,EACA8zE,EACArJ,EACAlQ,GAGJ,KAAKnmD,GACH,OAAOu9D,GACLzwE,EACAkjB,EACAA,EAAepkB,KACfokB,EAAeovC,aACfiX,EACAlQ,GAGJ,KAAKjmD,GAA0B,CAC7B,MAAMm7C,EAAYrrC,EAAepkB,KAC3Bi2E,EAAkB7xD,EAAeovC,aAKvC,OAjjCN,SACE6f,EACAjvD,EACAqrC,EACA/M,EACA6X,GAqBA,IAAI4X,EAsBJ,OAzCiB,OAAbkB,IAKFA,EAASl9D,UAAY,KACrBiO,EAAejO,UAAY,KAE3BiO,EAAeqN,WAAalB,IAI9BnM,EAAenkB,IAAMqT,EAQjB8+D,GAAwB3iB,IAC1B0iB,GAAa,EACbE,GAA0BjuD,IAE1B+tD,GAAa,EAEfd,GAAqBjtD,EAAgBm2C,GAErCwD,GACE35C,EACAqrC,EACA/M,GAGFgc,GACEt6C,EACAqrC,EACA/M,EACA6X,GAGKsY,GACL,KACAzuD,EACAqrC,GACA,EACA0iB,EACA5X,GA2/BSmc,CACLx1E,EACAkjB,EACAqrC,EANArrC,EAAeqvC,cAAgBhE,EAC3BwmB,EACAtb,GAAoBlL,EAAWwmB,GAMnC1b,GAGJ,KAAKhmD,GACH,GAAItW,KACF,OAAOq2E,GACLpzE,EACAkjB,EACAm2C,GAMR7+D,aACE,EACA,kGChlEJ,MAAMi7E,GAAkCxnB,GAAa,MAErD,IAAIynB,GAGFA,GAAgB,GAGlB,IAAItQ,GAAwC,KACxCuQ,GAAyD,KACzDC,GAA2D,KAE3DC,IAAwC,EAErC,SAASC,KAGd1Q,GAA0B,KAC1BuQ,GAAwB,KACxBC,GAAiC,KAE/BC,IAA+B,EAI5B,SAASE,KAEZF,IAA+B,EAI5B,SAASG,KAEZH,IAA+B,EAI5B,SAAS5B,GAAgBgC,EAAsBvzD,GACpD,MAAM7X,EAA2BorE,EAAcn3E,KAAKk+D,SAEhD1U,IACF3/C,GAAK8sE,GAAa5qE,EAAQqrE,cAAeD,GAEzCprE,EAAQqrE,cAAgBxzD,EAEtBjnB,iBAC+BP,IAA7B2P,EAAQsrE,kBACuB,OAA7BtrE,EAAQsrE,kBACRtrE,EAAQsrE,mBAAqBT,GAC/B,gHAGF7qE,EAAQsrE,iBAAmBT,KAG7B/sE,GAAK8sE,GAAa5qE,EAAQurE,eAAgBH,GAE1CprE,EAAQurE,eAAiB1zD,EAEvBjnB,iBACgCP,IAA9B2P,EAAQwrE,mBACwB,OAA9BxrE,EAAQwrE,mBACRxrE,EAAQwrE,oBAAsBX,GAChC,gHAGF7qE,EAAQwrE,kBAAoBX,IAK3B,SAASY,GAAYL,GAC1B,MAAMj0D,EAAeyzD,GAAYz1E,QAEjC+I,GAAI0sE,GAAaQ,GAEjB,MAAMprE,EAA6BorE,EAAcn3E,KAAKk+D,SAClD1U,GACFz9C,EAAQqrE,cAAgBl0D,EAExBnX,EAAQurE,eAAiBp0D,EA8B7B,SAASwyD,GACPvjD,EACAooC,GAIA,IAAIxlD,EAAOod,EACX,KAAgB,OAATpd,GAAe,CACpB,IAAIoB,EAAYpB,EAAKoB,UACrB,GAAIpB,EAAKm/C,oBAAsBqG,EAC7BxlD,EAAKm/C,oBAAsBqG,EAEX,OAAdpkD,GACAA,EAAU+9C,oBAAsBqG,IAEhCpkD,EAAU+9C,oBAAsBqG,OAE7B,MACS,OAAdpkD,GACAA,EAAU+9C,oBAAsBqG,GAMhC,MAJApkD,EAAU+9C,oBAAsBqG,EAMlCxlD,EAAOA,EAAKK,QA6HT,SAASi8D,GACdjtD,EACAm2C,GAEA+L,GAA0BliD,EAC1ByyD,GAAwB,KACxBC,GAAiC,KAEjC,MAAMW,EAAsBrzD,EAAe0vC,oBAEjB,OAAxB2jB,GACAA,EAAoBvsE,gBAAkBqvD,GAGtC4P,KAIF/lD,EAAe0vC,oBAAsB,KAGhC,SAASqK,GACdpyD,EACAqiE,GAcA,GATE/vE,cACG04E,GACD,gQAOAD,KAAmC/qE,QAEhC,IAAqB,IAAjBqiE,GAA2C,IAAjBA,OAE9B,CACL,IAAIsJ,EAEsB,kBAAjBtJ,GACPA,IAAiBxc,IAGjBklB,GAAmC/qE,EACnC2rE,EAAuB9lB,IAEvB8lB,EAAuBtJ,EAGzB,IAAIuJ,EAAc,CAChB5rE,QAAWA,EACXqiE,aAAcsJ,EACdzmE,KAAM,MAGsB,OAA1B4lE,IACFn7E,YAC8B,OAA5B4qE,GACA,gQAOFuQ,GAAwBc,EACxBrR,GAAwBxS,oBAAsB,CAC5CsW,MAAOuN,EACPzsE,eAAgBumD,KAIlBolB,GAAwBA,GAAsB5lE,KAAO0mE,EAGzD,OAAOnuB,GAAoBz9C,EAAQqrE,cAAgBrrE,EAAQurE,eC/PtD,MAAMM,GAAc,EACd1a,GAAe,EACfE,GAAc,EACdya,GAAgB,EAK7B,IAEIC,GACAC,GACOC,GChDPC,GACAC,GACAhC,GACAC,GDyCAgC,IAAiB,EAad,SAASC,GAAyBlc,GAYvC,MAXkC,CAChCA,YACAmc,YAAa,KACbC,WAAY,KACZC,oBAAqB,KACrBC,mBAAoB,KACpBxkB,YAAa,KACbC,WAAY,KACZwkB,oBAAqB,KACrBC,mBAAoB,MAKxB,SAASC,GACPC,GAkBA,MAhBkC,CAChC1c,UAAW0c,EAAa1c,UACxBmc,YAAaO,EAAaP,YAC1BC,WAAYM,EAAaN,WAIzBC,oBAAqB,KACrBC,mBAAoB,KAEpBxkB,YAAa,KACbC,WAAY,KAEZwkB,oBAAqB,KACrBC,mBAAoB,MAKjB,SAAS7b,GAAa3xD,GAC3B,MAAO,CACLA,eAAgBA,EAEhBjL,IAAK23E,GACLnb,QAAS,KACTzxD,SAAU,KAEViG,KAAM,KACN8iD,WAAY,MAIhB,SAAS8kB,GACP1P,EACAvM,GAGyB,OAArBuM,EAAMmP,WAERnP,EAAMkP,YAAclP,EAAMmP,WAAa1b,GAEvCuM,EAAMmP,WAAWrnE,KAAO2rD,EACxBuM,EAAMmP,WAAa1b,GAIhB,SAASG,GAAqB/4C,EAAc44C,GAEjD,MAAMzmD,EAAY6N,EAAM7N,UACxB,IAAI2iE,EACAC,EACc,OAAd5iE,GAEF2iE,EAAS90D,EAAM4vC,YACfmlB,EAAS,KACM,OAAXD,IACFA,EAAS90D,EAAM4vC,YAAcwkB,GAAkBp0D,EAAM6vC,kBAIvDilB,EAAS90D,EAAM4vC,YACfmlB,EAAS5iE,EAAUy9C,YACJ,OAAXklB,EACa,OAAXC,GAEFD,EAAS90D,EAAM4vC,YAAcwkB,GAAkBp0D,EAAM6vC,eACrDklB,EAAS5iE,EAAUy9C,YAAcwkB,GAC/BjiE,EAAU09C,gBAIZilB,EAAS90D,EAAM4vC,YAAc+kB,GAAiBI,GAGjC,OAAXA,IAEFA,EAAS5iE,EAAUy9C,YAAc+kB,GAAiBG,KAMzC,OAAXC,GAAmBD,IAAWC,EAEhCF,GAAoBC,EAAQlc,GAKF,OAAtBkc,EAAOR,YAA6C,OAAtBS,EAAOT,YAEvCO,GAAoBC,EAAQlc,GAC5Bic,GAAoBE,EAAQnc,KAI5Bic,GAAoBC,EAAQlc,GAE5Bmc,EAAOT,WAAa1b,GAMpB54C,EAAM/jB,MAAQqT,GACbykE,KAA6Be,IAChB,OAAXC,GAAmBhB,KAA6BgB,IAClDjB,KAEDn7E,aACE,EACA,8MAKFm7E,IAA4B,GAK3B,SAASkB,GACd50D,EACAw4C,GAIA,IAAIqc,EAAsB70D,EAAewvC,YAEvCqlB,EAD0B,OAAxBA,EACoB70D,EAAewvC,YAAcwkB,GACjDh0D,EAAeyvC,eAMKqlB,GACpB90D,EACA60D,GAK2C,OAA3CA,EAAoBT,mBAEtBS,EAAoBV,oBAAsBU,EAAoBT,mBAAqB5b,GAEnFqc,EAAoBT,mBAAmBvnE,KAAO2rD,EAC9Cqc,EAAoBT,mBAAqB5b,GAI7C,SAASsc,GACP90D,EACA+kD,GAEA,MAAMjoE,EAAUkjB,EAAejO,UAQ/B,OAPgB,OAAZjV,GAGEioE,IAAUjoE,EAAQ0yD,cACpBuV,EAAQ/kD,EAAewvC,YAAc+kB,GAAiBxP,IAGnDA,EAGT,SAASgQ,GACP/0D,EACA+kD,EACAvM,EACAX,EACAvZ,EACAlmC,GAEA,OAAQogD,EAAO38D,KACb,KAAKi9D,GAAc,CACjB,MAAMT,EAAUG,EAAOH,QACvB,GAAuB,oBAAZA,EAAwB,CAG/Bwa,MAEEv5E,MACCC,MACCymB,EAAe+xB,KAAO2c,KAExB2J,EAAQp/D,KAAKmf,EAAUy/C,EAAWvZ,GAGtC,MAAMyxB,EAAY1X,EAAQp/D,KAAKmf,EAAUy/C,EAAWvZ,GAIpD,OAFEw0B,KAEK/C,EAGT,OAAO1X,EAET,KAAKob,GACHzzD,EAAeqN,UACZrN,EAAeqN,WAAaL,GAAiBP,GAGlD,KAAK+mD,GAAa,CAChB,MAAMnb,EAAUG,EAAOH,QACvB,IAAIZ,EAqBJ,MApBuB,oBAAZY,GAGPwa,MAEEv5E,MACCC,MACCymB,EAAe+xB,KAAO2c,KAExB2J,EAAQp/D,KAAKmf,EAAUy/C,EAAWvZ,GAGtCmZ,EAAeY,EAAQp/D,KAAKmf,EAAUy/C,EAAWvZ,GAE/Cw0B,MAIFrb,EAAeY,EAEI,OAAjBZ,QAA0Cz/D,IAAjBy/D,EAEpBI,EAGF/4D,OAAOD,OAAO,GAAIg5D,EAAWJ,GAEtC,KAAKuB,GAEH,OADA+a,IAAiB,EACVlc,EAGX,OAAOA,EAGF,SAASoE,GACdj8C,EACA+kD,EACA52D,EACAiK,EACA+9C,GAEA4d,IAAiB,EAEjBhP,EAAQ+P,GAAkC90D,EAAgB+kD,GAGxD4O,GAA2B5O,EAI7B,IAAIkB,EAAelB,EAAMjN,UACrBkd,EAAiB,KACjBC,EAAoB5nB,GAGpBmL,EAASuM,EAAMkP,YACfiB,EAAcjP,EAClB,KAAkB,OAAXzN,GAAiB,CACtB,MAAM6N,EAAuB7N,EAAO1xD,eACpC,GAAIu/D,EAAuBlQ,EAEF,OAAnB6e,IAGFA,EAAiBxc,EAGjByN,EAAeiP,GAIbD,EAAoB5O,IACtB4O,EAAoB5O,OAEjB,CAGL6O,EAAcH,GACZ/0D,EACA+kD,EACAvM,EACA0c,EACA/mE,EACAiK,GAGe,OADAogD,EAAO5xD,WAEtBoZ,EAAeqN,WAAab,GAE5BgsC,EAAO7I,WAAa,KACK,OAArBoV,EAAMlV,WACRkV,EAAMnV,YAAcmV,EAAMlV,WAAa2I,GAEvCuM,EAAMlV,WAAWF,WAAa6I,EAC9BuM,EAAMlV,WAAa2I,IAKzBA,EAASA,EAAO3rD,KAIlB,IAAIsoE,EAAyB,KAE7B,IADA3c,EAASuM,EAAMoP,oBACG,OAAX3b,GAAiB,CACtB,MAAM6N,EAAuB7N,EAAO1xD,eACpC,GAAIu/D,EAAuBlQ,EAEM,OAA3Bgf,IAGFA,EAAyB3c,EAGF,OAAnBwc,IACF/O,EAAeiP,IAKfD,EAAoB5O,IACtB4O,EAAoB5O,OAEjB,CAGL6O,EAAcH,GACZ/0D,EACA+kD,EACAvM,EACA0c,EACA/mE,EACAiK,GAGe,OADAogD,EAAO5xD,WAEtBoZ,EAAeqN,WAAab,GAE5BgsC,EAAO7I,WAAa,KACa,OAA7BoV,EAAMuP,mBACRvP,EAAMsP,oBAAsBtP,EAAMuP,mBAAqB9b,GAEvDuM,EAAMuP,mBAAmB3kB,WAAa6I,EACtCuM,EAAMuP,mBAAqB9b,IAIjCA,EAASA,EAAO3rD,KAGK,OAAnBmoE,IACFjQ,EAAMmP,WAAa,MAEU,OAA3BiB,EACFpQ,EAAMqP,mBAAqB,KAE3Bp0D,EAAeqN,WAAab,GAEP,OAAnBwoD,GAAsD,OAA3BG,IAG7BlP,EAAeiP,GAGjBnQ,EAAMjN,UAAYmO,EAClBlB,EAAMkP,YAAce,EACpBjQ,EAAMoP,oBAAsBgB,EAS5Bn1D,EAAelZ,eAAiBmuE,EAChCj1D,EAAeyvC,cAAgBylB,EAG7BvB,GAA2B,KAI/B,SAAShrE,GAAa/B,EAAUe,GAC9BrQ,YACsB,oBAAbsP,EACP,iFAEAA,GAEFA,EAAS3N,KAAK0O,GAGT,SAASymE,KACd2F,IAAiB,EAGZ,SAAS1F,KACd,OAAO0F,GAGF,SAASqB,GACd7iB,EACA8iB,EACAj9D,EACA+9C,GAM0C,OAAtCkf,EAAclB,sBAEiB,OAA7BkB,EAAcnB,aAChBmB,EAAcnB,WAAWrnE,KAAOwoE,EAAclB,oBAC9CkB,EAAcnB,WAAamB,EAAcjB,oBAG3CiB,EAAclB,oBAAsBkB,EAAcjB,mBAAqB,MAIzEkB,GAAoBD,EAAczlB,YAAax3C,GAC/Ci9D,EAAczlB,YAAcylB,EAAcxlB,WAAa,KAEvDylB,GAAoBD,EAAchB,oBAAqBj8D,GACvDi9D,EAAchB,oBAAsBgB,EAAcf,mBAAqB,KAGzE,SAASgB,GACPxO,EACA1uD,GAEA,KAAkB,OAAX0uD,GAAiB,CACtB,MAAMlgE,EAAWkgE,EAAOlgE,SACP,OAAbA,IACFkgE,EAAOlgE,SAAW,KAClB+B,GAAa/B,EAAUwR,IAEzB0uD,EAASA,EAAOnX,YEhlBb,SAAS4lB,GACdhyE,EACA3C,GAIA,MAAO,CACL2C,QACA3C,SACA1G,MAAO6lB,GAA4Bnf,IDkDvC,SAAS40E,GAAWx1D,GAGlBA,EAAeqN,WAAajB,GAG9B,SAASyhD,GAAQ7tD,GACfA,EAAeqN,WAAaX,GAO9B,GD8CEgnD,IAA4B,EAC5BC,GAA2B,KAC3BC,GAAgC,KAC9BD,GAA2B,MCjD3B/tB,GAGFiuB,GAAoB,SAClB9lD,EACA/N,EACAy1D,EACAC,GAIA,IAAI/kE,EAAOqP,EAAe2N,MAC1B,KAAgB,OAAThd,GAAe,CACpB,GAAIA,EAAK9U,MAAQyT,GAAiBqB,EAAK9U,MAAQ0T,EAC7Cm1C,GAAmB32B,EAAQpd,EAAKzC,gBAC3B,GAAIyC,EAAK9U,MAAQwT,QAIjB,GAAmB,OAAfsB,EAAKgd,MAAgB,CAC9Bhd,EAAKgd,MAAM3c,OAASL,EACpBA,EAAOA,EAAKgd,MACZ,SAEF,GAAIhd,IAASqP,EACX,OAEF,KAAwB,OAAjBrP,EAAKid,SAAkB,CAC5B,GAAoB,OAAhBjd,EAAKK,QAAmBL,EAAKK,SAAWgP,EAC1C,OAEFrP,EAAOA,EAAKK,OAEdL,EAAKid,QAAQ5c,OAASL,EAAKK,OAC3BL,EAAOA,EAAKid,UAIhBkmD,GAAsB,SAAS9zD,KAG/B8xD,GAAsB,SACpBh1E,EACAkjB,EACApkB,EACAmpD,EACAZ,GAIA,MAAMW,EAAWhoD,EAAQyyD,cACzB,GAAIzK,IAAaC,EAGf,OAOF,MAKM1F,EAAgBwF,GALK7kC,EAAe9R,UAOxCtS,EACAkpD,EACAC,EACAZ,EATyBid,MAa3BphD,EAAewvC,YAAenQ,EAG1BA,GACFm2B,GAAWx1D,IAGf+xD,GAAiB,SACfj1E,EACAkjB,EACA21D,EACAC,GAGID,IAAYC,GACdJ,GAAWx1D,SAGV,GAAIgjC,GAAqB,CAG9B6wB,GAAoB,SAClB9lD,EACA/N,EACAy1D,EACAC,GAIA,IAAI/kE,EAAOqP,EAAe2N,MAC1B,KAAgB,OAAThd,GAAe,CAEpBklE,EAAU,GAAIllE,EAAK9U,MAAQyT,EAAe,CACxC,IAAI8I,EAAWzH,EAAKzC,UACpB,GAAIunE,EAAuB,CACzB,MAAMtnE,EAAQwC,EAAK4+C,cACb3zD,EAAO+U,EAAK/U,KAGhBwc,EAFEs9D,EAESpyB,GAAoBlrC,EAAUxc,EAAMuS,EAAOwC,GAK3C4yC,GAAsBnrC,EAAUxc,EAAMuS,EAAOwC,GAE1DA,EAAKzC,UAAYkK,EAEnBssC,GAAmB32B,EAAQ3V,QACtB,GAAIzH,EAAK9U,MAAQ0T,EAAU,CAChC,IAAI6I,EAAWzH,EAAKzC,UACpB,GAAIunE,EAAuB,CACzB,MAAMr4D,EAAOzM,EAAK4+C,cACZpL,EAAwB0c,KACxBiV,EAAqB1U,KAEzBhpD,EADEs9D,EACSlyB,GACTpmC,EACA+mC,EACA2xB,EACA91D,GAGSklC,GACT9nC,EACA+mC,EACA2xB,EACA91D,GAGJrP,EAAKzC,UAAYkK,EAEnBssC,GAAmB32B,EAAQ3V,QACtB,GAAIzH,EAAK9U,MAAQwT,QAIjB,GAAIsB,EAAK9U,MAAQiU,GAAmB,CACzC,MAAMhT,EAAU6T,EAAKoB,UACrB,GAAgB,OAAZjV,EAAkB,CACpB,MAAMo8D,EAA0Bp8D,EAAQ2yD,cAGlCsmB,EAA2B,OAFDplE,EAAK8+C,cAGrC,GAFiC,OAAbyJ,IAEA6c,EAAa,CAI/B,MAAMC,EAAqBD,EAAcplE,EAAKgd,MAAQhd,EAC3B,OAAvBqlE,GACFnC,GAAkB9lD,EAAQioD,GAAoB,EAAMD,GAGtD,MAAMF,GAGV,GAAmB,OAAfllE,EAAKgd,MAAgB,CAEvBhd,EAAKgd,MAAM3c,OAASL,EACpBA,EAAOA,EAAKgd,MACZ,eAEG,GAAmB,OAAfhd,EAAKgd,MAAgB,CAC9Bhd,EAAKgd,MAAM3c,OAASL,EACpBA,EAAOA,EAAKgd,MACZ,SAIF,GADAhd,EAAQA,EACJA,IAASqP,EACX,OAEF,KAAwB,OAAjBrP,EAAKid,SAAkB,CAC5B,GAAoB,OAAhBjd,EAAKK,QAAmBL,EAAKK,SAAWgP,EAC1C,OAEFrP,EAAOA,EAAKK,OAEdL,EAAKid,QAAQ5c,OAASL,EAAKK,OAC3BL,EAAOA,EAAKid,UAKhB,MAAMqoD,EAA+B,SACnCC,EACAl2D,EACAy1D,EACAC,GAIA,IAAI/kE,EAAOqP,EAAe2N,MAC1B,KAAgB,OAAThd,GAAe,CAEpBklE,EAAU,GAAIllE,EAAK9U,MAAQyT,EAAe,CACxC,IAAI8I,EAAWzH,EAAKzC,UACpB,GAAIunE,EAAuB,CACzB,MAAMtnE,EAAQwC,EAAK4+C,cACb3zD,EAAO+U,EAAK/U,KAGhBwc,EAFEs9D,EAESpyB,GAAoBlrC,EAAUxc,EAAMuS,EAAOwC,GAK3C4yC,GAAsBnrC,EAAUxc,EAAMuS,EAAOwC,GAE1DA,EAAKzC,UAAYkK,EAEnB+qC,GAA+B+yB,EAAmB99D,QAC7C,GAAIzH,EAAK9U,MAAQ0T,EAAU,CAChC,IAAI6I,EAAWzH,EAAKzC,UACpB,GAAIunE,EAAuB,CACzB,MAAMr4D,EAAOzM,EAAK4+C,cACZpL,EAAwB0c,KACxBiV,EAAqB1U,KAEzBhpD,EADEs9D,EACSlyB,GACTpmC,EACA+mC,EACA2xB,EACA91D,GAGSklC,GACT9nC,EACA+mC,EACA2xB,EACA91D,GAGJrP,EAAKzC,UAAYkK,EAEnB+qC,GAA+B+yB,EAAmB99D,QAC7C,GAAIzH,EAAK9U,MAAQwT,QAIjB,GAAIsB,EAAK9U,MAAQiU,GAAmB,CACzC,MAAMhT,EAAU6T,EAAKoB,UACrB,GAAgB,OAAZjV,EAAkB,CACpB,MAAMo8D,EAA0Bp8D,EAAQ2yD,cAGlCsmB,EAA2B,OAFDplE,EAAK8+C,cAGrC,GAFiC,OAAbyJ,IAEA6c,EAAa,CAI/B,MAAMC,EAAqBD,EAAcplE,EAAKgd,MAAQhd,EAC3B,OAAvBqlE,GACFC,EACEC,EACAF,GACA,EACAD,GAIJ,MAAMF,GAGV,GAAmB,OAAfllE,EAAKgd,MAAgB,CAEvBhd,EAAKgd,MAAM3c,OAASL,EACpBA,EAAOA,EAAKgd,MACZ,eAEG,GAAmB,OAAfhd,EAAKgd,MAAgB,CAC9Bhd,EAAKgd,MAAM3c,OAASL,EACpBA,EAAOA,EAAKgd,MACZ,SAIF,GADAhd,EAAQA,EACJA,IAASqP,EACX,OAEF,KAAwB,OAAjBrP,EAAKid,SAAkB,CAC5B,GAAoB,OAAhBjd,EAAKK,QAAmBL,EAAKK,SAAWgP,EAC1C,OAEFrP,EAAOA,EAAKK,OAEdL,EAAKid,QAAQ5c,OAASL,EAAKK,OAC3BL,EAAOA,EAAKid,UAGhBkmD,GAAsB,SAAS9zD,GAC7B,MAAMm2D,EAIJn2D,EAAe9R,UAEjB,GADyD,OAA/B8R,EAAe4vC,iBAGlC,CACL,MAAM7J,EAAYowB,EAAa1kD,cAC/B,IAAI2kD,EAAclzB,GAAwB6C,GAE1CkwB,EAA6BG,EAAap2D,GAAgB,GAAO,GACjEm2D,EAAa3kB,gBAAkB4kB,EAE/BZ,GAAWx1D,GACXojC,GAA0B2C,EAAWqwB,KAGzCtE,GAAsB,SACpBh1E,EACAkjB,EACApkB,EACAmpD,EACAZ,GAEA,MAAMkyB,EAAkBv5E,EAAQoR,UAC1B42C,EAAWhoD,EAAQyyD,cAGnB+mB,EAAmD,OAA/Bt2D,EAAe4vC,YACzC,GAAI0mB,GAAqBxxB,IAAaC,EAIpC,YADA/kC,EAAe9R,UAAYmoE,GAG7B,MAAME,EAA+Bv2D,EAAe9R,UAC9C4nE,EAAqB1U,KAC3B,IAAI/hB,EAAgB,KAWpB,GAVIyF,IAAaC,IACf1F,EAAgBwF,GACd0xB,EACA36E,EACAkpD,EACAC,EACAZ,EACA2xB,IAGAQ,GAAuC,OAAlBj3B,EAIvB,YADAr/B,EAAe9R,UAAYmoE,GAG7B,IAAIG,EAAcvzB,GAChBozB,EACAh3B,EACAzjD,EACAkpD,EACAC,EACA/kC,EACAs2D,EACAC,GAGA3xB,GACE4xB,EACA56E,EACAmpD,EACAZ,IAIFqxB,GAAWx1D,GAEbA,EAAe9R,UAAYsoE,EACvBF,EAIFd,GAAWx1D,GAGX6zD,GAAkB2C,EAAax2D,GAAgB,GAAO,IAG1D+xD,GAAiB,SACfj1E,EACAkjB,EACA21D,EACAC,GAEA,GAAID,IAAYC,EAAS,CAEvB,MAAMzxB,EAAwB0c,KACxBiV,EAAqB1U,KAC3BphD,EAAe9R,UAAYg3C,GACzB0wB,EACAzxB,EACA2xB,EACA91D,GAIFw1D,GAAWx1D,UAKf8zD,GAAsB,SAAS9zD,KAG/B8xD,GAAsB,SACpBh1E,EACAkjB,EACApkB,EACAmpD,EACAZ,KAIF4tB,GAAiB,SACfj1E,EACAkjB,EACA21D,EACAC,KAMJ,SAASa,GACP35E,EACAkjB,EACAm2C,GAEA,MAAMpR,EAAW/kC,EAAeovC,aAEhC,OAAQpvC,EAAenkB,KACrB,KAAKsT,EAEL,KAAKc,GACH,MACF,KAAKD,GACL,KAAKf,EACH,MACF,KAAKC,EAEC8+D,GADchuD,EAAepkB,OAE/B86E,GAAiB12D,GAEnB,MAEF,KAAK5Q,EAAU,CACb+xD,GAAiBnhD,GACjB22D,GAA+B32D,GAC/B,MAAM42D,EAAa52D,EAAe9R,UAC9B0oE,EAAUnkB,iBACZmkB,EAAUjvE,QAAUivE,EAAUnkB,eAC9BmkB,EAAUnkB,eAAiB,MAEb,OAAZ31D,GAAsC,OAAlBA,EAAQ6wB,QAG9B0+C,GAAkBrsD,GAGlBA,EAAeqN,YAAclB,IAE/B2nD,GAAoB9zD,GACpB,MAEF,KAAK1Q,EAAe,CAClBmyD,GAAezhD,GACf,MAAMmkC,EAAwB0c,KACxBjlE,EAAOokB,EAAepkB,KAC5B,GAAgB,OAAZkB,GAAgD,MAA5BkjB,EAAe9R,UACrC4jE,GACEh1E,EACAkjB,EACApkB,EACAmpD,EACAZ,GAGErnD,EAAQwyD,MAAQtvC,EAAesvC,KACjCue,GAAQ7tD,OAEL,CACL,IAAK+kC,EAAU,CACbztD,YAC+B,OAA7B0oB,EAAe9R,UACf,+GAIF,MAGF,MAAM4nE,EAAqB1U,KAM3B,GADkBiL,GAAkBrsD,IJ5V5C,SACEJ,EACAukC,EACAC,GAEKwC,IACHtvD,aACE,EACA,oIAKJ,MACM+nD,EAAgB0H,GADKnnC,EAAM1R,UAG/B0R,EAAMhkB,KACNgkB,EAAM2vC,cACNpL,EACAC,EACAxkC,GAMF,OAHAA,EAAM4vC,YAAenQ,EAGC,OAAlBA,GIuUMw3B,CACE72D,EACAmkC,EACA2xB,IAKFN,GAAWx1D,OAER,CACL,IAAI5H,EAAW8rC,GACbtoD,EACAmpD,EACAZ,EACA2xB,EACA91D,GAGF6zD,GAAkBz7D,EAAU4H,GAAgB,GAAO,GAMjD4kC,GACExsC,EACAxc,EACAmpD,EACAZ,IAIFqxB,GAAWx1D,GAEbA,EAAe9R,UAAYkK,EAGF,OAAvB4H,EAAesvC,KAEjBue,GAAQ7tD,GAGZ,MAEF,KAAKzQ,EAAU,CACb,IAAIqmE,EAAU7wB,EACd,GAAIjoD,GAAuC,MAA5BkjB,EAAe9R,UAAmB,CAC/C,MAAMynE,EAAU74E,EAAQyyD,cAGxBwiB,GAAej1E,EAASkjB,EAAgB21D,EAASC,OAC5C,CACkB,kBAAZA,GACTt+E,YAC+B,OAA7B0oB,EAAe9R,UACf,+GAKJ,MAAMi2C,EAAwB0c,KACxBiV,EAAqB1U,KACTiL,GAAkBrsD,GAE9B6rD,GAAiC7rD,IACnCw1D,GAAWx1D,GAGbA,EAAe9R,UAAYg3C,GACzB0wB,EACAzxB,EACA2xB,EACA91D,GAIN,MAEF,KAAKpQ,EACH,MACF,KAAKE,GAAmB,CACtB,MAAMigE,EAAY/vD,EAAeyvC,cACjC,IAAKzvC,EAAeqN,UAAYZ,MAAgBR,GAI9C,OAFAjM,EAAelZ,eAAiBqvD,EAEzBn2C,EAGT,MAAM8vD,EAA+B,OAAdC,EACjB+G,EAA6B,OAAZh6E,GAA8C,OAA1BA,EAAQ2yD,cAEnD,GAAgB,OAAZ3yD,IAAqBgzE,GAAkBgH,EAAgB,CAKzD,MAAMC,EAAsCj6E,EAAQ6wB,MAAYC,QAChE,GAA6B,OAAzBmpD,EAA+B,CAEjC,MAAM/Q,EAAQhmD,EAAe4vC,YACf,OAAVoW,GACFhmD,EAAe4vC,YAAcmnB,EAC7BA,EAAqBpnB,WAAaqW,IAElChmD,EAAe4vC,YAAc5vC,EAAe6vC,WAAaknB,EACzDA,EAAqBpnB,WAAa,MAEpConB,EAAqB1pD,UAAYf,KAIjCwjD,GAAkBgH,KAIpB92D,EAAeqN,WAAajB,IAE9B,MAEF,KAAK5c,EAEL,KAAKC,EAEL,KAAKI,EACH,MACF,KAAKR,EACH8xD,GAAiBnhD,GACjB8zD,GAAoB9zD,GACpB,MACF,KAAKrQ,EAEHyjE,GAAYpzD,GACZ,MACF,KAAKtQ,EAEL,KAAKK,GACH,MACF,KAAKG,GAIC89D,GADchuD,EAAepkB,OAE/B86E,GAAiB12D,GAEnB,MAEF,KAAK7P,GACH,GAAItW,KACF,GAAgB,OAAZiD,EAAkB,CACpB,IAAIk6E,EAAc3K,GAAkBrsD,GACpC1oB,YACE0/E,EACA,2GAGF9K,GAAmClsD,QACzBA,EAAeqN,UAAYZ,MAAgBR,KAIrDnvB,EAAQiV,UAAY,KACpBiO,EAAejO,UAAY,KAC3BiO,EAAenkB,IAAMiU,GACrBkQ,EAAeyvC,cAAgB,KAC/BzvC,EAAe9R,UAAY,MAG/B,MAEF,QACE5W,aACE,EACA,kGAKN,OAAO,KE9wBF,SAAS2/E,GAAsBj3D,GAEpC,QAA8ChoB,IAA1CgoB,EAAeuvC,cAAc0gB,SAC/B,OAAO,EAKT,OAAqB,OADmBjwD,EAAeyvC,cCuFzD,IAAIynB,GAA+D,KAEjEA,GAA4C,IAAIjwB,IAGlD,MAAMkwB,GAAqC,oBAAZC,QAAyBA,QAAUnwB,IAE3D,SAASowB,GAASC,EAAiBC,GACxC,MAAM32E,EAAS22E,EAAU32E,OACzB,IAAI1G,EAAQq9E,EAAUr9E,MACR,OAAVA,GAA6B,OAAX0G,IACpB1G,EAAQ6lB,GAA4Bnf,IAGtC,MAAM42E,EAA+B,CACnCr6E,cAA0B,OAAXyD,EAAkBjF,aAAiBiF,EAAOhF,MAAQ,KACjE67E,eAA0B,OAAVv9E,EAAiBA,EAAQ,GACzCnC,MAAOw/E,EAAUh0E,MACjBm0E,cAAe,KACfC,kBAAmB,KACnBC,oBAAoB,EACpBC,WAAW,GAGI,OAAbP,GAAqBA,EAASz7E,MAAQqT,IACxCsoE,EAAcE,cAAgBJ,EAASppE,UACvCspE,EAAcG,kBAAoBh8E,aAAiB27E,EAAS17E,MAC5D47E,EAAcI,oBAAqB,EACnCJ,EAAcK,WAAY,GAG5B,KChIK,SAA0BL,GAS/B,MAAMz/E,EAASy/E,EAAcz/E,MAChB,CACX,MAAM,cACJoF,EADI,eAEJs6E,EAFI,kBAGJE,EAHI,mBAIJC,EAJI,UAKJC,GACEL,EAKJ,GAAa,MAATz/E,GAAiBA,EAAMqR,iBAAkB,CAC3C,GAAIwuE,GAAsBC,EAIxB,OAMFp/E,QAAQV,MAAMA,GAKhB,MAAM+/E,EAAuB36E,EACxB,oCAAmCA,gBACpC,4DAEJ,IAAI46E,EAIAA,EAFAH,GAAsBD,EACpBE,EAEC,+DACA,0CAAyCF,KAGzC,0DAAyDA,OACzD,0EAIH,yKAGJ,MAAMK,EACH,GAAEF,IAAuBL,QACzB,GAAEM,IAMLt/E,QAAQV,MAAMigF,ID8DdC,CAAiBT,GACjB,MAAO3/E,IAKPgM,WAAW,KACT,MAAMhM,MAKZ,MAAMqgF,GAAoC,SAASp7E,EAASsb,GAC1DkyC,GAAgBxtD,EAAS,wBACzBsb,EAASjK,MAAQrR,EAAQyyD,cACzBn3C,EAASqP,MAAQ3qB,EAAQ2yD,cACzBr3C,EAAS+/D,uBACT5tB,MA0BF,SAAS6tB,GAAgBt7E,GACvB,MAAMwyD,EAAMxyD,EAAQwyD,IACpB,GAAY,OAARA,EACF,GAAmB,oBAARA,GAGP,GADAzlD,EAAsB,KAAMylD,EAAK,KAAM,MACnCxlD,IAAkB,CAEpBuuE,GAAwBv7E,EADPiN,WAWrBulD,EAAIxyD,QAAU,KAKpB,SAASw7E,GAAkBx7E,EAAS8pE,GAGhC,GADA/8D,EAAsB,KAAM+8D,EAAS,MACjC98D,IAAkB,CAEpBuuE,GAAwBv7E,EADViN,MAYpB,SAASwuE,GACPz7E,EACAy1D,GAEA,OAAQA,EAAa12D,KACnB,KAAKoT,EACL,KAAKW,EACL,KAAKI,GAEH,YADAwoE,GAAqB9W,GAAiB6F,GAAchV,GAGtD,KAAKrjD,EACH,GAAIqjD,EAAallC,UAAYV,IACX,OAAZ7vB,EAAkB,CACpB,MAAM2wE,EAAY3wE,EAAQyyD,cACpBsI,EAAY/6D,EAAQ2yD,cAC1BnF,GAAgBiI,EAAc,2BAC9B,MAAMn6C,EAAWm6C,EAAarkD,UAM1BqkD,EAAa32D,OAAS22D,EAAalD,aAClCsd,KAED1yE,aACEme,EAASjK,QAAUokD,EAAahD,cAChC,yMAKA5zD,aAAiB42D,EAAa32D,OAAS,YAEzC3B,aACEme,EAASqP,QAAU8qC,EAAa9C,cAChC,yMAKA9zD,aAAiB42D,EAAa32D,OAAS,aAI7C,MAAM68E,EAAWrgE,EAAS4hD,wBACxBzH,EAAalD,cAAgBkD,EAAa32D,KACtC6xE,EACAlX,GAAoBhE,EAAa32D,KAAM6xE,GAC3C5V,GAEW,CACX,MAAM6gB,EAAexB,QAGJl/E,IAAbygF,GAA2BC,EAAWnvB,IAAIgJ,EAAa32D,QACzD88E,EAAWvxB,IAAIoL,EAAa32D,MAC5BrD,aACE,EACA,0GAEAoD,aAAiB42D,EAAa32D,QAIpCwc,EAASugE,oCAAsCF,EAC/CluB,KAGJ,OAEF,KAAKn7C,EACL,KAAKE,EACL,KAAKC,EACL,KAAKF,EACL,KAAKa,GAEH,OACF,QACE5Y,aACE,EACA,6HAOR,SAASkhF,GACPI,EACAC,EACAtmB,GAEA,MAAM/C,EAAoD+C,EAAa/C,YACvE,IAAIK,EAA6B,OAAhBL,EAAuBA,EAAYK,WAAa,KACjE,GAAmB,OAAfA,EAAqB,CACvB,MAAMD,EAAcC,EAAWhjD,KAC/B,IAAIi6D,EAASlX,EACb,EAAG,CACD,IAAKkX,EAAOjrE,IAAM+8E,KAAgBrR,GAAc,CAE9C,MAAMX,EAAUE,EAAOF,QACvBE,EAAOF,aAAU5uE,OACDA,IAAZ4uE,GACFA,IAGJ,IAAKE,EAAOjrE,IAAMg9E,KAActR,GAAc,CAE5C,MAAMZ,EAASG,EAAOH,OACtBG,EAAOF,QAAUD,IAEJ,CACX,MAAMC,EAAUE,EAAOF,QACvB,QAAgB5uE,IAAZ4uE,GAA4C,oBAAZA,EAAwB,CAC1D,IAAIjkB,EAEFA,EADc,OAAZikB,EAEA,+FAE+B,oBAAjBA,EAAQwI,KAEtB,sdAaS,kBAAoBxI,EAEjCruE,aACE,EACA,kGAEAoqD,EACA5iC,GAA4BwyC,MAKpCuU,EAASA,EAAOj6D,WACTi6D,IAAWlX,IAIjB,SAASkpB,GAAyBvmB,GACvCimB,GAAqBxW,GAAgBuF,GAAchV,GACnDimB,GAAqBjR,GAAcxF,GAAcxP,GAGnD,SAASwmB,GACPC,EACAl8E,EACAy1D,EACA0mB,GAEA,OAAQ1mB,EAAa12D,KACnB,KAAKoT,EACL,KAAKW,EACL,KAAKI,GACHwoE,GAAqB3W,GAAeC,GAAavP,GACjD,MAEF,KAAKrjD,EAAgB,CACnB,MAAMkJ,EAAWm6C,EAAarkD,UAC9B,GAAIqkD,EAAallC,UAAYjB,GAC3B,GAAgB,OAAZtvB,EACFwtD,GAAgBiI,EAAc,qBAM1BA,EAAa32D,OAAS22D,EAAalD,aAClCsd,KAED1yE,aACEme,EAASjK,QAAUokD,EAAahD,cAChC,mMAKA5zD,aAAiB42D,EAAa32D,OAAS,YAEzC3B,aACEme,EAASqP,QAAU8qC,EAAa9C,cAChC,mMAKA9zD,aAAiB42D,EAAa32D,OAAS,aAI7Cwc,EAAS+jD,oBACT5R,SACK,CACL,MAAMkjB,EACJlb,EAAalD,cAAgBkD,EAAa32D,KACtCkB,EAAQyyD,cACRgH,GAAoBhE,EAAa32D,KAAMkB,EAAQyyD,eAC/CsI,EAAY/6D,EAAQ2yD,cAC1BnF,GAAgBiI,EAAc,sBAM1BA,EAAa32D,OAAS22D,EAAalD,aAClCsd,KAED1yE,aACEme,EAASjK,QAAUokD,EAAahD,cAChC,oMAKA5zD,aAAiB42D,EAAa32D,OAAS,YAEzC3B,aACEme,EAASqP,QAAU8qC,EAAa9C,cAChC,oMAKA9zD,aAAiB42D,EAAa32D,OAAS,aAI7Cwc,EAASujD,mBACP8R,EACA5V,EACAz/C,EAASugE,qCAEXpuB,KAGJ,MAAMiF,EAAc+C,EAAa/C,YAqCjC,YApCoB,OAAhBA,IAGE+C,EAAa32D,OAAS22D,EAAalD,aAClCsd,KAED1yE,aACEme,EAASjK,QAAUokD,EAAahD,cAChC,6MAKA5zD,aAAiB42D,EAAa32D,OAAS,YAEzC3B,aACEme,EAASqP,QAAU8qC,EAAa9C,cAChC,6MAKA9zD,aAAiB42D,EAAa32D,OAAS,aAO7Cw5E,GACE7iB,EACA/C,EACAp3C,KAMN,KAAKhJ,EAAU,CACb,MAAMogD,EAAc+C,EAAa/C,YACjC,GAAoB,OAAhBA,EAAsB,CACxB,IAAIp3C,EAAW,KACf,GAA2B,OAAvBm6C,EAAa5kC,MACf,OAAQ4kC,EAAa5kC,MAAM9xB,KACzB,KAAKyT,EAGL,KAAKJ,EACHkJ,EAAWm6C,EAAa5kC,MAAMzf,UAIpCknE,GACE7iB,EACA/C,EACAp3C,GAIJ,OAEF,KAAK9I,EAAe,CAClB,MAAM8I,EAAqBm6C,EAAarkD,UAMxC,GAAgB,OAAZpR,GAAoBy1D,EAAallC,UAAYjB,GAAQ,E3BlOxD,SACLuxB,EACA/hD,EACAmpD,EACAV,GAQIR,GAA6BjoD,EAAMmpD,IACnCpH,EAIuB7mB,Q2BoNrBoiD,CAAY9gE,EAFCm6C,EAAa32D,KACZ22D,EAAahD,eAI7B,OAEF,KAAKhgD,EAIL,KAAKF,EAEH,OAEF,KAAKQ,EACH,GAAInW,KAAqB,CACvB,MAAMs3D,EAAWuB,EAAahD,cAAcyB,SAExCp3D,KACFo3D,EACEuB,EAAahD,cAAcrpD,GACf,OAAZpJ,EAAmB,QAAU,SAC7By1D,EAAaxC,eACbwC,EAAanC,iBACbmC,EAAarC,gBACbia,KACA6O,EAAalmB,sBAGf9B,EACEuB,EAAahD,cAAcrpD,GACf,OAAZpJ,EAAmB,QAAU,SAC7By1D,EAAaxC,eACbwC,EAAanC,iBACbmC,EAAarC,gBACbia,MAIN,OAEF,KAAKr6D,GAEL,KAAKI,GACH,MACF,QACE5Y,aACE,EACA,6HAyDR,SAAS6hF,GAAgB5mB,GACvB,MAAMjD,EAAMiD,EAAajD,IACzB,GAAY,OAARA,EAAc,CAChB,MAAMl3C,EAAWm6C,EAAarkD,UAC9B,IAAIkrE,EACJ,OAAQ7mB,EAAa12D,KACnB,KAAKyT,EACH8pE,EAAkChhE,EAClC,MACF,QACEghE,EAAgBhhE,EAED,oBAARk3C,EACTA,EAAI8pB,IAGG9pB,EAAI1yD,eAAe,YACtBrE,aACE,EACA,kGAEAoD,aAAiB42D,EAAa32D,MAC9BmkB,GAA4BwyC,IAKlCjD,EAAIxyD,QAAUs8E,IAKpB,SAASC,GAAgBv8E,GACvB,MAAMw8E,EAAax8E,EAAQwyD,IACR,OAAfgqB,IACwB,oBAAfA,EACTA,EAAW,MAEXA,EAAWx8E,QAAU,MAQ3B,SAASy8E,GAAcz8E,GvB1lBhB,IAAyB8iB,EuB6lB9B,OvB7lB8BA,EuB2lBd9iB,EvB1lBoB,oBAAzBkwD,IACTA,GAAqBptC,GuB2lBf9iB,EAAQjB,KACd,KAAKoT,EACL,KAAKW,EACL,KAAKG,GACL,KAAKC,GAAqB,CACxB,MAAMw/C,EAAoD1yD,EAAQ0yD,YAClE,GAAoB,OAAhBA,EAAsB,CACxB,MAAMK,EAAaL,EAAYK,WAC/B,GAAmB,OAAfA,EAAqB,CACvB,MAAMD,EAAcC,EAAWhjD,KAC/B,IAAIi6D,EAASlX,EACb,EAAG,CACD,MAAMgX,EAAUE,EAAOF,aACP5uE,IAAZ4uE,GACF0R,GAAkBx7E,EAAS8pE,GAE7BE,EAASA,EAAOj6D,WACTi6D,IAAWlX,IAGxB,MAEF,KAAK1gD,EAAgB,CACnBkpE,GAAgBt7E,GAChB,MAAMsb,EAAWtb,EAAQoR,UAIzB,YAH6C,oBAAlCkK,EAAS+/D,sBAhjB1B,SAAwCr7E,EAASsb,GAS7C,GAPAvO,EACE,KACAquE,GACA,KACAp7E,EACAsb,GAEEtO,IAAkB,CAEpBuuE,GAAwBv7E,EADHiN,MAuiBnByvE,CAA+B18E,EAASsb,IAI5C,KAAK9I,EAEH,YADA8oE,GAAgBt7E,GAGlB,KAAKuS,EASH,YALIu2C,GACF6zB,GAAsB38E,GACbkmD,IA8DjB,SAA8BlmD,GAC5B,IAAKkmD,GACH,OAGF,MAAMuO,EACJz0D,EAAQoR,WACJ,cAACujB,GAAiB8/B,EAClBmoB,EAAgBx2B,GAAwBzxB,GAC9C4xB,GAAyB5xB,EAAeioD,GAtElCC,CAAqB78E,KAO7B,SAAS88E,GAAqBnkE,GAM5B,IAAI9E,EAAc8E,EAClB,OAIE,GAHA8jE,GAAc5oE,GAIG,OAAfA,EAAKgd,OAGHi4B,IAAoBj1C,EAAK9U,MAAQwT,EAJrC,CAUA,GAAIsB,IAAS8E,EACX,OAEF,KAAwB,OAAjB9E,EAAKid,SAAkB,CAC5B,GAAoB,OAAhBjd,EAAKK,QAAmBL,EAAKK,SAAWyE,EAC1C,OAEF9E,EAAOA,EAAKK,OAEdL,EAAKid,QAAQ5c,OAASL,EAAKK,OAC3BL,EAAOA,EAAKid,aAdVjd,EAAKgd,MAAM3c,OAASL,EACpBA,EAAOA,EAAKgd,MAmGlB,SAASksD,GAAaj6D,GACpB,OACEA,EAAM/jB,MAAQyT,GACdsQ,EAAM/jB,MAAQuT,GACdwQ,EAAM/jB,MAAQwT,EAkDlB,SAASyqE,GAAgBvnB,GACvB,IAAK3M,GACH,OAIF,MAAMm0B,EA3ER,SAA4Bn6D,GAC1B,IAAImO,EAASnO,EAAM5O,OACnB,KAAkB,OAAX+c,GAAiB,CACtB,GAAI8rD,GAAa9rD,GACf,OAAOA,EAETA,EAASA,EAAO/c,OAElB1Z,aACE,EACA,wGAiEkB0iF,CAAmBznB,GAGvC,IAAIxkC,EACAksD,EAEJ,OAAQF,EAAYl+E,KAClB,KAAKyT,EACHye,EAASgsD,EAAY7rE,UACrB+rE,GAAc,EACd,MACF,KAAK7qE,EAIL,KAAKC,EACH0e,EAASgsD,EAAY7rE,UAAUujB,cAC/BwoD,GAAc,EACd,MACF,QACE3iF,aACE,EACA,mGAIFyiF,EAAY1sD,UAAYd,KAE1Bs5B,GAAiB93B,GAEjBgsD,EAAY1sD,YAAcd,IAG5B,MAAM2tD,EArFR,SAAwBt6D,GAKtB,IAAIjP,EAAciP,EAClBu6D,EAAU,OAAa,CAErB,KAAwB,OAAjBxpE,EAAKid,SAAkB,CAC5B,GAAoB,OAAhBjd,EAAKK,QAAmB6oE,GAAalpE,EAAKK,QAG5C,OAAO,KAETL,EAAOA,EAAKK,OAId,IAFAL,EAAKid,QAAQ5c,OAASL,EAAKK,OAC3BL,EAAOA,EAAKid,QAEVjd,EAAK9U,MAAQyT,GACbqB,EAAK9U,MAAQ0T,GACboB,EAAK9U,MAAQsU,IACb,CAGA,GAAIQ,EAAK0c,UAAYlB,GAEnB,SAASguD,EAIX,GAAmB,OAAfxpE,EAAKgd,OAAkBhd,EAAK9U,MAAQwT,EACtC,SAAS8qE,EAETxpE,EAAKgd,MAAM3c,OAASL,EACpBA,EAAOA,EAAKgd,MAIhB,KAAMhd,EAAK0c,UAAYlB,IAErB,OAAOxb,EAAKzC,WA4CDksE,CAAe7nB,GAG9B,IAAI5hD,EAAc4hD,EAClB,OAAa,CACX,GAAI5hD,EAAK9U,MAAQyT,GAAiBqB,EAAK9U,MAAQ0T,EACzC2qE,EACED,G3BziBVl0B,E2B0iBgCh4B,E3BziBhCJ,E2ByiBwChd,EAAKzC,U3BxiB7Ci4C,E2BwiBwD+zB,E3BtiBpDn0B,EAAU5nC,WAAaN,GACxBkoC,EAAUl1C,WAAiBm1C,aAAar4B,EAAOw4B,GAEhDJ,EAAUC,aAAar4B,EAAOw4B,I2BqiBxBH,GAAaj4B,EAAQpd,EAAKzC,UAAWgsE,GAGnCD,EACFn0B,GAAuB/3B,EAAQpd,EAAKzC,WAEpC0sB,GAAY7M,EAAQpd,EAAKzC,gBAGxB,GAAIyC,EAAK9U,MAAQwT,QAIjB,GAAmB,OAAfsB,EAAKgd,MAAgB,CAC9Bhd,EAAKgd,MAAM3c,OAASL,EACpBA,EAAOA,EAAKgd,MACZ,SAEF,GAAIhd,IAAS4hD,EACX,OAEF,KAAwB,OAAjB5hD,EAAKid,SAAkB,CAC5B,GAAoB,OAAhBjd,EAAKK,QAAmBL,EAAKK,SAAWuhD,EAC1C,OAEF5hD,EAAOA,EAAKK,OAEdL,EAAKid,QAAQ5c,OAASL,EAAKK,OAC3BL,EAAOA,EAAKid,Q3BzkBT,IACLm4B,EACAp4B,EACAw4B,E2B0kBF,SAASszB,GAAsB38E,GAG7B,IAOIkxB,EACAqsD,EARA1pE,EAAc7T,EAIdw9E,GAAuB,EAM3B,OAAa,CACX,IAAKA,EAAsB,CACzB,IAAIvsD,EAASpd,EAAKK,OAClBupE,EAAY,OAAa,CAMvB,OALAjjF,YACa,OAAXy2B,EACA,wGAGMA,EAAOlyB,KACb,KAAKyT,EACH0e,EAAgBD,EAAO7f,UACvBmsE,GAA2B,EAC3B,MAAME,EACR,KAAKnrE,EAIL,KAAKC,EACH2e,EAAgBD,EAAO7f,UAAUujB,cACjC4oD,GAA2B,EAC3B,MAAME,EAEVxsD,EAASA,EAAO/c,OAElBspE,GAAuB,EAGzB,GAAI3pE,EAAK9U,MAAQyT,GAAiBqB,EAAK9U,MAAQ0T,EAC7CqqE,GAAqBjpE,GAGjB0pE,G3BtmBRt0B,E2BwmBU/3B,E3BvmBVL,E2BwmBShd,EAAKzC,U3BtmBV63C,EAAU5nC,WAAaN,GACxBkoC,EAAUl1C,WAAiB8pB,YAAYhN,GAExCo4B,EAAUprB,YAAYhN,I2BsmBlBgN,GACI3M,EACDrd,EAAKzC,gBAIL,GACLrU,MACA8W,EAAK9U,MAAQsU,GAGTkqE,EACF9zB,GACIv4B,EACDrd,EAAKzC,WAGRk4C,GACIp4B,EACDrd,EAAKzC,gBAGL,GAAIyC,EAAK9U,MAAQwT,GACtB,GAAmB,OAAfsB,EAAKgd,MAAgB,CAGvBK,EAAgBrd,EAAKzC,UAAUujB,cAC/B4oD,GAA2B,EAE3B1pE,EAAKgd,MAAM3c,OAASL,EACpBA,EAAOA,EAAKgd,MACZ,eAKF,GAFA4rD,GAAc5oE,GAEK,OAAfA,EAAKgd,MAAgB,CACvBhd,EAAKgd,MAAM3c,OAASL,EACpBA,EAAOA,EAAKgd,MACZ,SAGJ,GAAIhd,IAAS7T,EACX,OAEF,KAAwB,OAAjB6T,EAAKid,SAAkB,CAC5B,GAAoB,OAAhBjd,EAAKK,QAAmBL,EAAKK,SAAWlU,EAC1C,OAEF6T,EAAOA,EAAKK,OACRL,EAAK9U,MAAQwT,IAGfirE,GAAuB,GAG3B3pE,EAAKid,QAAQ5c,OAASL,EAAKK,OAC3BL,EAAOA,EAAKid,Q3BtqBT,IACLm4B,EACAp4B,E2BwqBF,SAAS6sD,GAAe19E,GAClB8oD,GAGF6zB,GAAsB38E,GAGtB88E,GAAqB98E,GAhVzB,SAAqBA,GAMnBA,EAAQkU,OAAS,KACjBlU,EAAQ6wB,MAAQ,KAChB7wB,EAAQ2yD,cAAgB,KACxB3yD,EAAQ0yD,YAAc,KACtB,MAAMz9C,EAAYjV,EAAQiV,UACR,OAAdA,IACFA,EAAUf,OAAS,KACnBe,EAAU4b,MAAQ,KAClB5b,EAAU09C,cAAgB,KAC1B19C,EAAUy9C,YAAc,MAmU1BirB,CAAY39E,GAGd,SAAS49E,GAAW59E,EAAuBy1D,GACzC,GAAK3M,GAiBL,OAAQ2M,EAAa12D,KACnB,KAAKoT,EACL,KAAKW,EACL,KAAKG,GACL,KAAKC,GAIH,YADAwoE,GAAqB7W,GAAiBC,GAAerP,GAGvD,KAAKrjD,EACH,OAEF,KAAKI,EAAe,CAClB,MAAM8I,EAAqBm6C,EAAarkD,UACxC,GAAgB,MAAZkK,EAAkB,CAEpB,MAAM2sC,EAAWwN,EAAahD,cAIxBzK,EAAuB,OAAZhoD,EAAmBA,EAAQyyD,cAAgBxK,EACtDnpD,EAAO22D,EAAa32D,KAEpByjD,EAAuCkT,EAAa/C,YAC1D+C,EAAa/C,YAAc,KACL,OAAlBnQ,G3B7zBL,SACL1B,EACA0B,EACAzjD,EACAkpD,EACAC,EACAV,GAIAvzC,GAAiB6sC,EAAYoH,GAE7B7E,GAAiBvC,EAAY0B,EAAezjD,EAAMkpD,EAAUC,G2BkzBpD41B,CACEviE,EACAinC,EACAzjD,EACAkpD,EACAC,GAKN,OAEF,KAAKx1C,EAAU,CACbjY,YAC6B,OAA3Bi7D,EAAarkD,UACb,kHAGF,MAAMy4C,EAA6B4L,EAAarkD,UAC1C0nE,EAAkBrjB,EAAahD,cAKvB,OAAZzyD,GAAmBA,EAAQyyD,cAE7B,Y3Br0BC,SACL5I,EACAgvB,EACAC,GAEAjvB,EAAaxyB,UAAYyhD,E2B+zBrBgF,CAAiBj0B,EAAcgvB,EAASC,GAG1C,KAAKxmE,EAGL,KAAKS,EACH,OAEF,KAAKC,GAAmB,CACtB,IAEI+qE,EAFA1hB,EAAiC5G,EAAa9C,cAG9CumB,EAAqBzjB,EACR,OAAb4G,EACF0hB,GAAgB,GAEhBA,GAAgB,EAChB7E,EAAqBzjB,EAAa5kC,MAC9BwrC,EAAS6W,aAAe3iB,KAI1B8L,EAAS6W,WAAazX,OAIC,OAAvByd,GA5mBV,SAAiCzjB,EAAcmjB,GAC7C,GAAI9vB,GAAkB,CAGpB,IAAIj1C,EAAc4hD,EAClB,OAAa,CACX,GAAI5hD,EAAK9U,MAAQyT,EAAe,CAC9B,MAAM8I,EAAWzH,EAAKzC,UAClBwnE,EACFlvB,GAAapuC,GAEbquC,GAAe91C,EAAKzC,UAAWyC,EAAK4+C,oBAEjC,GAAI5+C,EAAK9U,MAAQ0T,EAAU,CAChC,MAAM6I,EAAWzH,EAAKzC,UAClBwnE,EACet9D,E3B7HZ+b,UAAY,G2B+HjBuyB,GAAmBtuC,EAAUzH,EAAK4+C,mBAE/B,IACL5+C,EAAK9U,MAAQiU,IACU,OAAvBa,EAAK8+C,cACL,CAGA,MAAM6gB,EAAgC3/D,EAAKgd,MAAYC,QACvD0iD,EAAsBt/D,OAASL,EAC/BA,EAAO2/D,EACP,SACK,GAAmB,OAAf3/D,EAAKgd,MAAgB,CAC9Bhd,EAAKgd,MAAM3c,OAASL,EACpBA,EAAOA,EAAKgd,MACZ,UAEF,GAAIhd,IAAS4hD,EACX,OAEF,KAAwB,OAAjB5hD,EAAKid,SAAkB,CAC5B,GAAoB,OAAhBjd,EAAKK,QAAmBL,EAAKK,SAAWuhD,EAC1C,OAEF5hD,EAAOA,EAAKK,OAEdL,EAAKid,QAAQ5c,OAASL,EAAKK,OAC3BL,EAAOA,EAAKid,UAgkBVktD,CAAwB9E,EAAoB6E,GAM9C,MAAME,EAAmCxoB,EAAa/C,YACtD,GAAkB,OAAdurB,EAAoB,CACtBxoB,EAAa/C,YAAc,KAC3B,IAAIwrB,EAAazoB,EAAarkD,UACX,OAAf8sE,IACFA,EAAazoB,EAAarkD,UAAY,IAAIipE,IAE5C4D,EAAU14E,QAAQ/F,IAEhB,IAAI2+E,EAAQC,GAAsB9oD,KAAK,KAAMmgC,EAAcj2D,GACvD1C,OACFqhF,EAAQE,yBAAsBF,IAE3BD,EAAWzxB,IAAIjtD,KAClB0+E,EAAW7zB,IAAI7qD,GACfA,EAAS8yE,KAAK6L,EAAOA,MAK3B,OAEF,KAAK/qE,GACH,OAEF,QACE5Y,aACE,EACA,gIAnIN,CACE,OAAQi7D,EAAa12D,KACnB,KAAKoT,EACL,KAAKW,EACL,KAAKG,GACL,KAAKC,GAIH,YADAwoE,GAAqB7W,GAAiBC,GAAerP,IA/T7D,SAAyBA,GACvB,GAAKvP,GAIL,OAAQuP,EAAa12D,KACnB,KAAKqT,EAGL,KAAKI,EAGL,KAAKC,EACH,OAEF,KAAKH,EACL,KAAKC,EAAY,CACf,MAAM8mE,EAIJ5jB,EAAarkD,WACT,cAACujB,EAAD,gBAAgB+/B,GAAmB2kB,EAEzC,YADA9yB,GAAyB5xB,EAAe+/B,GAG1C,QACEl6D,aACE,EACA,6HAuSJ8jF,CAAgB7oB,IEhiCpB,MAAM4kB,GAAqC,oBAAZC,QAAyBA,QAAUnwB,IAC5Do0B,GAAqC,oBAAZC,QAAyBA,QAAUrsB,IAElE,SAASssB,GACP37D,EACA23D,EACAzwE,GAEA,MAAM0xD,EAASC,GAAa3xD,GAE5B0xD,EAAO38D,IAAM43E,GAGbjb,EAAOH,QAAU,CAACr6D,QAAS,MAC3B,MAAMjG,EAAQw/E,EAAUh0E,MAKxB,OAJAi1D,EAAO5xD,SAAW,KAChB40E,GAAgBzjF,GAChBs/E,GAASz3D,EAAO23D,IAEX/e,EAGT,SAASijB,GACP77D,EACA23D,EACAzwE,GAEA,MAAM0xD,EAASC,GAAa3xD,GAC5B0xD,EAAO38D,IAAM43E,GACb,MAAM3X,EAA2Bl8C,EAAMhkB,KAAKkgE,yBAC5C,GAAwC,oBAA7BA,EAAyC,CAClD,MAAM/jE,EAAQw/E,EAAUh0E,MACxBi1D,EAAOH,QAAU,IACRyD,EAAyB/jE,GAIpC,MAAMiU,EAAO4T,EAAM1R,UAgCnB,OA/Ba,OAATlC,GAAmD,oBAA3BA,EAAK0vE,oBAC/BljB,EAAO5xD,SAAW,WXudtB,IAAyCwR,EWtdK,oBAA7B0jD,IXsdwB1jD,EWhdD9Q,KXidS,OAA3Cq0E,GACFA,GAAyC,IAAI10B,IAAI,CAAC7uC,IAElDujE,GAAuCx0B,IAAI/uC,IWldzC,MAAMrgB,EAAQw/E,EAAUh0E,MAClBrJ,EAAQq9E,EAAUr9E,MACxBm9E,GAASz3D,EAAO23D,GAChBjwE,KAAKo0E,kBAAkB3jF,EAAO,CAC5B0/E,eAA0B,OAAVv9E,EAAiBA,EAAQ,KAGD,oBAA7B4hE,GAITvjE,YACEqnB,EAAM9Y,iBAAmBymD,GACzB,sJAEA5xD,aAAiBikB,EAAMhkB,OAAS,aAMnC48D,EAGT,SAASojB,GACPnmE,EACA0gD,EACA75D,GAKA,IACIu/E,EADAxpB,EAAY58C,EAAK48C,UAarB,GAXkB,OAAdA,GACFA,EAAY58C,EAAK48C,UAAY,IAAIgpB,GACjCQ,EAAY,IAAI50B,IAChBoL,EAAUz6C,IAAItb,EAAUu/E,KAExBA,EAAYxpB,EAAUx6C,IAAIvb,QACRtE,IAAd6jF,IACFA,EAAY,IAAI50B,IAChBoL,EAAUz6C,IAAItb,EAAUu/E,MAGvBA,EAAUtyB,IAAI4M,GAAuB,CAExC0lB,EAAU10B,IAAIgP,GACd,IAAI2lB,EAAOC,GAAkB3pD,KAC3B,KACA3c,EACAnZ,EACA65D,GAEEv8D,OACFkiF,EAAOX,yBAAsBW,IAE/Bx/E,EAAS8yE,KAAK0M,EAAMA,IAIxB,SAASE,GACPvmE,EACAqnD,EACAmf,EACA14E,EACA4yD,GAOA,GAJA8lB,EAAY5uD,WAAaN,GAEzBkvD,EAAYrsB,YAAcqsB,EAAYpsB,WAAa,KAGvC,OAAVtsD,GACiB,kBAAVA,GACe,oBAAfA,EAAM6rE,KACb,CAEA,MAAM9yE,EAAsBiH,EAO5B,IAAIyc,EAAiB88C,EACjBof,GAAqB,EACrBC,GAAe,EACnB,EAAG,CACD,GAAIn8D,EAAenkB,MAAQiU,GAAmB,CAC5C,MAAMhT,EAAUkjB,EAAejO,UAC/B,GAAgB,OAAZjV,EAAkB,CACpB,MAAMgsE,EAAqChsE,EAAQ2yD,cACnD,GAAqB,OAAjBqZ,EAAuB,CAIzBqT,EAActuB,GADKib,EAAakH,YAGhC,OAGJ,IAAIoM,EAAgBp8D,EAAeovC,aAAaitB,YACnB,kBAAlBD,IACLA,GAAiB,EACnBF,EAAoB,IAEG,IAAvBA,GACAE,EAAgBF,KAEhBA,EAAoBE,IAO1Bp8D,EAAiBA,EAAehP,aACN,OAAnBgP,GAGTA,EAAiB88C,EACjB,EAAG,CACD,GACE98C,EAAenkB,MAAQiU,IACvBmnE,GAAsBj3D,GACtB,CAKA,MAAM+6D,EAA4B/6D,EAAewvC,YACjD,GAAkB,OAAdurB,EAAoB,CACtB,MAAMvrB,EAAe,IAAIvI,IACzBuI,EAAYrI,IAAI7qD,GAChB0jB,EAAewvC,YAAcA,OAE7BurB,EAAU5zB,IAAI7qD,GAWhB,IAAK0jB,EAAe+xB,KAAO0c,MAAoBxiC,GAAU,CAQvD,GAPAjM,EAAeqN,WAAaZ,GAK5BwvD,EAAY5uD,aAAeR,GAAsBE,IAE7CkvD,EAAYpgF,MAAQqT,EAAgB,CAEtC,GAA2B,OADA+sE,EAAYlqE,UAKrCkqE,EAAYpgF,IAAMqU,OACb,CAIL,MAAMsoD,EAASC,GAAalL,IAC5BiL,EAAO38D,IAAMm9D,GACbL,GAAcsjB,EAAazjB,IAS/B,YAHAyjB,EAAYn1E,eAAiBymD,IAW/B,IAAI+uB,EACJ,GAHAV,GAAmBnmE,EAAM0gD,EAAsB75D,IAGpB,IAAvB4/E,EAIFI,EAAoBC,OACf,CACL,IAAqB,IAAjBJ,EAAoB,CAiBtBA,EAHiCtuB,GAJFqI,GAC7BzgD,EACA0gD,IAKuChI,GAE3CmuB,EAAoBH,EAAcD,EAWpC,OAJAM,GAAiB/mE,EAAM6mE,EAAmBnmB,GAE1Cn2C,EAAeqN,WAAaL,QAC5BhN,EAAelZ,eAAiBqvD,GAE3B,GACLt8D,MACAmmB,EAAenkB,MAAQsU,GACvB,CACAyrE,GAAmBnmE,EAAM0gD,EAAsB75D,GAG/C,IAAI0+E,EAAah7D,EAAeyvC,cAChC,GAAmB,OAAfurB,EAAqB,CACvBA,EAAah7D,EAAeyvC,cAAgB,IAAI0nB,GAChD,MAAMr6E,EAAUkjB,EAAejO,UAC/Bza,YACEwF,EACA,wGAGFA,EAAQ2yD,cAAgBurB,EAG1B,IAAKA,EAAWzxB,IAAIjtD,GAAW,CAC7B0+E,EAAW7zB,IAAI7qD,GACf,IAAI2+E,EAAQC,GAAsB9oD,KAChC,KACApS,EACA1jB,GAEE1C,OACFqhF,EAAQE,yBAAsBF,IAEhC3+E,EAAS8yE,KAAK6L,EAAOA,GAIvB,OAFAj7D,EAAeqN,WAAaL,QAC5BhN,EAAelZ,eAAiBqvD,GAKlCn2C,EAAiBA,EAAehP,aACN,OAAnBgP,GAGTzc,EAAQ,IAAItL,OACT0D,aAAiBsgF,EAAYrgF,OAAS,qBACrC,wLAIAmkB,GAA4Bk8D,IXivClCQ,IAAqB,EWzuCrBl5E,EAAQgyE,GAAoBhyE,EAAO04E,GACnC,IAAIj8D,EAAiB88C,EACrB,EAAG,CACD,OAAQ98C,EAAenkB,KACrB,KAAKuT,EAAU,CACb,MAAMmoE,EAAYh0E,EASlB,OARAyc,EAAeqN,WAAaL,GAC5BhN,EAAelZ,eAAiBqvD,OAMhCye,GAAsB50D,EALPu7D,GACbv7D,EACAu3D,EACAphB,IAKJ,KAAKjnD,EAEH,MAAMqoE,EAAYh0E,EACZo0D,EAAO33C,EAAepkB,KACtBwc,EAAW4H,EAAe9R,UAChC,IACG8R,EAAeqN,UAAYZ,MAAgBR,KACF,oBAAlC0rC,EAAKmE,0BACG,OAAb1jD,GACuC,oBAA/BA,EAASsjE,oBACfgB,GAAmCtkE,IACxC,CAUA,OATA4H,EAAeqN,WAAaL,GAC5BhN,EAAelZ,eAAiBqvD,OAOhCye,GAAsB50D,EALPy7D,GACbz7D,EACAu3D,EACAphB,KASRn2C,EAAiBA,EAAehP,aACN,OAAnBgP,GAGX,SAAS28D,GACP38D,EACAm2C,GAEA,OAAQn2C,EAAenkB,KACrB,KAAKqT,EAAgB,CAEf8+D,GADchuD,EAAepkB,OAE/B86E,GAAiB12D,GAEnB,MAAMqN,EAAYrN,EAAeqN,UACjC,OAAIA,EAAYL,IACdhN,EAAeqN,UAAaA,GAAaL,GAAiBP,GACnDzM,GAEF,KAET,KAAK5Q,EAAU,CACb+xD,GAAiBnhD,GACjB22D,GAA+B32D,GAC/B,MAAMqN,EAAYrN,EAAeqN,UAOjC,OANA/1B,aACG+1B,EAAYZ,MAAgBR,GAC7B,mGAGFjM,EAAeqN,UAAaA,GAAaL,GAAiBP,GACnDzM,EAET,KAAK1Q,EAGH,OADAmyD,GAAezhD,GACR,KAET,KAAKlQ,GAAmB,CACtB,MAAMud,EAAYrN,EAAeqN,UACjC,OAAIA,EAAYL,IACdhN,EAAeqN,UAAaA,GAAaL,GAAiBP,GAEnDzM,GAEF,KAET,KAAK7P,GACH,GAAItW,KAA8B,CAEhC,MAAMwzB,EAAYrN,EAAeqN,UACjC,GAAIA,EAAYL,GAGd,OAFAhN,EAAeqN,UAAaA,GAAaL,GAAiBP,GAEnDzM,EAGX,OAAO,KAET,KAAK3Q,EAEH,OADA8xD,GAAiBnhD,GACV,KACT,KAAKrQ,EAEH,OADAyjE,GAAYpzD,GACL,KACT,QACE,OAAO,MAIb,SAAS48D,GAAsBC,GAC7B,OAAQA,EAAgBhhF,KACtB,KAAKqT,EAAgB,CACnB,MAAM88C,EAAoB6wB,EAAgBjhF,KAAKowD,kBACrB,OAAtBA,QAAoDh0D,IAAtBg0D,GAChC0qB,GAAiBmG,GAEnB,MAEF,KAAKztE,EACH+xD,GAAiB0b,GACjBlG,GAA+BkG,GAC/B,MAEF,KAAKvtE,EACHmyD,GAAeob,GACf,MAEF,KAAKxtE,EACH8xD,GAAiB0b,GACjB,MACF,KAAKltE,EACHyjE,GAAYyJ,IXxWlB,MAAOhgF,uBAAD,GAAyB+B,kBAAzB,IAA8CzE,KAEpD,IAAI2iF,GACAC,GACAC,GACAC,GAEArjF,MAGFtC,YACuB,MAArB2I,sBAA0D,MAA7BA,qBAAkBnD,QAC/C,ySAOS,CACXggF,IAA8B,EAC9BC,IAA8B,EAC9B,MAAMG,EAA0C,GAEhDF,GAA6B,SAASp9D,EAAcu9D,GAGlD,MAAMhgF,EAAgBxB,aAAiBikB,EAAMhkB,OAAS,iBAClDshF,EAAwC//E,KAG5C5E,aACE,EACA,sMAGA4kF,EACI,kCACA,+BACJp9D,GAA4BH,IAE9Bs9D,EAAwC//E,IAAiB,IAG3D8/E,GAA0B,SAAS7kE,GACjC,OAAQglE,IACN,IAAK,kBACH,GAAIL,GACF,OAEFxkF,aACE,EACA,kEAEFwkF,IAA8B,EAC9B,MACF,IAAK,SACH,GAAID,GACF,OAEFvkF,aACE,EACA,6IAGFukF,IAA8B,IAOtC,IAyBIO,GACAC,GACAC,GACAC,GACAC,GACAC,GA9BAC,GAAoCpwB,GAAO,EAE3CqwB,IAAqB,EAGrBpP,GAA+B,KAC/BqP,GAA6B,KAE7B3Z,GAA2C7W,GAC3CywB,IAAuC,EACvCrB,IAA8B,EAG9B9sB,GAA2B,KAE3BxH,IAAwB,EACxB41B,GAAkD,KAClDC,GAAiC,KACjCC,GAA2B,KAE3BtC,GAA4D,KAG5DlxB,GAA8B,KAiGlC,SAASyzB,KACP,GAAuB,OAAnB1P,GAAyB,CAC3B,IAAIqO,EAAkBrO,GAAex9D,OACrC,KAA2B,OAApB6rE,GACLD,GAAsBC,GACtBA,EAAkBA,EAAgB7rE,OAKpCgiD,GAAwBC,0BhBrTT,IAAXnI,IACFvyD,aACE,EACA,8DgBsTNslF,GAAW,KACX3Z,GAA2B7W,GAC3BywB,IAA+B,EAC/BrB,IAAqB,EACrBjO,GAAiB,KAGnB,SAAS2P,KACP,KAAsB,OAAfxuB,IAAqB,CAExBtvC,GAAgBsvC,IAElB1F,KAEA,MAAM58B,EAAYsiC,GAAWtiC,UAM7B,GAJIA,EAAYd,KSw1BYzvB,ETv1BH6yD,GSw1BtB/J,IAGLC,GAAiB/oD,EAAQoR,YTx1BnBmf,EAAYX,GAAK,CACnB,MAAM5vB,EAAU6yD,GAAW59C,UACX,OAAZjV,GACFu8E,GAAgBv8E,GASpB,OADuBuwB,GAAalB,GAAYC,GAASE,KAEvD,KAAKH,GACH2tD,GAAgBnqB,IAMhBA,GAAWtiC,YAAclB,GACzB,MAEF,KAAKE,GAEHytD,GAAgBnqB,IAGhBA,GAAWtiC,YAAclB,GAIzBuuD,GADgB/qB,GAAW59C,UACP49C,IACpB,MAEF,KAAKvjC,GAEHsuD,GADgB/qB,GAAW59C,UACP49C,IACpB,MAEF,KAAKrjC,GACHkuD,GAAe7qB,IAInBA,GAAaA,GAAWA,WSuyB5B,IAAgC7yD,ETnyB5BsjB,KAIJ,SAASg+D,KACP,KAAsB,OAAfzuB,IAAqB,CAM1B,GAJEtvC,GAAgBsvC,IAGAA,GAAWtiC,UACbV,GAAU,CACxBs9B,KAEAsuB,GADgB5oB,GAAW59C,UACa49C,IAG1CA,GAAaA,GAAWA,WAIxBvvC,KAIJ,SAASi+D,GACPrF,EACAC,GAUA,IAPEjmB,GAAwBG,sCACxBH,GAAwBO,4BAEpB95D,MACFu5D,GAAwBE,kCAGN,OAAfvD,IAAqB,CAExBtvC,GAAgBsvC,IAElB,MAAMtiC,EAAYsiC,GAAWtiC,UAE7B,GAAIA,GAAajB,GAASI,IAAW,CACnCy9B,KAEA8uB,GACEC,EAFcrpB,GAAW59C,UAIzB49C,IAKAtiC,EAAYX,KACdu9B,KACAkvB,GAAgBxpB,KAGdtiC,EAAYT,KACdmxD,GAAgC/E,GAGlCrpB,GAAaA,GAAWA,WAGxBvvC,KAIJ,SAASk+D,GAAqB7oE,EAAiBm6C,GAC7CmuB,GAAgC,KAChCC,GAA8B,KAC9BC,GAAwB,KAGxB,MAAMM,EAAsBxV,GAC5BA,IAAc,EAEd,IAAIjC,EAASlX,EACb,EAAG,CAKD,GAHEvvC,GAAgBymD,GAGdA,EAAOz5C,UAAYT,GAAS,CAC9B,IACI70B,EADAuQ,GAAW,EAGbuB,EAAsB,KAAMivE,GAA0B,KAAMhS,GACxDh9D,MACFxB,GAAW,EACXvQ,EAAQgS,KAURzB,GACF+vE,GAAwBvR,EAAQ/uE,GAGpC+uE,EAASA,EAAOnX,iBACE,OAAXmX,GAEP1mD,KAGF2oD,GAAcwV,EAGd,MAAMC,EAAqB/oE,EAAK3O,eAC5B03E,IAAuBnxB,IACzBoxB,GAAYhpE,EAAM+oE,GAGfxV,IAAsBD,IACzB2V,KAIJ,SAAShC,GAAmCtkE,GAC1C,OAC6C,OAA3CujE,IACAA,GAAuCpyB,IAAInxC,GAY/C,SAASsgD,KAC6B,OAAhCslB,IACFt4B,GAAqBs4B,IAEO,OAA1BC,IAGFA,KAIJ,SAASU,GAAWlpE,EAAiB88C,GACnCqrB,IAAY,EACZz1B,IAAe,EjBjNV,WACL,GAAI/uD,KAAqB,CACvB,IAAKuuD,GACH,OAEFQ,IAAe,EACfC,IAAoC,EACpCK,GAAsBm2B,QACtBh2B,GAAU,yBiB0MZi2B,GAEAvnF,YACEme,EAAK3Y,UAAYy1D,EACjB,mKAIF,MAAM0mB,EAA0BxjE,EAAK68C,4BACrCh7D,YACE2hF,IAA4B5rB,GAC5B,0GAGF53C,EAAK68C,4BAA8BjF,GAKnC,MAAMyxB,EAAmCvsB,EAAazrD,eAChDi4E,EAAkCxsB,EAAazC,qBPzkBhD,SACLr6C,EACAupE,GAIA,GAFAvpE,EAAKnN,UAAW,EAEZ02E,IAA0B3xB,GAQ5B,OANA53C,EAAKu8C,oBAAsB3E,GAC3B53C,EAAKw8C,kBAAoB5E,GACzB53C,EAAKy8C,sBAAwB7E,GAC7B53C,EAAK08C,oBAAsB9E,GAC3B53C,EAAK28C,iBAAmB/E,QACxBwI,GAA+BxI,GAAQ53C,GAIrCupE,EAAwBvpE,EAAK28C,mBAC/B38C,EAAK28C,iBAAmB/E,IAI1B,MAAM4E,EAAoBx8C,EAAKw8C,kBAC/B,GAAIA,IAAsB5E,GACxB,GAAI4E,EAAoB+sB,EAEtBvpE,EAAKu8C,oBAAsBv8C,EAAKw8C,kBAAoB5E,OAC/C,CACuB53C,EAAKu8C,oBACPgtB,IAGxBvpE,EAAKu8C,oBAAsBv8C,EAAKw8C,mBAStC,MAAMC,EAAwBz8C,EAAKy8C,sBAC/BA,IAA0B7E,IAG5BuI,GAAyBngD,EAAMupE,GAC/BnpB,GAA+BxI,GAAQ53C,IAKrCupE,EADwBvpE,EAAK08C,qBAI/B18C,EAAKy8C,sBAAwB7E,GAC7B53C,EAAK08C,oBAAsB9E,GAC3B53C,EAAK28C,iBAAmB/E,GAIxBuI,GAAyBngD,EAAMupE,GAC/BnpB,GAA+BxI,GAAQ53C,IAIrCupE,EAAwB9sB,GAG1B0D,GAAyBngD,EAAMupE,GAC/BnpB,GAA+BxI,GAAQ53C,IAMzCogD,GAA+BxI,GAAQ53C,GOmgBvCwpE,CAA4BxpE,EAH1BspE,EAAkCD,EAC9BC,EACAD,GAGN,IAWIlvB,EAXAsvB,EAAsC,KAiC1C,IAhCItlF,OAGFslF,EAAmBj/E,qBAAkBnD,QACrCmD,qBAAkBnD,QAAU2Y,EAAKq9C,sBAInCl0D,GAAkB9B,QAAU,KAGxBy1D,EAAallC,UAAYnB,GAKK,OAA5BqmC,EAAa1C,YACf0C,EAAa1C,WAAWF,WAAa4C,EACrC3C,EAAc2C,EAAa3C,aAE3BA,EAAc2C,EAIhB3C,EAAc2C,EAAa3C,YAG7B7L,GAAiBtuC,EAAKgc,eAGtBk+B,GAAaC,EjB3OR,WACL,GAAIx2D,KAAqB,CACvB,IAAKuuD,GACH,OAEFY,GAA6B,EAC7BK,GAAU,kCiBsOZu2B,GACsB,OAAfxvB,IAAqB,CAC1B,IACI53D,EADAuQ,GAAW,EAGbuB,EAAsB,KAAMu0E,GAAgC,MACxDt0E,MACFxB,GAAW,EACXvQ,EAAQgS,KAURzB,IACFhR,YACiB,OAAfq4D,GACA,iGAGF0oB,GAAwB1oB,GAAY53D,GAEjB,OAAf43D,KACFA,GAAaA,GAAWA,aAiB9B,KjB9QK,WACL,GAAIv2D,KAAqB,CACvB,IAAKuuD,GACH,OAEF,MAAMy3B,EAAQ72B,GACdA,GAA6B,EAC7BM,GACG,iCAAgCu2B,WACjC,gCACA,OiBuPJC,GAEI3lF,MCjqBCA,OAGLuwE,GAAajmE,2BDuqBb2rD,GAAaC,EjB7PR,WACL,GAAIx2D,KAAqB,CACvB,IAAKuuD,GACH,OAEFY,GAA6B,EAC7BK,GAAU,8BiBwPZ02B,GACsB,OAAf3vB,IAAqB,CAC1B,IACI53D,EADAuQ,GAAW,EAGbuB,EAAsB,KAAMs0E,GAAsB,MAC9Cr0E,MACFxB,GAAW,EACXvQ,EAAQgS,KAURzB,IACFhR,YACiB,OAAfq4D,GACA,iGAGF0oB,GAAwB1oB,GAAY53D,GAEjB,OAAf43D,KACFA,GAAaA,GAAWA,aAoB9B,KjBnSK,WACL,GAAIv2D,KAAqB,CACvB,IAAKuuD,GACH,OAEF,MAAMy3B,EAAQ72B,GACdA,GAA6B,EAC7BM,GACG,6BAA4Bu2B,WAC7B,4BACA,OiByQJG,GAEiB9pE,EAAKgc,clB/jBtB2D,GAAiBwuB,IACjBA,GAAuB,KACvBK,GAAmCN,IACnCA,GAAgB,KkBkkBhBluC,EAAK3Y,QAAUy1D,EAMf5C,GAAaC,EjBlRR,WACL,GAAIx2D,KAAqB,CACvB,IAAKuuD,GACH,OAEFY,GAA6B,EAC7BK,GAAU,gCiB6QZ42B,GACsB,OAAf7vB,IAAqB,CAC1B,IACI53D,EADAuQ,GAAW,EAGbuB,EACE,KACAw0E,GACA,KACA5oE,EACAwjE,GAEEnvE,MACFxB,GAAW,EACXvQ,EAAQgS,KAURzB,IACFhR,YACiB,OAAfq4D,GACA,iGAGF0oB,GAAwB1oB,GAAY53D,GACjB,OAAf43D,KACFA,GAAaA,GAAWA,aAK9B,GAAoB,OAAhBC,GAA0D,OAAlCmuB,GAAwC,CAKlE,IAAIn3E,EAAW03E,GAAqBlsD,KAAK,KAAM3c,EAAMm6C,GACjDh2D,OAIFgN,EAAW64E,yBAAuB74E,IAEpCo3E,GAA8B0B,oCAAgBC,2BAAgB,IACrDn6B,GAAuB5+C,IAEhCq3E,GAAwBr3E,EAG1BuhD,IAAe,EACfy1B,IAAY,EjBjUP,WACL,GAAIxkF,KAAqB,CACvB,IAAKuuD,GACH,OAEF,MAAMy3B,EAAQ72B,GACdA,GAA6B,EAC7BM,GACG,+BAA8Bu2B,WAC/B,8BACA,OiBwTJQ,GjBnZK,WACL,GAAIxmF,KAAqB,CACvB,IAAKuuD,GACH,OAGF,IAAI1tD,EAAU,KACVmuD,GACFnuD,EAAU,8CACDquD,GAA+B,IACxCruD,EAAU,kDAEZmuD,IAAoC,EACpCE,KACAH,IAAe,EACfM,GAAsBm2B,QAEtB/1B,GAAQ,uBAAwB,uBAAwB5uD,IiBmY1D4lF,Gd3tBK,SAAsBpqE,GACM,oBAAtBs3C,IACTA,GAAkBt3C,Gc0tBpBqqE,CAAavtB,EAAarkD,WACX6xE,KAA0BxiF,WACvCwiF,KAA0BxiF,UAAUyiF,aAAaztB,GAGnD,MAAM0tB,EAAkC1tB,EAAazrD,eAC/Co5E,EAAiC3tB,EAAazC,oBAC9CqwB,EACJD,EAAiCD,EAC7BC,EACAD,EAQN,GAPIE,IAAqC9yB,KAGvCsuB,GAAyC,MAirC7C,SAAkBlmE,EAAM3O,GACtB2O,EAAK3O,eAAiBA,EACtB2O,EAAK88C,aAAe,KAjrCpB6tB,CAAS3qE,EAAM0qE,GAEXvmF,KAAwB,CAG1B,IAAIymF,EAFJpgF,qBAAkBnD,QAAUoiF,EAI5B,IAEE,GADAmB,EAAangF,mBAAgBpD,QACV,OAAfujF,GAAuB5qE,EAAKq9C,qBAAqB7oB,KAAO,EAAG,CAC7D,MAAMq2C,EAAWC,GACftH,EACAxjE,EAAKo9C,qBAEPwtB,EAAWG,cAAc/qE,EAAKq9C,qBAAsBwtB,IAEtD,MAAOvoF,GAGF0oF,KACHA,IAAoB,EACpBC,GAAiB3oF,GAdrB,QAoBE,MAAMg7D,EAAwBt9C,EAAKs9C,sBACnCA,EAAsB1wD,QACpB,CAACs+E,EAAuBC,KAIlBA,EAA0BT,IAC5BptB,EAAsBzL,OAAOs5B,GAE7BD,EAAsBt+E,QAAQw+E,IAG5B,GAFAA,EAAYC,UAEO,OAAfT,GAA+C,IAAxBQ,EAAYC,QACrC,IACET,EAAWU,oCAAoCF,GAC/C,MAAO9oF,GAGF0oF,KACHA,IAAoB,EACpBC,GAAiB3oF,WAYrC,SAASipF,GACPhhE,EACAihE,GAEA,GAAIA,IAAe3zB,IAASttC,EAAe8vC,sBAAwBxC,GAGjE,OAGF,IAAI4zB,EAAyB7zB,GAG7B,GAAI3zD,MAAuBsmB,EAAe+xB,KAAO4c,GAAa,CAG5D,IAAIoB,EAAiB/vC,EAAe+vC,eAChCK,EAAmBpwC,EAAemwC,iBAStC,MAAMgxB,EACyB,OAA7BnhE,EAAejO,WACfiO,EAAe2N,QAAU3N,EAAejO,UAAU4b,MAEpD,IAAIA,EAAQ3N,EAAe2N,MAC3B,KAAiB,OAAVA,GAAgB,CACrB,MAAMyzD,EAA4BzzD,EAAM7mB,eAClCu6E,EAA2B1zD,EAAMmiC,oBACnCsxB,EAA4BF,IAC9BA,EAAyBE,GAEvBC,EAA2BH,IAC7BA,EAAyBG,GAEvBF,IACFpxB,GAAkBpiC,EAAMoiC,gBAE1BK,GAAoBziC,EAAMyiC,iBAC1BziC,EAAQA,EAAMC,QAEhB5N,EAAe+vC,eAAiBA,EAChC/vC,EAAeowC,iBAAmBA,MAC7B,CACL,IAAIziC,EAAQ3N,EAAe2N,MAC3B,KAAiB,OAAVA,GAAgB,CACrB,MAAMyzD,EAA4BzzD,EAAM7mB,eAClCu6E,EAA2B1zD,EAAMmiC,oBACnCsxB,EAA4BF,IAC9BA,EAAyBE,GAEvBC,EAA2BH,IAC7BA,EAAyBG,GAE3B1zD,EAAQA,EAAMC,SAIlB5N,EAAe8vC,oBAAsBoxB,EAGvC,SAASI,GAAmBthE,GAI1B,OAAa,CAKX,MAAMljB,EAAUkjB,EAAejO,UAE7BsO,GAAgBL,GAGlB,MAAM88C,EAAc98C,EAAehP,OAC7BuwE,EAAevhE,EAAe4N,QAEpC,IAAK5N,EAAeqN,UAAYN,MAAgBd,GAAU,CAsCxD,GArCezyB,OAEb+jF,IAA4B,GAI9B/O,GAAiBxuD,EACbtmB,MACEsmB,EAAe+xB,KAAO4c,IACxByb,GAAmBpqD,GAErBwuD,GAAiBiI,GACf35E,EACAkjB,EACAkkD,IAEElkD,EAAe+xB,KAAO4c,IAExB2b,GAAyCtqD,GAAgB,IAG3DwuD,GAAiBiI,GACf35E,EACAkjB,EACAkkD,IAGW1qE,OAEb+jF,IAA4B,GAE9BnzB,GAAcpqC,GACdghE,GAAyBhhE,EAAgBkkD,IAEvC9jD,KAGqB,OAAnBouD,GAEF,OAAOA,GAGT,GACkB,OAAhB1R,IAECA,EAAYzvC,UAAYN,MAAgBd,GACzC,CAIgC,OAA5B6wC,EAAYlN,cACdkN,EAAYlN,YAAc5vC,EAAe4vC,aAET,OAA9B5vC,EAAe6vC,aACc,OAA3BiN,EAAYjN,aACdiN,EAAYjN,WAAWF,WAAa3vC,EAAe4vC,aAErDkN,EAAYjN,WAAa7vC,EAAe6vC,YASxB7vC,EAAeqN,UAGjBnB,KACiB,OAA3B4wC,EAAYjN,WACdiN,EAAYjN,WAAWF,WAAa3vC,EAEpC88C,EAAYlN,YAAc5vC,EAE5B88C,EAAYjN,WAAa7vC,GAQ7B,GAJe+/D,KAA0BxiF,WACvCwiF,KAA0BxiF,UAAUikF,eAAexhE,GAGhC,OAAjBuhE,EAEF,OAAOA,EACF,GAAoB,OAAhBzkB,EAAsB,CAE/B98C,EAAiB88C,EACjB,SAGA,OAAO,KAEJ,CACL,GAAIpjE,MAAuBsmB,EAAe+xB,KAAO4c,GAAa,CAE5D2b,GAAyCtqD,GAAgB,GAGzD,IAAI+vC,EAAiB/vC,EAAe+vC,eAChCpiC,EAAQ3N,EAAe2N,MAC3B,KAAiB,OAAVA,GACLoiC,GAAkBpiC,EAAMoiC,eACxBpiC,EAAQA,EAAMC,QAEhB5N,EAAe+vC,eAAiBA,EAMlC,MAAMljD,EAAO8vE,GAAW38D,GAaxB,GAXIA,EAAeqN,UAAYZ,GAE7B49B,GAAoBrqC,GAEpBoqC,GAAcpqC,GAIdI,KAGW,OAATvT,EAWF,OAVAu9C,GAAcpqC,GACC+/D,KAA0BxiF,WACvCwiF,KAA0BxiF,UAAUikF,eAAexhE,GAOrDnT,EAAKwgB,WAAaP,GACXjgB,EAaT,GAVoB,OAAhBiwD,IAEFA,EAAYlN,YAAckN,EAAYjN,WAAa,KACnDiN,EAAYzvC,WAAaN,IAGZgzD,KAA0BxiF,WACvCwiF,KAA0BxiF,UAAUikF,eAAexhE,GAGhC,OAAjBuhE,EAEF,OAAOA,EACF,GAAoB,OAAhBzkB,EAAsB,CAE/B98C,EAAiB88C,EACjB,SAEA,OAAO,MAQb,OAAO,KAGT,SAAS2kB,GAAkBzhE,GAKzB,MAAMljB,EAAUkjB,EAAejO,UAe/B,IAAIlF,EAuCJ,OAnDAq9C,GAAelqC,GAEbK,GAAgBL,GAGHxmB,OACb6jF,GAAkC3rB,GAChC2rB,GACAr9D,IAKAtmB,MACEsmB,EAAe+xB,KAAO4c,IACxByb,GAAmBpqD,GAGrBnT,EAAO6kE,GAAU50E,EAASkjB,EAAgBkkD,IAC1ClkD,EAAeuvC,cAAgBvvC,EAAeovC,aAE1CpvC,EAAe+xB,KAAO4c,IAExB2b,GAAyCtqD,GAAgB,KAG3DnT,EAAO6kE,GAAU50E,EAASkjB,EAAgBkkD,IAC1ClkD,EAAeuvC,cAAgBvvC,EAAeovC,cAI9ChvC,KACIo9D,IAKFE,KAGWqC,KAA0BxiF,WACvCwiF,KAA0BxiF,UAAUmkF,YAAY1hE,GAGrC,OAATnT,IAEFA,EAAOy0E,GAAmBthE,IAG5BphB,GAAkB9B,QAAU,KAErB+P,EAGT,SAAS80E,GAASC,GAChB,GAAKA,EAOH,KAA0B,OAAnBpT,KAA4BqT,MACjCrT,GAAiBiT,GAAkBjT,SANrC,KAA0B,OAAnBA,IACLA,GAAiBiT,GAAkBjT,IAUzC,SAASsT,GAAWrsE,EAAiBmsE,GACnCtqF,aACGsmF,GACD,2GAIFllB,KAEAklB,IAAY,EACZ,MAAMmE,EAAqBllF,GAAuBC,QAClDD,GAAuBC,QAAUwnE,GAEjC,MAAMx9D,EAAiB2O,EAAKi9C,2BAI5B,IACE5rD,IAAmBo9D,IACnBzuD,IAASooE,IACU,OAAnBrP,MAGA0P,KACAL,GAAWpoE,EACXyuD,GAA2Bp9D,EAC3B0nE,GAAiB/d,GACfotB,GAAS/gF,QACT,MAGF2Y,EAAK68C,4BAA8BjF,GAE/BzzD,MAAwB,CAI1B,MAAMooF,EAAiC,IAAI/6B,IAiB3C,GAhBAxxC,EAAKs9C,sBAAsB1wD,QACzB,CAACs+E,EAAuBC,KAClBA,GAA2B95E,GAC7B65E,EAAsBt+E,QAAQw+E,GAC5BmB,EAAa76B,IAAI05B,MAUzBprE,EAAKq9C,qBAAuBkvB,EAExBA,EAAa/3C,KAAO,EAAG,CACzB,MAAMo2C,EAAangF,mBAAgBpD,QACnC,GAAmB,OAAfujF,EAAqB,CACvB,MAAMC,EAAWC,GACfz5E,EACA2O,EAAKo9C,qBAEP,IACEwtB,EAAW4B,cAAcD,EAAc1B,GACvC,MAAOvoF,GAIF0oF,KACHA,IAAoB,EACpBC,GAAiB3oF,MAQ7B,IAAImnF,EAAsC,KACtCtlF,OAGFslF,EAAmBj/E,qBAAkBnD,QACrCmD,qBAAkBnD,QAAU2Y,EAAKq9C,sBAGnC,IAAIovB,GAAW,EAIf,KjBz7BK,SAA4B1T,GACjC,GAAIp1E,KAAqB,CAEvB,GADA4uD,GAAewmB,GACV7mB,GACH,OAEFW,GAA+B,EAG/BM,GAAU,+BAEVoB,MiB46BFm4B,CAAmB3T,MAEhB,CACD,IACEmT,GAASC,GACT,MAAOQ,GAMP,IAAIC,EAMJ,GAXAzP,KACAhO,KAKeprE,OACb6oF,EAAY9E,GACZA,IAA4B,GAGP,OAAnB/O,GAEF0T,GAAW,EACX1G,GAAgB4G,OACX,CAaL,GAZI1oF,MAAuB80E,GAAez8B,KAAO4c,IAG/C2b,GAAyCkE,IAAgB,GAMxDoF,KAGYp6E,MACT6oF,EAAW,CAEb/E,GADgC9O,GACG4T,EAAaR,GAOpDtqF,YACqB,OAAnBk3E,GACA,wJAKF,MAAMyN,EAAqBzN,GAC3B,IAAI1R,EAAcmf,EAAYjrE,OAC9B,GAAoB,OAAhB8rD,EASG,CACLkf,GACEvmE,EACAqnD,EACAmf,EACAmG,EACAle,IAEFsK,GAAiB8S,GAAmBrF,GACpC,SAXAiG,GAAW,EACX1G,GAAgB4G,IActB,MAeF,GAZIxoF,OAEFqG,qBAAkBnD,QAAUoiF,GAI9BtB,IAAY,EACZ/gF,GAAuBC,QAAUilF,EACjCnP,KACAhO,KAGIsd,EAAU,CAaZ,OAXA13B,GAAkBC,IADM,GAExBA,GAAgB,KhBnyChBK,IAAS,EACTH,GAAWnyD,OAAS,EACpBoyD,GAAWpyD,OAAS,EgByyCpBqlF,GAAW,UA8jBf,SAAiBpoE,GACfA,EAAK88C,aAAe,KA9jBlB+vB,CAAQ7sE,GAIV,GAAuB,OAAnB+4D,GAAyB,CAS3B,OAHAhkB,GAAkBC,IADM,GAExBA,GAAgB,UAolBpB,SAAiBh1C,GACfA,EAAK88C,aAAe,KAplBlBgwB,CAAQ9sE,GAMV+0C,GAAkBC,IADM,GAExB,MAAM+3B,EAAqB/sE,EAAK3Y,QAAQiV,UAaxC,GAZAza,YACyB,OAAvBkrF,EACA,sHAOF3E,GAAW,KACXpzB,GAAgB,KAEZgyB,GAAoB,CAEtB,GPxyCG,SACLhnE,EACAgtE,GAEA,MAAMxwB,EAAoBx8C,EAAKw8C,kBACzBE,EAAsB18C,EAAK08C,oBAC3BC,EAAmB38C,EAAK28C,iBAC9B,OACGH,IAAsB5E,IACrB4E,EAAoBwwB,GACrBtwB,IAAwB9E,IACvB8E,EAAsBswB,GACvBrwB,IAAqB/E,IAAU+E,EAAmBqwB,EO4xC/CC,CAAqBjtE,EAAM3O,GAAiB,CAgB9C,OAVAgvD,GAA2BrgD,EAAM3O,QAGjC67E,GACEltE,EACA+sE,EAJ8B17E,EACL2O,EAAK3O,gBAM7B,GAGE,IAKJ2O,EAAKnN,UACNs5E,EACA,CACAnsE,EAAKnN,UAAW,EAChB,MAAMs6E,EAA2BntE,EAAKi9C,2BAA6B5rD,EAC7D03E,EAAsB/oE,EAAK3O,eAAiBymD,GAQlD,YAPAo1B,GACEltE,EACA+sE,EACAI,EACApE,GACC,IAMP,GAAIoD,IAA6C,IAAjC9D,GAAoC,CAElD,MAAM8E,EAA0B97E,EAChCgvD,GAA2BrgD,EAAMmtE,GAKjC,MAIMC,EAA2Bh1B,GAJFqI,GAC7BzgD,EACA3O,IAGE+7E,EAA2B/E,KAC7BA,GAA8B+E,GAOhC,MAAMC,EAAgBj1B,GAAmB0K,MACzC,IAAIwqB,EAAiBjF,GAA8BgF,EAanD,OAZAC,EAAiBA,EAAiB,EAAI,EAAIA,OAK1CJ,GACEltE,EACA+sE,EACAI,EAJyBntE,EAAK3O,eAM9Bi8E,IAudN,SACEttE,EACA88C,EACAzrD,GAEA2O,EAAK68C,4BAA8BxrD,EACnC2O,EAAK88C,aAAeA,EAvdpBywB,CAAWvtE,EAAM+sE,EAAoB17E,GAGvC,SAASuxE,GAAwB4D,EAAoB14E,GACnD,MAAMuD,EAAiBymD,GACvB,IAAI3tC,EAAQq8D,EAAYjrE,OACxB,KAAiB,OAAV4O,GAAgB,CACrB,OAAQA,EAAM/jB,KACZ,KAAKqT,EACH,MAAMyoD,EAAO/3C,EAAMhkB,KACbwc,EAAWwH,EAAM1R,UACvB,GAC2C,oBAAlCypD,EAAKmE,0BAC2B,oBAA/B1jD,EAASsjE,oBACdgB,GAAmCtkE,GACtC,CASA,OAFAugD,GAAc/4C,EALC67D,GACb77D,EAFgB21D,GAAoBhyE,EAAO04E,GAI3Cn1E,SAGF8xD,GAAah5C,EAAO9Y,GAGtB,MACF,KAAKsI,EAKH,OAFAupD,GAAc/4C,EADC27D,GAAsB37D,EADnB21D,GAAoBhyE,EAAO04E,GACUn1E,SAEvD8xD,GAAah5C,EAAO9Y,GAIxB8Y,EAAQA,EAAM5O,OAGhB,GAAIirE,EAAYpgF,MAAQuT,EAAU,CAGhC,MAAM6zE,EAAYhH,EAGlBtjB,GAAcsqB,EADC1H,GAAsB0H,EADnB1N,GAAoBhyE,EAAO0/E,GACcn8E,IAE3D8xD,GAAaqqB,EAAWn8E,IAI5B,SAASy5E,GACPz5E,EACA+rD,GAGA,OAAwB,IAAjB/rD,EAAwB+rD,EAiBjC,SAASyF,GAA0BvK,EAA6BnuC,GAC9D,MAAM3Y,EAAgBi8E,8CAEtB,IAAIp8E,EACJ,IAAK8Y,EAAMmyB,KAAO0c,MAAoBD,GAEpC1nD,EAAiBymD,QACZ,GAAIqwB,KAAcz1B,GAEvBrhD,EAAiBo9D,OACZ,CACL,OAAQj9D,GACN,KAAKk8E,8BACHr8E,EAAiBymD,GACjB,MACF,KAAK61B,iCACHt8E,EZ//CD,SAAsCinD,GAC3C,OAAOD,GACLC,EACAO,GACAC,IY2/CqB80B,CAA6Bt1B,GAC9C,MACF,KAAK4xB,2BAEH74E,EAAiBunD,GAAuBN,GACxC,MACF,KAAKu1B,wBACL,KAAKC,yBACHz8E,EAAiBwmD,GACjB,MACF,QACEh2D,aACE,EACA,gGAOW,OAAbumF,IAAqB/2E,IAAmBo9D,KAC1Cp9D,GAAkB,GAgBtB,OAPEG,IAAkBm8E,mCACjBI,KAAmDn2B,IAClDvmD,EAAiB08E,MAEnBA,GAAiD18E,GAG5CA,EAGT,SAAS01E,GACP/mE,EACA6mE,EACAvmB,GAIEumB,GAAqB,GACrBwB,GAA8BxB,IAE9BwB,GAA8BxB,GAQlC,SAASP,GACPtmE,EACAnZ,EACAmnF,GAKA,MAAMpxB,EAAY58C,EAAK48C,UAOvB,GANkB,OAAdA,GAGFA,EAAU/K,OAAOhrD,GAGF,OAAbuhF,IAAqB3Z,KAA6Buf,EAGpD5F,GAAW,UAGX,GP5gDG,SACLpoE,EACA3O,GAEA,MAAMorD,EAAwBz8C,EAAKy8C,sBAC7BC,EAAsB18C,EAAK08C,oBACjC,OACED,IAA0B7E,IAC1BvmD,GAAkBorD,GAClBprD,GAAkBqrD,EOmgDduxB,CAAyBjuE,EAAMguE,GAAW,EPn9C3C,SACLhuE,EACAkuE,GAEAluE,EAAKnN,UAAW,EAKhB,MAAM8pD,EAAmB38C,EAAK28C,kBAC1BA,IAAqB/E,IAAU+E,EAAmBuxB,KACpDluE,EAAK28C,iBAAmBuxB,GAE1B9tB,GAA+B8tB,EAAYluE,GOw8CvCmuE,CAAwBnuE,EAAMguE,GAC9B,MAAMjF,EAAqB/oE,EAAK3O,eAC5B03E,IAAuBnxB,IACzBoxB,GAAYhpE,EAAM+oE,IAM1B,SAAStD,GAAsB2I,EAAsBvnF,GAMnD,IAAI0+E,EACJ,GAAInhF,KACF,OAAQgqF,EAAchoF,KACpB,KAAKiU,GACHkrE,EAAa6I,EAAc31E,UAC3B,MACF,KAAKiC,GACH6qE,EAAa6I,EAAcp0B,cAC3B,MACF,QACEn4D,aACE,EACA,gFAKN0jF,EAAa6I,EAAc31E,UAEV,OAAf8sE,GAGFA,EAAW1zB,OAAOhrD,GAGpB,MACMwnF,EAAYxrB,GADEC,KACqCsrB,GACnDpuE,EAAOsuE,GAAmBF,EAAeC,GAC/C,GAAa,OAATruE,EAAe,CACjBmgD,GAAyBngD,EAAMquE,GAC/B,MAAMtF,EAAqB/oE,EAAK3O,eAC5B03E,IAAuBnxB,IACzBoxB,GAAYhpE,EAAM+oE,IAKxB,SAASuF,GAAmBnkE,EAAc9Y,GAItC,GjBh/CE1N,OACE+uD,KACFC,IAAoC,GAGnB,OAAjBH,IACiB,uBAAjBA,IACiB,8BAAjBA,KAEAI,IAAmC,IiBu+CjCzoC,EAAM/jB,MAAQqT,EAAgB,CAChC,MAAMkJ,EAAWwH,EAAM1R,UACvB+uE,GAAwB7kE,GAKxBwH,EAAM9Y,eAAiBA,IACzB8Y,EAAM9Y,eAAiBA,GAEzB,IAAIiL,EAAY6N,EAAM7N,UACJ,OAAdA,GAAsBA,EAAUjL,eAAiBA,IACnDiL,EAAUjL,eAAiBA,GAG7B,IAAI6J,EAAOiP,EAAM5O,OACbyE,EAAO,KACX,GAAa,OAAT9E,GAAiBiP,EAAM/jB,MAAQuT,EACjCqG,EAAOmK,EAAM1R,eAEb,KAAgB,OAATyC,GAAe,CAgBpB,GAfAoB,EAAYpB,EAAKoB,UACbpB,EAAKm/C,oBAAsBhpD,GAC7B6J,EAAKm/C,oBAAsBhpD,EAEX,OAAdiL,GACAA,EAAU+9C,oBAAsBhpD,IAEhCiL,EAAU+9C,oBAAsBhpD,IAGpB,OAAdiL,GACAA,EAAU+9C,oBAAsBhpD,IAEhCiL,EAAU+9C,oBAAsBhpD,GAEd,OAAhB6J,EAAKK,QAAmBL,EAAK9U,MAAQuT,EAAU,CACjDqG,EAAO9E,EAAKzC,UACZ,MAEFyC,EAAOA,EAAKK,OAIhB,GAAIpX,MACW,OAAT6b,EAAe,CACjB,MAAMusE,EAAe/hF,qBAAkBnD,QACvC,GAAIklF,EAAa/3C,KAAO,EAAG,CACzB,MAAM8oB,EAAwBt9C,EAAKs9C,sBAC7BixB,EAAsBjxB,EAAsBl7C,IAAI/Q,GAC3B,MAAvBk9E,EACFhC,EAAa3/E,QAAQw+E,IACdmD,EAAoBz6B,IAAIs3B,IAE3BA,EAAYC,UAGdkD,EAAoB78B,IAAI05B,MAG1B9tB,EAAsBn7C,IAAI9Q,EAAgB,IAAImgD,IAAI+6B,IAGlDA,EAAa3/E,QAAQw+E,IACnBA,EAAYC,aAIhB,MAAMT,EAAangF,mBAAgBpD,QACnC,GAAmB,OAAfujF,EAAqB,CACvB,MAAMC,EAAWC,GACfz5E,EACA2O,EAAKo9C,qBAEPwtB,EAAW4D,gBAAgBjC,EAAc1B,KAKjD,OAAO7qE,EAwBT,SAASmjD,GAAah5C,EAAc9Y,GAClC,MAAM2O,EAAOsuE,GAAmBnkE,EAAO9Y,GACvC,GAAa,OAAT2O,EAAJ,CA2BA,IATGmoE,IACD1Z,KAA6B7W,IAC7BvmD,EAAiBo9D,KAGjBzZ,GAAgB7qC,EAChBs+D,MAEFtoB,GAAyBngD,EAAM3O,IAI5B82E,IACDz1B,IAEA01B,KAAapoE,EACb,CAEAgpE,GAAYhpE,EADeA,EAAK3O,gBAG9Bo9E,GAAoBC,KAEtBD,GAAoB,EACpB5sF,aACE,EACA,0NAzCA,OAAQsoB,EAAM/jB,KACZ,KAAKqT,EACH8tE,GAA2Bp9D,GAAO,GAClC,MACF,KAAK3Q,EACL,KAAKW,EACL,KAAKG,GACL,KAAKC,GACHgtE,GAA2Bp9D,GAAO,IAyC5C,SAASwkE,GACPlzE,EACAzZ,EACAC,EACAC,EACAC,GAEA,OAAO8nF,oCAAgByD,8BAAmB,IACjCjyE,EAAGzZ,EAAGC,EAAGC,EAAGC,IAzlDR4B,OACb6jF,GAAkC,KAClCE,IAA4B,EAC5BC,IAA8B,EAC9BC,GAAsB,KACtBH,GAAmB,CACjB+G,EACAjC,EACAR,KAEA,GACkB,OAAhBQ,GACuB,kBAAhBA,GACqB,oBAArBA,EAAYhT,KASrB,GAAwC,OAApCiO,GAAJ,CAcA,OALA3rB,GACE2yB,EACAhH,IAGMgH,EAAiBxoF,KACvB,KAAKuT,EACH+xD,GAAiBkjB,GACjB1N,GAA+B0N,GAC/B,MACF,KAAK/0E,EACHmyD,GAAe4iB,GACf,MACF,KAAKn1E,EAEC8+D,GADcqW,EAAiBzoF,OAEjC86E,GAAiB2N,GAEnB,MAEF,KAAKh1E,EACH8xD,GAAiBkjB,GACjB,MACF,KAAK10E,EACHyjE,GAAYiR,GAShB,GALA7G,IAA8B,EAC9BC,GAAsB2E,EACtBv4E,EAAsB,KAAM83E,GAAU,KAAMC,GAC5CpE,IAA8B,EAC9BC,GAAsB,KAClB3zE,IAAkB,CACpB,MAAMw6E,EAAcv6E,IACpB,GAAmB,MAAfu6E,GAAsC,MAAflC,EACzB,IAGMkC,EAAYl7E,mBAEbg5E,EAAkBh5E,kBAAmB,GAExC,MAAOC,UAOXmlE,GAAiB6V,OAzDjB9rF,aACE,EACA,oGA0DNmlF,GAAuB,KACrB,MAAMD,KA4gDV,IAII8G,GAJAC,GAAuC,KACvCC,GAAsC,KAEtCC,GAAyCr3B,GAEzC0b,IAAuB,EACvB4b,GAAoC,KACpCC,GAA4Cv3B,GAC5Cm2B,GAAiEn2B,GACjEozB,IAA6B,EAC7BC,GAA+B,KAE/B1X,IAA6B,EAC7B6b,IAA+B,EAE/BC,GAAwC,KAExCC,GAA8B/gF,0BAC9BghF,GAAsCr3B,GACxCo3B,IAEEE,GAAuCD,GAG3C,MAAMb,GAAsB,GAC5B,IAAID,GAA4B,EAC5BgB,GAAqD,KAEzD,SAASC,KACP,MAAMrC,EAAgB9+E,0BAAQ+gF,GAC9BC,GAAsBr3B,GAAmBm1B,GAG3C,SAASsC,GACP3vE,EACA3O,GAEA,GAAI49E,KAA2Br3B,GAAQ,CAErC,GAAIvmD,EAAiB49E,GAEnB,OAEmB,OAAfH,IAGF5+B,mCAAuB4+B,SjB3rDzBnrF,MACEuuD,KAAuBa,KACzBA,IAAuB,EACvBI,GAAU,oCiBgsDd87B,GAAyB59E,EACzB,MAAMu+E,EAAYrhF,0BAAQ+gF,GAEpB19E,EADmBwmD,GAAmB/mD,GACTu+E,EACnCd,GAAa9+B,qCAAyB6/B,GAAkB,CAACj+E,YAoB3D,SAASs7E,GACPltE,EACA88C,EACAqwB,EACApE,EACAuE,GAEAttE,EAAK3O,eAAiB03E,EACC,IAAnBuE,GAAyBlB,KAIlBkB,EAAiB,IAE1BttE,EAAK+8C,cAAgBnN,GACnBkgC,GAAUnzD,KAAK,KAAM3c,EAAM88C,EAAcqwB,GACzCG,KANFttE,EAAK68C,4BAA8BswB,EACnCntE,EAAK88C,aAAeA,GAcxB,SAASgzB,GAAU9vE,EAAM88C,EAAcqwB,GAErCntE,EAAK68C,4BAA8BswB,EACnCntE,EAAK88C,aAAeA,EAIpB4yB,KACAF,GAAuBD,GACvBQ,GAAU/vE,EAAMmtE,GAQlB,SAASrqB,KAoBP,OAAIwQ,GAEKkc,IAGTQ,KAEEb,KAA8Bv3B,IAC9Bu3B,KAA8Bt3B,IAI9B63B,KACAF,GAAuBD,GAChBC,IAOFA,IAKT,SAASxG,GAAYhpE,EAAiB3O,IA4BtC,SAA2B2O,EAAiB3O,GAG1C,GAA+B,OAA3B2O,EAAKm9C,kBAEPn9C,EAAK3O,eAAiBA,EACI,OAAtB29E,IACFD,GAAqBC,GAAoBhvE,EACzCA,EAAKm9C,kBAAoBn9C,IAEzBgvE,GAAkB7xB,kBAAoBn9C,EACtCgvE,GAAoBhvE,EACpBgvE,GAAkB7xB,kBAAoB4xB,QAEnC,CAEL,MAAMhiB,EAA0B/sD,EAAK3O,eACjCA,EAAiB07D,IAEnB/sD,EAAK3O,eAAiBA,IA9C1B4+E,CAAkBjwE,EAAM3O,GACpBiiE,KAMAC,GAEE6b,KAGFF,GAAkBlvE,EAClBmvE,GAA4Br3B,GAC5Bo4B,GAAkBlwE,EAAM83C,IAAM,IAM9BzmD,IAAmBymD,GACrBmxB,KAEA0G,GAAmC3vE,EAAM3O,IA4B7C,SAAS2+E,KACP,IAAIG,EAAsBv4B,GACtBw4B,EAAsB,KAC1B,GAA0B,OAAtBpB,GAA4B,CAC9B,IAAIqB,EAAwBrB,GACxBhvE,EAAO+uE,GACX,KAAgB,OAAT/uE,GAAe,CACpB,MAAM+sD,EAA0B/sD,EAAK3O,eACrC,GAAI07D,IAA4BnV,GAAQ,CAWtC,GALA/1D,YAC4B,OAA1BwuF,GAAwD,OAAtBrB,GAClC,8GAGEhvE,IAASA,EAAKm9C,kBAAmB,CAEnCn9C,EAAKm9C,kBAAoB,KACzB4xB,GAAqBC,GAAoB,KACzC,MACK,GAAIhvE,IAAS+uE,GAAoB,CAEtC,MAAM33E,EAAO4I,EAAKm9C,kBAClB4xB,GAAqB33E,EACrB43E,GAAkB7xB,kBAAoB/lD,EACtC4I,EAAKm9C,kBAAoB,SACpB,IAAIn9C,IAASgvE,GAAmB,CAErCA,GAAoBqB,EACpBrB,GAAkB7xB,kBAAoB4xB,GACtC/uE,EAAKm9C,kBAAoB,KACzB,MAEAkzB,EAAsBlzB,kBAAoBn9C,EAAKm9C,kBAC/Cn9C,EAAKm9C,kBAAoB,KAE3Bn9C,EAAOqwE,EAAsBlzB,sBACxB,CAML,GALI4P,EAA0BojB,IAE5BA,EAAsBpjB,EACtBqjB,EAAsBpwE,GAEpBA,IAASgvE,GACX,MAEF,GAAImB,IAAwBr4B,GAG1B,MAEFu4B,EAAwBrwE,EACxBA,EAAOA,EAAKm9C,oBAKlB+xB,GAAkBkB,EAClBjB,GAA4BgB,EAM9B,IYvkEIG,GACAC,GZskEAC,IAAoB,EACxB,SAASpE,KACP,QAAIoE,MAGAC,oCACFD,IAAW,GACJ,GAKX,SAASX,KACP,IACE,IAAKzD,MAMwB,OAAvB2C,GAA6B,CAC/BW,KACA,IAAI1vE,EAAkB+uE,GACtB,GACEnuB,GAA0B5gD,EAAMuvE,IAEhCvvE,EAAQA,EAAKm9C,wBACNn9C,IAAS+uE,IAGtB2B,GAAY94B,IAAQ,GAjBtB,QAmBE44B,IAAW,GAIf,SAASvH,KACPyH,GAAY54B,IAAM,GAGpB,SAAS44B,GAAYC,EAAmCxE,GAKtD,GAFA6D,KAEI7D,EAAU,CAIZ,GAHAuD,KACAF,GAAuBD,GAEnB5rF,KAAqB,EjBp9DtB,SACLitF,EACAv/E,GAEA,GAAI1N,MACEuuD,GAAoB,CACtBa,IAAuB,EAEvBK,GACG,sDAAqD/hD,QACtD,kCAHcu/E,EAAY,mCAAqC,OiBg9DjEC,CAFkB1B,GAA4BI,GAC9Bn3B,GAAmB+2B,KAIrC,KACsB,OAApBD,IACAC,KAA8Bv3B,IAC9B+4B,GAAqBxB,MACnBqB,IAAYjB,GAAsBJ,KAEpCe,GACEhB,GACAC,GACAI,GAAsBJ,IAExBa,KACAN,KACAF,GAAuBD,QAGzB,KACsB,OAApBL,IACAC,KAA8Bv3B,IAC9B+4B,GAAqBxB,IAErBe,GAAkBhB,GAAiBC,IAA2B,GAC9Da,KAQA7D,IACF8C,GAAyBr3B,GACzBk3B,GAAa,MAGXK,KAA8Bv3B,IAChC+3B,GACIT,EACFC,IAwBN,WAIE,GAHAV,GAAoB,EACpBgB,GAAmC,KAEV,OAArBJ,GAA2B,CAC7B,MAAMyB,EAAUzB,GAChBA,GAAmB,KACnB,IAAK,IAAI/iF,EAAI,EAAGA,EAAIwkF,EAAQ/tF,OAAQuJ,IAAK,CACvC,MAAMykF,EAAQD,EAAQxkF,GACtB,IACEykF,EAAMC,cACN,MAAO1uF,GACF0oF,KACHA,IAAoB,EACpBC,GAAiB3oF,KAMzB,GAAI0oF,GAAmB,CACrB,MAAM1oF,EAAQ2oF,GAGd,MAFAA,GAAiB,KACjBD,IAAoB,EACd1oF,GA3CR2uF,GAGF,SAASlB,GAAU/vE,EAAiB3O,GAClCxP,aACGyxE,GACD,mIAMF4b,GAAkBlvE,EAClBmvE,GAA4B99E,EAC5B6+E,GAAkBlwE,EAAM3O,GAAgB,GAExC43E,KA+BF,SAASiH,GACPlwE,EACA3O,EACA86E,GAWA,GATAtqF,aACGyxE,GACD,kHAIFA,IAAc,EAGT6Y,EA2BE,CAEL,IAAIrvB,EAAe98C,EAAK88C,aACxB,GAAqB,OAAjBA,EAEFo0B,GAAalxE,EAAM88C,EAAczrD,OAC5B,CACL2O,EAAK88C,aAAe,KAGpB,MAAMC,EAAgB/8C,EAAK+8C,cACvBA,IAAkBjN,KACpB9vC,EAAK+8C,cAAgBjN,GAErBD,GAAckN,IAEhBsvB,GAAWrsE,EAAMmsE,GACjBrvB,EAAe98C,EAAK88C,aACC,OAAjBA,IAGGsvB,KAMHpsE,EAAK88C,aAAeA,EAJpBo0B,GAAalxE,EAAM88C,EAAczrD,SAlD1B,CAMb,IAAIyrD,EAAe98C,EAAK88C,aACxB,GAAqB,OAAjBA,EAEFo0B,GAAalxE,EAAM88C,EAAczrD,OAC5B,CACL2O,EAAK88C,aAAe,KAGpB,MAAMC,EAAgB/8C,EAAK+8C,cACvBA,IAAkBjN,KACpB9vC,EAAK+8C,cAAgBjN,GAErBD,GAAckN,IAEhBsvB,GAAWrsE,EAAMmsE,GACjBrvB,EAAe98C,EAAK88C,aACC,OAAjBA,GAEFo0B,GAAalxE,EAAM88C,EAAczrD,IAoCvCiiE,IAAc,EAGhB,SAAS4d,GACPlxE,EACA88C,EACAzrD,GAGA,MAAM6rD,EAAal9C,EAAKk9C,WACxB,GAAmB,OAAfA,GAAuBA,EAAWi0B,iBAAmB9/E,IAC9B,OAArBg+E,GACFA,GAAmB,CAACnyB,GAEpBmyB,GAAiBr/E,KAAKktD,GAEpBA,EAAWk0B,QAKb,OAFApxE,EAAK88C,aAAeA,OACpB98C,EAAK3O,eAAiBumD,IAM1B53C,EAAK88C,aAAe,KAIhB98C,IAASyvE,GAGXhB,MAGAgB,GAAmCzvE,EACnCyuE,GAAoB,GAEtBxE,oCAAgByD,8BAAmB,KACjCxE,GAAWlpE,EAAM88C,KAIrB,SAASipB,GAAgBzjF,GACvBT,YACsB,OAApBqtF,GACA,qGAKFA,GAAgB79E,eAAiBumD,GAC5BozB,KACHA,IAAoB,EACpBC,GAAiB3oF,GAMrB,SAASykB,GAAqBtL,EAAiBzZ,GAC7C,MAAMqvF,EAA4B9d,GAClCA,IAAoB,EACpB,IACE,OAAO93D,EAAGzZ,GADZ,QAGEuxE,GAAoB8d,EACf9d,IAAsBD,IACzB2V,MAON,SAASqI,GAAuB71E,EAAiBzZ,GAC/C,GAAIuxE,KAAsB6b,GAAqB,CAC7CA,IAAsB,EACtB,IACE,OAAO3zE,EAAGzZ,GADZ,QAGEotF,IAAsB,GAG1B,OAAO3zE,EAAGzZ,GAqBZ,SAASuvF,GAA4B91E,EAAiBzZ,EAAMC,GAMvDsxE,IACAD,IACDya,KAAmDn2B,KAGnD84B,GAAY3C,IAAgD,GAC5DA,GAAiDn2B,IAEnD,MAAMy5B,EAA4B9d,GAClCA,IAAoB,EACpB,IACE,OAAO0W,oCAAgB0D,iCAAsB,IACpClyE,EAAGzZ,EAAGC,IAFjB,QAKEsxE,GAAoB8d,EACf9d,IAAsBD,IACzB2V,MY35EN,SAASuI,GACPC,GAEA,IAAKA,EACH,OAAOl8B,GAGT,MAAMprC,EAAQu4C,GAAY+uB,GACpB56B,E3B0KR,SAAoC1sC,GAGlCtoB,YACEg2B,GAAe1N,IAAUA,EAAM/jB,MAAQqT,EACvC,iIAIF,IAAIyB,EAAOiP,EACX,EAAG,CACD,OAAQjP,EAAK9U,KACX,KAAKuT,EACH,OAAOuB,EAAKzC,UAAUvG,QACxB,KAAKuH,EAEH,GAAIq8C,GADc56C,EAAK/U,MAErB,OAAO+U,EAAKzC,UAAU0+C,0CAExB,MAGJj8C,EAAOA,EAAKK,aACI,OAATL,GACTrZ,aACE,EACA,kH2BpMoB6vF,CAA2BvnE,GAEjD,GAAIA,EAAM/jB,MAAQqT,EAAgB,CAChC,MAAMm8C,EAAYzrC,EAAMhkB,KACxB,GAAIoyE,GAAwB3iB,GAC1B,OAAOgB,GAAoBzsC,EAAOyrC,EAAWiB,GAIjD,OAAOA,EAkDF,SAAS86B,GACdppF,EACA+nD,EACAmhC,EACApgF,EACAF,GAGA,MAAM9J,EAAUipD,EAAUjpD,QAGpBijF,KAA0BxiF,YACF,OAAtBT,EAAQiV,UACVguE,KAA0BxiF,UAAU8pF,iBAAiBthC,GAChC,OAAZ/nD,EACT+hF,KAA0BxiF,UAAU+pF,mBAAmBvhC,GAEvDg6B,KAA0BxiF,UAAUgqF,kBAAkBxhC,IAK5D,MAAMp+C,EAAUs/E,GAAqBC,GAOrC,OAN0B,OAAtBnhC,EAAUp+C,QACZo+C,EAAUp+C,QAAUA,EAEpBo+C,EAAU0M,eAAiB9qD,EAzE/B,SACE7K,EACAkB,EACA8I,EACAF,GAI+B,WAA3Bw2E,IAC6B,OAA7BoK,IACCzB,KAEDA,IAA4B,EAC5BxtF,aACE,EACA,6NAIAoD,aAAiB6rF,GAAyB5rF,OAAS,YAKzD,MAAM48D,EAASC,GAAa3xD,GAoB5B,OAjBA0xD,EAAOH,QAAU,CAACr6D,WAGD,QADjB4I,OAAwB5O,IAAb4O,EAAyB,KAAOA,KAEzCrO,YACsB,oBAAbqO,EACP,sGAEAA,GAEF4xD,EAAO5xD,SAAWA,GAGpB8xD,KACAC,GAAc77D,EAAS07D,GACvBI,GAAa97D,EAASgK,GAEfA,EAgCA2gF,CAAmB3qF,EAASkB,EAAS8I,EAAgBF,GA4FvD,SAAS8gF,GACd1pF,EACA+nD,EACAmhC,EACAtgF,GAEA,MAAM9J,EAAUipD,EAAUjpD,QAG1B,OAAOsqF,GACLppF,EACA+nD,EACAmhC,EAJqB5uB,GADHC,KAC0Cz7D,GAM5D8J,GAkBG,SAAS+gF,GACd5hC,GAEA,MAAM6hC,EAAiB7hC,EAAUjpD,QACjC,IAAK8qF,EAAej6D,MAClB,OAAO,KAET,OAAQi6D,EAAej6D,MAAM9xB,KAC3B,KAAKyT,EAEL,QACE,OAAOs4E,EAAej6D,MAAMzf,WAQ3B,SAAS25E,GACdjoE,GAEA,MAAMkoE,E5E/ED,SAA2C/5D,GAChD,MAAMC,EAAgBR,GAA8BO,GACpD,IAAKC,EACH,OAAO,KAIT,IAAIrd,EAAcqd,EAClB,OAAa,CACX,GAAIrd,EAAK9U,MAAQyT,GAAiBqB,EAAK9U,MAAQ0T,EAC7C,OAAOoB,EACF,GAAIA,EAAKgd,OAAShd,EAAK9U,MAAQwT,EACpCsB,EAAKgd,MAAM3c,OAASL,EACpBA,EAAOA,EAAKgd,UAFP,CAKP,GAAIhd,IAASqd,EACX,OAAO,KAET,MAAQrd,EAAKid,SAAS,CACpB,IAAKjd,EAAKK,QAAUL,EAAKK,SAAWgd,EAClC,OAAO,KAETrd,EAAOA,EAAKK,OAEdL,EAAKid,QAAQ5c,OAASL,EAAKK,OAC3BL,EAAOA,EAAKid,SAId,OAAO,K4EiDWm6D,CAAkCnoE,GACpD,OAAkB,OAAdkoE,EACK,KAEFA,EAAU55E,UA1PjB63E,IAA4B,EAC5BC,GAAmC,GA4PrC,IAAIgC,GAAgB,KAEP,CACX,MAAMC,EAAkB,CACtBC,EACAnnF,EACAonF,EACA5kF,KAEA,GAAI4kF,GAAOpnF,EAAKvI,OACd,OAAO+K,EAET,MAAMP,EAAMjC,EAAKonF,GACXC,EAAUvgF,MAAM2E,QAAQ07E,GAAOA,EAAIpgF,QAAU,IAAIogF,GAGvD,OADAE,EAAQplF,GAAOilF,EAAgBC,EAAIllF,GAAMjC,EAAMonF,EAAM,EAAG5kF,GACjD6kF,GAGHC,EAAc,CAClBH,EACAnnF,EACAwC,IAEO0kF,EAAgBC,EAAKnnF,EAAM,EAAGwC,GAIvCykF,GAAgB,CAACpoE,EAAc7e,EAA8BwC,KAC3Dm1D,KACA94C,EAAMwvC,aAAei5B,EAAYzoE,EAAM2vC,cAAexuD,EAAMwC,GACxDqc,EAAM7N,YACR6N,EAAM7N,UAAUq9C,aAAexvC,EAAMwvC,cAEvCwJ,GAAah5C,EAAO2tC,K,wBCzSxB,MAAM3uD,GAAoBzE,KAAqByE,kBAE/C,IAAI0pF,GACAnxB,GACAoxB,IAAmC,EAiHvC,SAASC,GAAW/yE,GAClB,MAAM3O,Ebu2CR,WAEE,IAAIiR,EAASs2C,GADOkK,MASpB,OAPIxgD,GAAU4lE,KAIZ5lE,EAAS4lE,GAA4B,GAEvCA,GAA4B5lE,EACrB4lE,Gaj3CgB8K,GACvBnhF,KAAKs/E,gBAAkB9/E,EACvBQ,KAAKohF,MAAQjzE,EACbnO,KAAKqhF,MAAQ,KACbrhF,KAAKshF,WAAa,KAClBthF,KAAKuhF,cAAe,EACpBvhF,KAAKwhF,cAAe,EACpBxhF,KAAKyhF,UAAY,KACjBzhF,KAAKu/E,QAAS,EAsHhB,SAASmC,KACP1hF,KAAKshF,WAAa,KAClBthF,KAAK2hF,YAAa,EAGlB3hF,KAAK4hF,UAAY5hF,KAAK4hF,UAAU92D,KAAK9qB,MAmCvC,SAAS6hF,GACPpjC,EACA6L,EACAC,GAEA,MAAMp8C,ED/FD,SACLgc,EACAmgC,EACAC,GAEA,OAAOF,GAAgBlgC,EAAemgC,EAAcC,GC0FvCu3B,CAAgBrjC,EAAW6L,EAAcC,GACtDvqD,KAAK+hF,cAAgB5zE,EAoFvB,SAAS6zE,GAAiB34E,GACxB,SACEA,GACCA,EAAKwN,WAAaR,IACjBhN,EAAKwN,WAAaL,IAClBnN,EAAKwN,WAAaJ,KACjBpN,EAAKwN,WAAaN,IACE,iCAAnBlN,EAAKwjB,YAIb,SAASo1D,GAA+BxjC,GACtC,OAAKA,EAIDA,EAAU5nC,WAAaL,GAClBioC,EAAUpxB,gBAEVoxB,EAAU/yB,WANV,KA3XQ,oBAARi8B,KAEU,MAAjBA,IAAIl2D,WAC6B,oBAA1Bk2D,IAAIl2D,UAAUsJ,SACN,oBAAR4kD,KAEU,MAAjBA,IAAIluD,WAC2B,oBAAxBkuD,IAAIluD,UAAU6lF,OACY,oBAA1B33B,IAAIluD,UAAUsJ,SAErB9J,aACE,EACA,oIAKJ+vF,GAA0BviC,IACxB,GAAIA,EAAUG,qBAAuBH,EAAU5nC,WAAaN,GAAc,CACxE,MAAM2rE,EAAe3B,GACnB9hC,EAAUG,oBAAoBmjC,cAAcvsF,SAE1C0sF,GACFjxF,YACEixF,EAAa34E,aAAek1C,EAC5B,6NAQN,MAAM0jC,IAA8B1jC,EAAUG,oBACxCwjC,EAASH,GAA+BxjC,GACxC4jC,KAA0BD,IAAU99E,GAAoB89E,IAE9DnxF,aACGoxF,GAAwBF,EACzB,qQAMFlxF,YACEwtD,EAAU5nC,WAAaR,KAClBooC,EAA0B/hC,SACyB,SAApD+hC,EAA0B/hC,QAAQxB,cACtC,mRAQJ20C,GAAwB,SAASvwD,EAAiB4wD,GAChDj/D,YACe,OAAbqO,GAAyC,oBAAbA,EAC5B,kGAEA4wD,EACA5wD,IrG7GJ+U,GmEwrCK,SACLgiC,EACA9hD,EACAsS,GAEA,OAAQtS,GACN,IAAK,QAEH,YADA+tF,GAAoCjsC,EAAYxvC,GAElD,IAAK,WAEH,YpB1kCC,SAAgCnQ,EAAkBmQ,GAEvD4W,GAAc/mB,EAASmQ,GoBukCnB07E,CAAuClsC,EAAYxvC,GAErD,IAAK,SAEH,YrBviCC,SAAgCnQ,EAAkBmQ,GACvD,MAAMwC,EAAS3S,EACTuF,EAAQ4K,EAAM5K,MAEP,MAATA,GACFi1B,GAAc7nB,IAAQxC,EAAMsqB,SAAUl1B,GAAO,GqBiiC3CumF,CAAqCnsC,EAAYxvC,KkC/hCvDq6E,GAAWzvF,UAAUsD,OAAS,SAAS27B,GACrC1gC,YACEgQ,KAAKu/E,OACL,+DAEFv/E,KAAKwhF,cAAe,EACpBxhF,KAAKyhF,UAAY/wD,EACjB,MAAM+xD,EAAeziF,KAAKohF,MAAMW,cAC1BviF,EAAiBQ,KAAKs/E,gBACtBoD,EAAO,IAAIhB,GAQjB,OAPA5B,GACEpvD,EACA+xD,EACA,KACAjjF,EACAkjF,EAAKd,WAEAc,GAETxB,GAAWzvF,UAAUq2E,KAAO,SAAS4T,GACnC,GAAI17E,KAAKuhF,aAEP,YADA7F,IAGF,IAAIiH,EAAY3iF,KAAKshF,WACH,OAAdqB,IACFA,EAAY3iF,KAAKshF,WAAa,IAEhCqB,EAAUxkF,KAAKu9E,IAEjBwF,GAAWzvF,UAAUmxF,OAAS,WAC5B,MAAMH,EAAeziF,KAAKohF,MAAMW,cAChC,IAAI12B,EAAao3B,EAAap3B,WAM9B,GALAr7D,YACEgQ,KAAKu/E,QAAyB,OAAfl0B,EACf,wDAGGrrD,KAAKwhF,aAIR,OAFAxhF,KAAKqhF,MAAQ,UACbrhF,KAAKu/E,QAAS,GAIhB,IAAI//E,EAAiBQ,KAAKs/E,gBAG1B,GAAIj0B,IAAerrD,KAAM,CAInBA,KAAKwhF,eACPhiF,EAAiBQ,KAAKs/E,gBAAkBj0B,EAAWi0B,gBAKnDt/E,KAAKjL,OAAOiL,KAAKyhF,YAInB,IAAIoB,EAAW,KACX3D,EAAQ7zB,EACZ,KAAO6zB,IAAUl/E,MACf6iF,EAAW3D,EACXA,EAAQA,EAAMmC,MAEhBrxF,YACe,OAAb6yF,EACA,uDAEFA,EAASxB,MAAQnC,EAAMmC,MAGvBrhF,KAAKqhF,MAAQh2B,EACbA,EAAao3B,EAAap3B,WAAarrD,KAIzCA,KAAKu/E,QAAS,EACdrB,GAAUuE,EAAcjjF,GAGxB,MAAM+F,EAAOvF,KAAKqhF,MAClBrhF,KAAKqhF,MAAQ,KACbh2B,EAAao3B,EAAap3B,WAAa9lD,EAGpB,OAAf8lD,GAAuBA,EAAWm2B,cACpCn2B,EAAWt2D,OAAOs2D,EAAWo2B,YAGjCP,GAAWzvF,UAAU0tF,YAAc,WACjC,GAAIn/E,KAAKuhF,aACP,OAEFvhF,KAAKuhF,cAAe,EACpB,MAAMoB,EAAY3iF,KAAKshF,WACvB,GAAkB,OAAdqB,EAIJ,IAAK,IAAIloF,EAAI,EAAGA,EAAIkoF,EAAUzxF,OAAQuJ,IAAK,EAEzC6E,EADiBqjF,EAAUloF,QAmB/BinF,GAAUjwF,UAAUq2E,KAAO,SAASgR,GAClC,GAAI94E,KAAK2hF,WAEP,YADA7I,IAGF,IAAI6J,EAAY3iF,KAAKshF,WACH,OAAdqB,IACFA,EAAY3iF,KAAKshF,WAAa,IAEhCqB,EAAUxkF,KAAK26E,IAEjB4I,GAAUjwF,UAAUmwF,UAAY,WAC9B,GAAI5hF,KAAK2hF,WACP,OAEF3hF,KAAK2hF,YAAa,EAClB,MAAMgB,EAAY3iF,KAAKshF,WACvB,GAAkB,OAAdqB,EAIJ,IAAK,IAAIloF,EAAI,EAAGA,EAAIkoF,EAAUzxF,OAAQuJ,IAAK,CACzC,MAAM6E,EAAWqjF,EAAUloF,GAC3BzK,YACsB,oBAAbsP,EACP,iFAEAA,GAEFA,MAYJuiF,GAAUpwF,UAAUsD,OAAS,SAC3B27B,EACApxB,GAEA,MAAM6O,EAAOnO,KAAK+hF,cACZW,EAAO,IAAIhB,GASjB,OANE7xB,GAFFvwD,OAAwB5O,IAAb4O,EAAyB,KAAOA,EAET,UAEjB,OAAbA,GACFojF,EAAK5a,KAAKxoE,GAEZ8gF,GAAgB1vD,EAAUviB,EAAM,KAAMu0E,EAAKd,WACpCc,GAETb,GAAUpwF,UAAUqxF,QAAU,SAASxjF,GACrC,MAAM6O,EAAOnO,KAAK+hF,cACZW,EAAO,IAAIhB,GASjB,OANE7xB,GAFFvwD,OAAwB5O,IAAb4O,EAAyB,KAAOA,EAET,UAEjB,OAAbA,GACFojF,EAAK5a,KAAKxoE,GAEZ8gF,GAAgB,KAAMjyE,EAAM,KAAMu0E,EAAKd,WAChCc,GAETb,GAAUpwF,UAAUsxF,kCAAoC,SACtDnD,EACAlvD,EACApxB,GAEA,MAAM6O,EAAOnO,KAAK+hF,cACZW,EAAO,IAAIhB,GASjB,OANE7xB,GAFFvwD,OAAwB5O,IAAb4O,EAAyB,KAAOA,EAET,UAEjB,OAAbA,GACFojF,EAAK5a,KAAKxoE,GAEZ8gF,GAAgB1vD,EAAUviB,EAAMyxE,EAAiB8C,EAAKd,WAC/Cc,GAETb,GAAUpwF,UAAUuxF,YAAc,WAChC,MAAM9D,EAAQ,IAAIgC,GAAWlhF,MACvBR,EAAiB0/E,EAAMI,gBAEvBmD,EAAeziF,KAAK+hF,cACpB12B,EAAao3B,EAAap3B,WAChC,GAAmB,OAAfA,EACFo3B,EAAap3B,WAAa6zB,EAC1BA,EAAMmC,MAAQ,SACT,CAEL,IAAI4B,EAAc,KACdvkC,EAAe2M,EACnB,KACmB,OAAjB3M,GACAA,EAAa4gC,iBAAmB9/E,GAEhCyjF,EAAcvkC,EACdA,EAAeA,EAAa2iC,MAE9BnC,EAAMmC,MAAQ3iC,EACM,OAAhBukC,IACFA,EAAY5B,MAAQnC,GAIxB,OAAOA,GpGzXPrqE,GoGoaAK,GpGnaAH,GoGoaA2qE,GpGnaA1qE,GuFy7EF,WAEKysD,IACDya,KAAmDn2B,KAGnD84B,GAAY3C,IAAgD,GAC5DA,GAAiDn2B,KazhErD,IAAIm9B,IAAwB,EAE5B,SAASC,GACP1kC,EACA2kC,GAEA,MAAMC,EACJD,GAtBJ,SAA2C3kC,GACzC,MAAM6kC,EAAcrB,GAA+BxjC,GACnD,SACE6kC,GACAA,EAAYzsE,WAAaR,KACzBitE,EAAYhoE,aAAa5B,KAiBT6pE,CAAkC9kC,GAEpD,IAAK4kC,EAAe,CAClB,IACIG,EADAC,GAAS,EAEb,KAAQD,EAAc/kC,EAAUjrB,YAGzBiwD,GACDD,EAAY3sE,WAAaR,IACxBmtE,EAAkBloE,aAAa5B,MAEhC+pE,GAAS,EACTxyF,aACE,EACA,mLAMNwtD,EAAUprB,YAAYmwD,IAIpBH,GAAkBD,GAAiBF,KACrCA,IAAwB,EACxB/rF,cACE,EACA,qNAQN,OAAO,IAAI0qF,GAAUpjC,GADA,EACyB4kC,GAGhD,SAASK,GACP9D,EACAlvD,EACA+tB,EACA2kC,EACA9jF,GAGE0hF,GAAuBviC,GAKzB,IAAItwC,EAAcswC,EAAUG,oBAC5B,GAAKzwC,EAyBE,CACL,GAAwB,oBAAb7O,EAAyB,CAClC,MAAMqkF,EAAmBrkF,EACzBA,EAAW,WACT,MAAMwR,EAAWuvE,GAAsBlyE,EAAK4zE,eAC5C4B,EAAiBhyF,KAAKmf,IAIH,MAAnB8uE,EACFzxE,EAAK40E,kCACHnD,EACAlvD,EACApxB,GAGF6O,EAAKpZ,OAAO27B,EAAUpxB,OAzCf,CAMT,GAJA6O,EAAOswC,EAAUG,oBAAsBukC,GACrC1kC,EACA2kC,GAEsB,oBAAb9jF,EAAyB,CAClC,MAAMqkF,EAAmBrkF,EACzBA,EAAW,WACT,MAAMwR,EAAWuvE,GAAsBlyE,EAAK4zE,eAC5C4B,EAAiBhyF,KAAKmf,IAI1B2uE,GAAiB,KACQ,MAAnBG,EACFzxE,EAAK40E,kCACHnD,EACAlvD,EACApxB,GAGF6O,EAAKpZ,OAAO27B,EAAUpxB,KAsB5B,OAAO+gF,GAAsBlyE,EAAK4zE,eAGpC,SAAS6B,GACPlzD,EACA+tB,EACA/iD,EAAe,MAOf,OALA1L,YACEgyF,GAAiBvjC,GACjB,0CCllBG,SACL/tB,EACAvG,EAEAggC,EACAzuD,EAAe,MAEf,MAAO,CAELjH,SAAUrB,KACVsI,IAAY,MAAPA,EAAc,KAAO,GAAKA,EAC/Bg1B,WACAvG,gBACAggC,kBDwkBK05B,CAAiBnzD,EAAU+tB,EAAW,KAAM/iD,GAGrD,MAAMC,GAAmB,CACvBioF,aADuB,GAGvBE,YACEC,GAEa,CACX,IAAIntF,EAASU,GAAkB9B,QAC/B,GAAc,OAAVoB,GAAsC,OAApBA,EAAMgQ,UAAoB,CAC9C,MAAMo9E,EACJptF,EAAMgQ,UAAUgqD,yBAClB3/D,YACE+yF,EACA,iRAKA3vF,aAAiBuC,EAAMtC,OAAS,eAElCsC,EAAMgQ,UAAUgqD,0BAA2B,GAG/C,OAA0B,MAAtBmzB,EACK,KAEJA,EAAyBltE,WAAaR,GACjC0tE,ED3ad,SACErzB,EACAuzB,GAEa,CACX,MAAM3rE,EAAQu4C,GAAYH,QACZhgE,IAAV4nB,IAC8B,oBAArBo4C,EAAU37D,OACnB/E,aAAU,EAAO,kDAEjBA,aACE,EACA,wDACAwH,OAAOyD,KAAKy1D,KAIlB,MAAM8vB,EAAYh6D,GAAqBlO,GACvC,GAAkB,OAAdkoE,EACF,OAAO,KAET,GAAIA,EAAU/1C,KAAO2c,GAAY,CAC/B,MAAMvxD,EAAgBxB,aAAiBikB,EAAMhkB,OAAS,YACjDoqF,GAAiC7oF,KACpC6oF,GAAiC7oF,IAAiB,EAC9CyiB,EAAMmyB,KAAO2c,GACfn2D,aACE,EACA,2PAMAgzF,EACAA,EACApuF,EACA4iB,GAA4B+nE,IAG9BvvF,aACE,EACA,kQAMAgzF,EACAA,EACApuF,EACA4iB,GAA4B+nE,KAKpC,OAAOA,EAAU55E,WCsXRs9E,CAA4BH,EAAoB,gBAK3Dx5B,QAAO,CAAC7zD,EAAqB+nD,EAAyBn/C,KACpDtP,YACEgyF,GAAiBvjC,GACjB,0CAGAxtD,aACGwtD,EAAU0lC,mCACX,qMAGA1xF,KAAiC,aAAe,uBAI7CixF,GACL,KACAhtF,EACA+nD,GACA,EACAn/C,IAIJvK,OAAM,CACJ2B,EACA+nD,EACAn/C,KAEAtP,YACEgyF,GAAiBvjC,GACjB,0CAGAxtD,aACGwtD,EAAU0lC,mCACX,kKAGA1xF,KAAiC,aAAe,uBAG7CixF,GACL,KACAhtF,EACA+nD,GACA,EACAn/C,IAIJ8kF,oCAAmC,CACjCxE,EACAlpF,EACA2tF,EACA/kF,KAEAtP,YACEgyF,GAAiBqC,GACjB,0CAEFr0F,YACqB,MAAnB4vF,Q/EvqB+BlvF,I+EuqBQkvF,E/EvqBhCl7D,oB+EwqBP,mDAEKg/D,GACL9D,EACAlpF,EACA2tF,GACA,EACA/kF,IAIJglF,uBAAuB7lC,GAerB,GAdAzuD,YACEgyF,GAAiBvjC,GACjB,uEAIAxtD,aACGwtD,EAAU0lC,mCACX,4KAEA1xF,KAAiC,aAAe,uBAIhDgsD,EAAUG,oBAAqB,CACpB,CACX,MAAMwjC,EAASH,GAA+BxjC,GACxC8lC,EAA2BnC,IAAW99E,GAAoB89E,GAChEnxF,aACGszF,EACD,0GAaJ,OAPA9E,GAAiB,KACfiE,GAAiC,KAAM,KAAMjlC,GAAW,EAAO,KAC7DA,EAAUG,oBAAsB,UAK7B,EAEM,CACX,MAAMwjC,EAASH,GAA+BxjC,GACxC4jC,KAA0BD,IAAU99E,GAAoB89E,IAGxDoC,EACJ/lC,EAAU5nC,WAAaR,IACvB2rE,GAAiBvjC,EAAUl1C,eACzBk1C,EAAUl1C,WAAWq1C,oBAEzB3tD,aACGoxF,EACD,6HAEAmC,EACI,kFAEA,uGAKR,OAAO,GAMXC,sBAAqB,IAAI7zF,KAClBqwF,KACHA,IAAmC,EACnC9pF,cACE,EACA,8NAMGysF,MAAgBhzF,IAGzB8zF,wBAAyBxvE,GAEzByvE,4BAA6BjF,GAE7BkF,Ub8qDF,SAAyBh7E,EAAiBzZ,GACxCH,aACGyxE,GACD,6GAGF,MAAM+d,EAA4B9d,GAClCA,IAAoB,EACpB,IACE,OAAOob,GAAYlzE,EAAIzZ,GADzB,QAGEuxE,GAAoB8d,EACpBpI,OaxrDFyN,oBAAqBC,GACrBC,yBbkuDF,SAAyBn7E,GACvB,MAAM41E,EAA4B9d,GAClCA,IAAoB,EACpB,IACEob,GAAYlzE,GADd,QAGE83D,GAAoB8d,EACf9d,IAAsBD,IACzB2V,OaxuDJ4N,mDAAoD,CAGlDC,OAAQ,CACN3gF,GACAC,GACAF,GACAisB,EAAwB9pB,yBACxBhD,EACA8H,G9GprBC,SAAoCrE,GACzCxB,EAAmBwB,EAAQoE,K8GqrBvBqJ,GACAC,GACAjU,GACAsG,KASN,SAAS89E,GAAWrmC,EAAyBntB,GAC3C,MAAMz8B,EAAepC,KACjB,aACA,sBAgBJ,OAfAzC,YACEgyF,GAAiBvjC,GACjB,kDACA5pD,GAGA5D,aACGwtD,EAAUG,oBACX,uHAEAnsD,KAAiC,aAAe,uBAElDgsD,EAAU0lC,oCAAqC,EAG1C,IAAItC,GAAUpjC,GAAW,EADL,MAAXntB,IAAuC,IAApBA,EAAQi5B,SAiB3C,GAbE93D,OACFkJ,GAASmpF,WAAaA,GACtBnpF,GAASkpF,yBAAsBn0F,ID3d1B,SAA4Bw0F,GACjC,MAAM,wBAACC,GAA2BD,GAC5B,uBAAC3vF,GAA0B1C,KAEjC,O1BzVK,SAAyBuyF,GAC9B,GAA8C,qBAAnCt/B,+BAET,OAAO,EAET,MAAM0X,EAAO1X,+BACb,GAAI0X,EAAK6nB,WAIP,OAAO,EAET,IAAK7nB,EAAK8nB,cAUR,OAREr0F,aACE,EACA,uKAMG,EAET,IACE,MAAMs0F,EAAa/nB,EAAKgoB,OAAOJ,GAE/B3/B,GAAoBG,GAAYz3C,GAC9BqvD,EAAK/X,kBAAkB8/B,EAAYp3E,IAErCu3C,GAAuBE,GAAYttC,GACjCklD,EAAK9X,qBAAqB6/B,EAAYjtE,IAExC,MAAOpd,GAGLjK,aACE,EACA,2CACAiK,GAKN,OAAO,E0B6SAuqF,CAAgB,IAClBP,EACHxE,iBACAgF,qBAAsBnwF,EACtBowF,wBAAwBrtE,GACtB,MAAMkoE,EAAYh6D,GAAqBlO,GACvC,OAAkB,OAAdkoE,EACK,KAEFA,EAAU55E,WAEnBu+E,wBAAwBr0E,GACjBq0E,EAIEA,EAAwBr0E,GAFtB,OC4cO80E,CAAmB,CACvCT,wBAAyB77E,GACzBu8E,WAAsB,EACtB51C,QAAS61C,KACTC,oBAAqB,eAICx6E,IAAarP,OAAOozB,MAAQpzB,OAAO8pF,OAGpDC,UAAUC,UAAUljF,QAAQ,WAAa,IACC,IAAzCijF,UAAUC,UAAUljF,QAAQ,SAC9BijF,UAAUC,UAAUljF,QAAQ,YAAc,GAC1C,CACA,MAAMmjF,EAAWjqF,OAAOtG,SAASuwF,SAE7B,mBAAmBxsF,KAAKwsF,IAC1Bh1F,QAAQwnB,KACN,mGAGgB,UAAbwtE,EACG,qGAEA,IACN,oBAOKxqF,c,sFEn3Bf,MAAMi6E,EAA0C,GAEhD,SAASwQ,EAASC,EAAgBn2B,GACnB,CACX,MAAMhqD,EAAcmgF,EAAengF,YAC7BrQ,EACHqQ,IAAgBA,EAAY1R,aAAe0R,EAAYnV,OACxD,aACI2nD,EAAc,GAAE7iD,KAAiBq6D,IACvC,GAAI0lB,EAAwCl9B,GAC1C,OAEFznD,aACE,EACA,wPAIAi/D,EACAr6D,GAEF+/E,EAAwCl9B,IAAc,GAkF3C4tC,MA3Ec,CAQ3BxkC,UAAW,SAASukC,GAClB,OAAO,GAkBT50B,mBAAoB,SAAS40B,EAAgB/mF,EAAU4wD,GACrDk2B,EAASC,EAAgB,gBAgB3B90B,oBAAqB,SACnB80B,EACAE,EACAjnF,EACA4wD,GAEAk2B,EAASC,EAAgB,iBAe3Bv1B,gBAAiB,SACfu1B,EACAl2B,EACA7wD,EACA4wD,GAEAk2B,EAASC,EAAgB,cChG7B,MAAMG,EAAc,GAQpB,SAASziC,EAAUl9C,EAAOxG,EAAS8xD,GACjCnyD,KAAK6G,MAAQA,EACb7G,KAAKK,QAAUA,EAEfL,KAAKsvD,KAAOk3B,EAGZxmF,KAAKmyD,QAAUA,GAAWm0B,EAb1B9uF,OAAO2/C,OAAOqvC,GAgBhBziC,EAAUtyD,UAAUy3D,iBAAmB,GA2BvCnF,EAAUtyD,UAAUg1F,SAAW,SAASt2B,EAAc7wD,GACpDtP,YAC0B,kBAAjBmgE,GACmB,oBAAjBA,GACS,MAAhBA,EACF,yHAGFnwD,KAAKmyD,QAAQrB,gBAAgB9wD,KAAMmwD,EAAc7wD,EAAU,aAiB7DykD,EAAUtyD,UAAUi1F,YAAc,SAASpnF,GACzCU,KAAKmyD,QAAQV,mBAAmBzxD,KAAMV,EAAU,gBAQrC,CACX,MAAMqnF,EAAiB,CACrB7kC,UAAW,CACT,YACA,sHAGF8kC,aAAc,CACZ,eACA,oGAIEC,EAA2B,SAAS5C,EAAYtrE,GACpDnhB,OAAOwE,eAAe+nD,EAAUtyD,UAAWwyF,EAAY,CACrD1zE,IAAK,WACHpZ,aACE,EACA,8DACAwhB,EAAK,GACLA,EAAK,QAMb,IAAK,MAAMmuE,KAAUH,EACfA,EAAerxF,eAAewxF,IAChCD,EAAyBC,EAAQH,EAAeG,IAKtD,SAASC,KAMT,SAASC,EAAcngF,EAAOxG,EAAS8xD,GACrCnyD,KAAK6G,MAAQA,EACb7G,KAAKK,QAAUA,EAEfL,KAAKsvD,KAAOk3B,EACZxmF,KAAKmyD,QAAUA,GAAWm0B,EAV5BS,EAAet1F,UAAYsyD,EAAUtyD,UAarC,MAAMw1F,EAA0BD,EAAcv1F,UAAY,IAAIs1F,EAC9DE,EAAuB/gF,YAAc8gF,EAErCxvF,OAAOD,OAAO0vF,EAAwBljC,EAAUtyD,WAChDw1F,EAAuBh1B,sBAAuB,E,mBCjI9C,MAAM38D,EAAiBkC,OAAO/F,UAAU6D,eAElC4xF,EAAiB,CACrBxrF,KAAK,EACLssD,KAAK,EACLm/B,QAAQ,EACRC,UAAU,GAGZ,IAAIC,EAA4BC,EAEhC,SAASC,EAAYx9D,GAEjB,GAAIz0B,EAAe3D,KAAKo4B,EAAQ,OAAQ,CACtC,MAAMy9D,EAAShwF,OAAO4J,yBAAyB2oB,EAAQ,OAAOxZ,IAC9D,GAAIi3E,GAAUA,EAAOC,eACnB,OAAO,EAIb,YAAsB/2F,IAAfq5B,EAAOi+B,IAGhB,SAAS0/B,EAAY39D,GAEjB,GAAIz0B,EAAe3D,KAAKo4B,EAAQ,OAAQ,CACtC,MAAMy9D,EAAShwF,OAAO4J,yBAAyB2oB,EAAQ,OAAOxZ,IAC9D,GAAIi3E,GAAUA,EAAOC,eACnB,OAAO,EAIb,YAAsB/2F,IAAfq5B,EAAOruB,IAiEhB,MAAMisF,EAAe,SAASrzF,EAAMoH,EAAKssD,EAAKg+B,EAAM1sF,EAAQ1C,EAAOiQ,GACjE,MAAMnQ,EAAU,CAEdjC,SAAUtB,IAGVmB,KAAMA,EACNoH,IAAKA,EACLssD,IAAKA,EACLnhD,MAAOA,EAGPhQ,OAAQD,EAQRF,OAAiB,IAiCnB,OA3BEc,OAAOwE,eAAetF,EAAQ0+D,OAAQ,YAAa,CACjD/kD,cAAc,EACdoH,YAAY,EACZmwE,UAAU,EACV3rF,OAAO,IAGTzE,OAAOwE,eAAetF,EAAS,QAAS,CACtC2Z,cAAc,EACdoH,YAAY,EACZmwE,UAAU,EACV3rF,MAAO+pF,IAITxuF,OAAOwE,eAAetF,EAAS,UAAW,CACxC2Z,cAAc,EACdoH,YAAY,EACZmwE,UAAU,EACV3rF,MAAO3C,IAEL9B,OAAO2/C,SACT3/C,OAAO2/C,OAAOzgD,EAAQmQ,OACtBrP,OAAO2/C,OAAOzgD,IAIXA,GAOF,SAASoK,EAAcxM,EAAMy1B,EAAQ2G,GAC1C,IAAI3gB,EAGJ,MAAMlJ,EAAQ,GAEd,IAAInL,EAAM,KACNssD,EAAM,KACNg+B,EAAO,KACP1sF,EAAS,KAEb,GAAc,MAAVywB,EAWF,IAAKha,KAVDw3E,EAAYx9D,KACdi+B,EAAMj+B,EAAOi+B,KAEX0/B,EAAY39D,KACdruB,EAAM,GAAKquB,EAAOruB,KAGpBsqF,OAAyBt1F,IAAlBq5B,EAAOo9D,OAAuB,KAAOp9D,EAAOo9D,OACnD7tF,OAA6B5I,IAApBq5B,EAAOq9D,SAAyB,KAAOr9D,EAAOq9D,SAEtCr9D,EAEbz0B,EAAe3D,KAAKo4B,EAAQha,KAC3Bm3E,EAAe5xF,eAAeya,KAE/BlJ,EAAMkJ,GAAYga,EAAOha,IAO/B,MAAM83E,EAAiBpsF,UAAUvK,OAAS,EAC1C,GAAuB,IAAnB22F,EACFhhF,EAAM6pB,SAAWA,OACZ,GAAIm3D,EAAiB,EAAG,CAC7B,MAAMC,EAAavnF,MAAMsnF,GACzB,IAAK,IAAIptF,EAAI,EAAGA,EAAIotF,EAAgBptF,IAClCqtF,EAAWrtF,GAAKgB,UAAUhB,EAAI,GAG1BjD,OAAO2/C,QACT3/C,OAAO2/C,OAAO2wC,GAGlBjhF,EAAM6pB,SAAWo3D,EAInB,GAAIxzF,GAAQA,EAAK66D,aAAc,CAC7B,MAAMA,EAAe76D,EAAK66D,aAC1B,IAAKp/C,KAAYo/C,OACSz+D,IAApBmW,EAAMkJ,KACRlJ,EAAMkJ,GAAYo/C,EAAap/C,IAKnC,GAAIrU,GAAOssD,EAAK,CACd,MAAMxzD,EACY,oBAATF,EACHA,EAAKE,aAAeF,EAAKvD,MAAQ,UACjCuD,EACFoH,GA3LV,SAAoCmL,EAAOrS,GACzC,MAAMuzF,EAAwB,WACvBV,IACHA,GAA6B,EAC7Bp2F,aACE,EACA,uOAIAuD,KAINuzF,EAAsBN,gBAAiB,EACvCjwF,OAAOwE,eAAe6K,EAAO,MAAO,CAClC0J,IAAKw3E,EACL13E,cAAc,IA2KV23E,CAA2BnhF,EAAOrS,GAEhCwzD,GAzKV,SAAoCnhD,EAAOrS,GACzC,MAAMyzF,EAAwB,WACvBX,IACHA,GAA6B,EAC7Br2F,aACE,EACA,uOAIAuD,KAINyzF,EAAsBR,gBAAiB,EACvCjwF,OAAOwE,eAAe6K,EAAO,MAAO,CAClC0J,IAAK03E,EACL53E,cAAc,IAyJV63E,CAA2BrhF,EAAOrS,GAIxC,OAAOmzF,EACLrzF,EACAoH,EACAssD,EACAg+B,EACA1sF,EACAhC,IAAkB9B,QAClBqR,GAqCG,SAASshF,EAAazxF,EAASqzB,EAAQ2G,GAO5C,IAAI3gB,EANJ/f,cACgB,OAAZ0G,QAAgChG,IAAZgG,GACtB,oFACAA,GAMF,MAAMmQ,EAAQrP,OAAOD,OAAO,GAAIb,EAAQmQ,OAGxC,IAAInL,EAAMhF,EAAQgF,IACdssD,EAAMtxD,EAAQsxD,IAElB,MAAMg+B,EAAOtvF,EAAQ0xF,MAIf9uF,EAAS5C,EAAQK,QAGvB,IAAIH,EAAQF,EAAQG,OAEpB,GAAc,MAAVkzB,EAAgB,CAWlB,IAAIolC,EAIJ,IAAKp/C,KAdDw3E,EAAYx9D,KAEdi+B,EAAMj+B,EAAOi+B,IACbpxD,EAAQU,IAAkB9B,SAExBkyF,EAAY39D,KACdruB,EAAM,GAAKquB,EAAOruB,KAKhBhF,EAAQpC,MAAQoC,EAAQpC,KAAK66D,eAC/BA,EAAez4D,EAAQpC,KAAK66D,cAEbplC,EAEbz0B,EAAe3D,KAAKo4B,EAAQha,KAC3Bm3E,EAAe5xF,eAAeya,UAENrf,IAArBq5B,EAAOha,SAA4Crf,IAAjBy+D,EAEpCtoD,EAAMkJ,GAAYo/C,EAAap/C,GAE/BlJ,EAAMkJ,GAAYga,EAAOha,IAQjC,MAAM83E,EAAiBpsF,UAAUvK,OAAS,EAC1C,GAAuB,IAAnB22F,EACFhhF,EAAM6pB,SAAWA,OACZ,GAAIm3D,EAAiB,EAAG,CAC7B,MAAMC,EAAavnF,MAAMsnF,GACzB,IAAK,IAAIptF,EAAI,EAAGA,EAAIotF,EAAgBptF,IAClCqtF,EAAWrtF,GAAKgB,UAAUhB,EAAI,GAEhCoM,EAAM6pB,SAAWo3D,EAGnB,OAAOH,EAAajxF,EAAQpC,KAAMoH,EAAKssD,EAAKg+B,EAAM1sF,EAAQ1C,EAAOiQ,GAU5D,SAASwhF,EAAeC,GAC7B,MACoB,kBAAXA,GACI,OAAXA,GACAA,EAAO7zF,WAAatB,I,YC/VxB,MAAMo1F,EAAY,IACZC,EAAe,IA0BrB,IAAI1zB,GAAmB,EAEvB,MAAM2zB,EAA6B,OACnC,SAASC,EAAsB5yE,GAC7B,OAAQ,GAAKA,GAAMhlB,QAAQ23F,EAA4B,OAGzD,MAAME,EAAY,GACZC,EAAsB,GAC5B,SAASC,EACPC,EACAC,EACAC,EACAC,GAEA,GAAIL,EAAoB13F,OAAQ,CAC9B,MAAMg4F,EAAkBN,EAAoBrqF,MAM5C,OALA2qF,EAAgBz4E,OAASq4E,EACzBI,EAAgBH,UAAYA,EAC5BG,EAAgB9oF,KAAO4oF,EACvBE,EAAgB7oF,QAAU4oF,EAC1BC,EAAgBpR,MAAQ,EACjBoR,EAEP,MAAO,CACLz4E,OAAQq4E,EACRC,UAAWA,EACX3oF,KAAM4oF,EACN3oF,QAAS4oF,EACTnR,MAAO,GAKb,SAASqR,EAAuBD,GAC9BA,EAAgBz4E,OAAS,KACzBy4E,EAAgBH,UAAY,KAC5BG,EAAgB9oF,KAAO,KACvB8oF,EAAgB7oF,QAAU,KAC1B6oF,EAAgBpR,MAAQ,EACpB8Q,EAAoB13F,OAASy3F,GAC/BC,EAAoBzqF,KAAK+qF,GA4I7B,SAASE,EAAoB14D,EAAUpxB,EAAU4pF,GAC/C,OAAgB,MAAZx4D,EACK,EAlIX,SAAS24D,EACP34D,EACA44D,EACAhqF,EACA4pF,GAEA,MAAM50F,SAAco8B,EAEP,cAATp8B,GAAiC,YAATA,IAE1Bo8B,EAAW,MAGb,IA8BIrK,EACAkjE,EA/BAC,GAAiB,EAErB,GAAiB,OAAb94D,EACF84D,GAAiB,OAEjB,OAAQl1F,GACN,IAAK,SACL,IAAK,SACHk1F,GAAiB,EACjB,MACF,IAAK,SACH,OAAQ94D,EAASj8B,UACf,KAAKtB,IACL,KAAKC,IACHo2F,GAAiB,GAK3B,GAAIA,EAQF,OAPAlqF,EACE4pF,EACAx4D,EAGc,KAAd44D,EAAmBf,EAAYkB,EAAgB/4D,EAAU,GAAK44D,GAEzD,EAKT,IAAII,EAAe,EACnB,MAAMC,EACU,KAAdL,EAAmBf,EAAYe,EAAYd,EAE7C,GAAIjoF,MAAM2E,QAAQwrB,GAChB,IAAK,IAAIj2B,EAAI,EAAGA,EAAIi2B,EAASx/B,OAAQuJ,IACnC4rB,EAAQqK,EAASj2B,GACjB8uF,EAAWI,EAAiBF,EAAgBpjE,EAAO5rB,GACnDivF,GAAgBL,EACdhjE,EACAkjE,EACAjqF,EACA4pF,OAGC,CACL,MAAMvwB,EAAazkE,YAAcw8B,GACjC,GAA0B,oBAAfioC,EAA2B,CAG9BA,IAAejoC,EAASmoC,UAC1BlmE,YACEmiE,EACA,qJAIFA,GAAmB,GAIvB,MAAM9gE,EAAW2kE,EAAWhnE,KAAK++B,GACjC,IAAIyS,EACAymD,EAAK,EACT,OAASzmD,EAAOnvC,EAASuR,QAAQuzD,MAC/BzyC,EAAQ8c,EAAKlnC,MACbstF,EAAWI,EAAiBF,EAAgBpjE,EAAOujE,KACnDF,GAAgBL,EACdhjE,EACAkjE,EACAjqF,EACA4pF,QAGC,GAAa,WAAT50F,EAAmB,CAC5B,IAAI+mD,EAAW,GAEbA,EACE,0EAEAvoD,IAAuBC,mBAE3B,MAAM82F,EAAiB,GAAKn5D,EAC5B1gC,aACE,EACA,wDACmB,oBAAnB65F,EACI,qBAAuBryF,OAAOyD,KAAKy1B,GAAU91B,KAAK,MAAQ,IAC1DivF,EACJxuC,IAKN,OAAOquC,EAwBAL,CAAwB34D,EAAU,GAAIpxB,EAAU4pF,GAUzD,SAASO,EAAgB/4B,EAAWlN,GAGlC,MACuB,kBAAdkN,GACO,OAAdA,GACiB,MAAjBA,EAAUh1D,IA5Nd,SAAgBA,GACd,MACMouF,EAAgB,CACpB,IAAK,KACL,IAAK,MAMP,MAAO,KAJgB,GAAKpuF,GAAK5K,QALb,SAKkC,SAAS8I,GAC7D,OAAOkwF,EAAclwF,MAwNdmwF,CAAOr5B,EAAUh1D,KAGnB8nD,EAAMx6C,SAAS,IAGxB,SAASghF,EAAmB3/D,EAAahE,EAAOt1B,GAC9C,MAAM,KAACqP,EAAD,QAAOC,GAAWgqB,EACxBjqB,EAAKzO,KAAK0O,EAASgmB,EAAOgE,EAAYytD,SA6BxC,SAASmS,EAA0B5/D,EAAahE,EAAO6jE,GACrD,MAAM,OAACz5E,EAAD,UAASs4E,EAAT,KAAoB3oF,EAApB,QAA0BC,GAAWgqB,EAE3C,IAAI8/D,EAAc/pF,EAAKzO,KAAK0O,EAASgmB,EAAOgE,EAAYytD,SDrBnD,IAA4BsS,EAAYC,ECsBzC9pF,MAAM2E,QAAQilF,GAChBG,EAA6BH,EAAa15E,EAAQy5E,EAAU75F,GAAKA,GACzC,MAAf85F,IACL9B,EAAe8B,KDzBYC,EC2B3BD,ED3BuCE,EC8BvCtB,IACGoB,EAAYzuF,KAAS2qB,GAASA,EAAM3qB,MAAQyuF,EAAYzuF,IAErD,GADAgtF,EAAsByB,EAAYzuF,KAAO,KAE7CwuF,EARJC,EDzBexC,EACjByC,EAAW91F,KACX+1F,EACAD,EAAWpiC,IACXoiC,EAAWhC,MACXgC,EAAWrzF,QACXqzF,EAAWvzF,OACXuzF,EAAWvjF,QC6BX4J,EAAOtS,KAAKgsF,IAIhB,SAASG,EAA6B55D,EAAUq8B,EAAOzyC,EAAQla,EAAMC,GACnE,IAAIkqF,EAAgB,GACN,MAAVjwE,IACFiwE,EAAgB7B,EAAsBpuE,GAAU,KAElD,MAAM4uE,EAAkBL,EACtB97B,EACAw9B,EACAnqF,EACAC,GAEF+oF,EAAoB14D,EAAUu5D,EAA2Bf,GACzDC,EAAuBD,GC5SV,SAASsB,EAAmBl2F,GACzC,MACkB,kBAATA,GACS,oBAATA,GAEPA,IAASjB,KACTiB,IAASZ,KACTY,IAASf,KACTe,IAAShB,KACTgB,IAASV,KACQ,kBAATU,GACG,OAATA,IACCA,EAAKG,WAAaX,KACjBQ,EAAKG,WAAaZ,KAClBS,EAAKG,WAAajB,KAClBc,EAAKG,WAAahB,KAClBa,EAAKG,WAAad,K,YCvB1B,SAAS82F,IACP,MAAMC,EAAan1F,IAAuBC,QAU1C,OATAxF,YACiB,OAAf06F,EACA,8aAOKA,E,2BCQT,IAAIC,EAMJ,SAAS35D,IACP,GAAI15B,IAAkB9B,QAAS,CAC7B,MAAMzE,EAAOsD,YAAiBiD,IAAkB9B,QAAQlB,MACxD,GAAIvD,EACF,MAAO,mCAAqCA,EAAO,KAGvD,MAAO,GAVP45F,GAAgC,EAgClC,MAAM11B,EAAwB,GA4B9B,SAAS21B,EAAoBl0F,EAAS6sE,GACpC,IAAK7sE,EAAQ0+D,QAAU1+D,EAAQ0+D,OAAOC,WAA4B,MAAf3+D,EAAQgF,IACzD,OAEFhF,EAAQ0+D,OAAOC,WAAY,EAE3B,MAAMC,EAhCR,SAAsCiO,GACpC,IAAI5qD,EAAOqY,IAEX,IAAKrY,EAAM,CACT,MAAMkyE,EACkB,kBAAftnB,EACHA,EACAA,EAAW/uE,aAAe+uE,EAAWxyE,KACvC85F,IACFlyE,EAAQ,8CAA6CkyE,OAGzD,OAAOlyE,EAoB2BmyE,CAA6BvnB,GAC/D,GAAItO,EAAsBK,GACxB,OAEFL,EAAsBK,IAA6B,EAKnD,IAAIy1B,EAAa,GAEfr0F,GACAA,EAAQG,QACRH,EAAQG,SAAWS,IAAkB9B,UAGrCu1F,EAAc,+BAA8B12F,YAC1CqC,EAAQG,OAAOvC,UAInBmC,YAA8BC,GAE5B/D,aACE,EACA,uHAEA2iE,EACAy1B,GAGJt0F,YAA8B,MAYhC,SAASu0F,GAAkB3hF,EAAMk6D,GAC/B,GAAoB,kBAATl6D,EAGX,GAAI9I,MAAM2E,QAAQmE,GAChB,IAAK,IAAI5O,EAAI,EAAGA,EAAI4O,EAAKnY,OAAQuJ,IAAK,CACpC,MAAM4rB,EAAQhd,EAAK5O,GACf4tF,EAAehiE,IACjBukE,EAAoBvkE,EAAOk9C,QAG1B,GAAI8kB,EAAeh/E,GAEpBA,EAAK+rD,SACP/rD,EAAK+rD,OAAOC,WAAY,QAErB,GAAIhsD,EAAM,CACf,MAAMsvD,EAAazkE,YAAcmV,GACjC,GAA0B,oBAAfsvD,GAGLA,IAAetvD,EAAKwvD,QAAS,CAC/B,MAAM7kE,EAAW2kE,EAAWhnE,KAAK0X,GACjC,IAAI85B,EACJ,OAASA,EAAOnvC,EAASuR,QAAQuzD,MAC3BuvB,EAAellD,EAAKlnC,QACtB2uF,EAAoBznD,EAAKlnC,MAAOsnE,KAc5C,SAAS0nB,GAAkBv0F,GACzB,MAAMpC,EAAOoC,EAAQpC,KACrB,GAAa,OAATA,QAA0B5D,IAAT4D,GAAsC,kBAATA,EAChD,OAEF,MAAMvD,EAAOsD,YAAiBC,GAC9B,IAAIioB,EACJ,GAAoB,oBAATjoB,EACTioB,EAAYjoB,EAAKioB,cACZ,IACW,kBAATjoB,GACNA,EAAKG,WAAad,KAGjBW,EAAKG,WAAaZ,IAIpB,OAFA0oB,EAAYjoB,EAAKioB,UAIfA,GACF9lB,YAA8BC,GAC9BjB,IACE8mB,EACA7lB,EAAQmQ,MACR,OACA9V,EACA+B,IAAuBC,kBAEzB0D,YAA8B,YACF/F,IAAnB4D,EAAK42F,WAA4BP,IAC1CA,GAAgC,EAChC15F,aACE,EACA,sGACAF,GAAQ,YAGwB,oBAAzBuD,EAAK++D,iBACdpiE,YACEqD,EAAK++D,gBAAgBF,qBACrB,8HAkCC,SAASg4B,GAA4B72F,EAAMuS,EAAO6pB,GACvD,MAAM06D,EAAYZ,EAAmBl2F,GAIrC,IAAK82F,EAAW,CACd,IAAIzyE,EAAO,SAEAjoB,IAAT4D,GACiB,kBAATA,GACG,OAATA,GAC6B,IAA7BkD,OAAOyD,KAAK3G,GAAMpD,UAEpBynB,GACE,oIAIJ,MAAMnf,EArOV,SAAoC6xF,GAClC,GACmB,OAAjBA,QACiB36F,IAAjB26F,QAC0B36F,IAA1B26F,EAAajE,SACb,CACA,MAAM9tF,EAAS+xF,EAAajE,SAG5B,MAAO,0BAFU9tF,EAAOI,SAAS5I,QAAQ,YAAa,IAER,IAD3BwI,EAAOQ,WACuC,IAEnE,MAAO,GA0NcwxF,CAA2BzkF,GAO9C,IAAI0kF,EALF5yE,GADEnf,GAGMw3B,IAIG,OAAT18B,EACFi3F,EAAa,OACJhrF,MAAM2E,QAAQ5Q,GACvBi3F,EAAa,aACK76F,IAAT4D,GAAsBA,EAAKG,WAAatB,KACjDo4F,EAAc,IAAGl3F,YAAiBC,EAAKA,OAAS,eAChDqkB,EACE,sEAEF4yE,SAAoBj3F,EAGtB3B,aACE,EACA,oJAGA44F,EACA5yE,GAIJ,MAAMjiB,EAAUoK,EAAcpP,MAAMsO,KAAMvE,WAI1C,GAAe,MAAX/E,EACF,OAAOA,EAQT,GAAI00F,EACF,IAAK,IAAI3wF,EAAI,EAAGA,EAAIgB,UAAUvK,OAAQuJ,IACpCuwF,GAAkBvvF,UAAUhB,GAAInG,GAUpC,OANIA,IAASjB,IA3Ff,SAA+BkkE,GAC7B9gE,YAA8B8gE,GAE9B,MAAMt8D,EAAOzD,OAAOyD,KAAKs8D,EAAS1wD,OAClC,IAAK,IAAIpM,EAAI,EAAGA,EAAIQ,EAAK/J,OAAQuJ,IAAK,CACpC,MAAMiB,EAAMT,EAAKR,GACjB,GAAY,aAARiB,GAA8B,QAARA,EAAe,CACvC/I,aACE,EACA,2GAEA+I,GAEF,OAIiB,OAAjB67D,EAASvP,KACXr1D,aAAQ,EAAO,yDAGjB8D,YAA8B,MAuE5B+0F,CAAsB90F,GAEtBu0F,GAAkBv0F,GAGbA,E,qBC7RT,MAAMO,GAAQ,CACZ05B,SAAU,CACRt/B,IJ+RJ,SAAqBq/B,EAAUtwB,EAAMC,GACnC,GAAgB,MAAZqwB,EACF,OAAOA,EAET,MAAMjgB,EAAS,GAEf,OADA65E,EAA6B55D,EAAUjgB,EAAQ,KAAMrQ,EAAMC,GACpDoQ,GIpSL1V,QJ6NJ,SAAyB21B,EAAU+6D,EAAaC,GAC9C,GAAgB,MAAZh7D,EACF,OAAOA,EAET,MAAMw4D,EAAkBL,EACtB,KACA,KACA4C,EACAC,GAEFtC,EAAoB14D,EAAUs5D,EAAoBd,GAClDC,EAAuBD,IIvOrBpR,MJ+SJ,SAAuBpnD,GACrB,OAAO04D,EAAoB14D,EAAU,IAAM,KAAM,OI/S/Ci7D,QJwTJ,SAAiBj7D,GACf,MAAMjgB,EAAS,GAEf,OADA65E,EAA6B55D,EAAUjgB,EAAQ,KAAM4V,GAASA,GACvD5V,GI1TLm7E,KJ2UJ,SAAmBl7D,GAKjB,OAJA1gC,YACEq4F,EAAe33D,GACf,yEAEKA,II7UPm7D,UC/CK,WACL,MAAMrrB,EAAY,CAChBhrE,QAAS,MAKX,OAFEgC,OAAOkoE,KAAKc,GAEPA,GDyCPzc,YACAijC,gBAEA8E,cE9CK,SACL5uE,EACA2sD,QAE6Bn5E,IAAzBm5E,EACFA,EAAuB,KAGrB54E,YAC2B,OAAzB44E,GACkC,oBAAzBA,EACT,8FAEAA,GAKN,MAAMxpE,EAA2B,CAC/B5L,SAAUhB,IACVm2E,sBAAuBC,EAMvB6B,cAAexuD,EACf0uD,eAAgB1uD,EAGhB6uE,aAAc,EAEdC,SAAW,KACXnhB,SAAW,MAGbxqE,EAAQ2rF,SAAW,CACjBv3F,SAAUjB,IACVg/D,SAAUnyD,GAGZ,IAAI4rF,GAA4C,EAC5CC,GAAsC,EAE7B,CAIX,MAAMrhB,EAAW,CACfp2E,SAAUhB,IACV++D,SAAUnyD,EACVupE,sBAAuBvpE,EAAQupE,uBAGjCpyE,OAAO20F,iBAAiBthB,EAAU,CAChCmhB,SAAU,CACRz7E,IAAG,KACI27E,IACHA,GAAsC,EACtCv5F,aACE,EACA,6JAIG0N,EAAQ2rF,UAEjB17E,IAAI87E,GACF/rF,EAAQ2rF,SAAWI,IAGvB1gB,cAAe,CACbn7D,IAAG,IACMlQ,EAAQqrE,cAEjBp7D,IAAIo7D,GACFrrE,EAAQqrE,cAAgBA,IAG5BE,eAAgB,CACdr7D,IAAG,IACMlQ,EAAQurE,eAEjBt7D,IAAIs7D,GACFvrE,EAAQurE,eAAiBA,IAG7BmgB,aAAc,CACZx7E,IAAG,IACMlQ,EAAQ0rF,aAEjBz7E,IAAIy7E,GACF1rF,EAAQ0rF,aAAeA,IAG3BlhB,SAAU,CACRt6D,IAAG,KACI07E,IACHA,GAA4C,EAC5Ct5F,aACE,EACA,6JAIG0N,EAAQwqE,aAKrBxqE,EAAQwqE,SAAWA,EAUrB,OAJExqE,EAAQsrE,iBAAmB,KAC3BtrE,EAAQwrE,kBAAoB,KAGvBxrE,GFzEPgsF,WGpDa,SACbt3F,GAoCA,OAjCgB,MAAVA,GAAkBA,EAAON,WAAaZ,IACxC5C,aACE,EACA,uIAIyB,oBAAX8D,EAChB9D,aACE,EACA,0DACW,OAAX8D,EAAkB,cAAgBA,GAGpC9D,YAEoB,IAAlB8D,EAAO7D,QAAkC,IAAlB6D,EAAO7D,OAC9B,+EACkB,IAAlB6D,EAAO7D,OACH,2CACA,+CAIM,MAAV6D,GACF9D,YACyB,MAAvB8D,EAAOo6D,cAA4C,MAApBp6D,EAAOwnB,UACtC,sHAMC,CACL9nB,SAAUd,IACVoB,WHcFu3F,KIpDK,SAAoBj8B,GACzB,IAAIk8B,EAAW,CACb93F,SAAUX,IACV+zE,MAAOxX,EAEP/5D,SAAU,EACVC,QAAS,MAGE,CAEX,IAAI44D,EACA5yC,EACJ/kB,OAAO20F,iBAAiBI,EAAU,CAChCp9B,aAAc,CACZ9+C,cAAc,EACdE,IAAG,IACM4+C,EAET7+C,IAAIk8E,GACF75F,aACE,EACA,2LAIFw8D,EAAeq9B,EAEfh1F,OAAOwE,eAAeuwF,EAAU,eAAgB,CAC9C90E,YAAY,MAIlB8E,UAAW,CACTlM,cAAc,EACdE,IAAG,IACMgM,EAETjM,IAAIm8E,GACF95F,aACE,EACA,wLAIF4pB,EAAYkwE,EAEZj1F,OAAOwE,eAAeuwF,EAAU,YAAa,CAC3C90E,YAAY,QAOtB,OAAO80E,GJFPG,KKrDa,SACbp4F,EACAyxE,GAYA,OATOykB,EAAmBl2F,IACtBrD,aACE,EACA,qEAES,OAATqD,EAAgB,cAAgBA,GAI/B,CACLG,SAAUZ,IACVS,OACAyxE,aAAqBr1E,IAAZq1E,EAAwB,KAAOA,ILsC1ClE,YFuCK,SACLviE,EACAqtF,GAGA,OADmBlC,IACD5oB,YAAYviE,EAAUqtF,IE3CxC7qB,WFvCK,SACL8qB,EACA9hB,GAEA,MAAM4f,EAAaD,IAgBjB,GAdA93F,iBAC4BjC,IAA1Bo6E,EACA,mHAGAA,EACiC,kBAA1BA,GAAsCvqE,MAAM2E,QAAQzJ,UAAU,IACjE,mIAGA,SAI0B/K,IAA3Bk8F,EAAcp6B,SAAwB,CACzC,MAAMq6B,EAAeD,EAAcp6B,SAG/Bq6B,EAAYhiB,WAAa+hB,EAC3Bj6F,aACE,EACA,2KAGOk6F,EAAYb,WAAaY,GAClCj6F,aACE,EACA,4GAMR,OAAO+3F,EAAW5oB,WAAW8qB,EAAS9hB,IECtC/I,UFqBK,SACL1C,EACAstB,GAGA,OADmBlC,IACD1oB,UAAU1C,EAAQstB,IEzBpC3qB,oBFoDK,SACLha,EACAqX,EACAstB,GAGA,OADmBlC,IACDzoB,oBAAoBha,EAAKqX,EAAQstB,IEzDnDrqB,cF4DK,SAAuBrmE,EAAY4kE,GAGtC,OADmB4pB,IACDnoB,cAAcrmE,EAAO4kE,IE9DzCoB,gBF0BK,SACL5C,EACAstB,GAGA,OADmBlC,IACDxoB,gBAAgB5C,EAAQstB,IE9B1CzqB,QFyCK,SACL7C,EACAstB,GAGA,OADmBlC,IACDvoB,QAAQ7C,EAAQstB,IE7ClCxqB,WFEK,SACLpE,EACAC,EACAC,GAGA,OADmBwsB,IACDtoB,WAAWpE,EAASC,EAAYC,IEPlDmE,OFUK,SAAmB9kD,GAExB,OADmBmtE,IACDroB,OAAO9kD,IEXzB+kD,SFLK,SAAqBnE,GAE1B,OADmBusB,IACDpoB,SAASnE,IEK3Bh2D,SAAU7U,IACV+zD,WAAY9zD,IACZw5F,SAAUl5F,IAEVkN,cAAyBqqF,GACzBhD,aDsRK,SAAoCzxF,EAASmQ,EAAO6pB,GACzD,MAAMq8D,EAAa5E,EAAaz2F,MAAMsO,KAAMvE,WAC5C,IAAK,IAAIhB,EAAI,EAAGA,EAAIgB,UAAUvK,OAAQuJ,IACpCuwF,GAAkBvvF,UAAUhB,GAAIsyF,EAAWz4F,MAG7C,OADA22F,GAAkB8B,GACXA,GC3RPC,cD6PK,SAAqC14F,GAC1C,MAAM24F,EAAmB9B,GAA4BrgE,KAAK,KAAMx2B,GAoBhE,OAnBA24F,EAAiB34F,KAAOA,EAGtBkD,OAAOwE,eAAeixF,EAAkB,OAAQ,CAC9Cx1E,YAAY,EACZlH,IAAK,WASH,OARApZ,aACE,EACA,6FAGFK,OAAOwE,eAAegE,KAAM,OAAQ,CAClC/D,MAAO3H,IAEFA,KAKN24F,GCjRP5E,eAAgBA,EAEhBp4C,QAAS61C,IAEToH,wBAAyBx5F,IACzBy5F,kBAAmB55F,IAEnByxF,mDAAoDnyF,MAQlDJ,OACFwE,GAAMkwD,eAAiBzzD,IACvBuD,GAAMsR,SAAWhV,IACjB0D,GAAMi2F,6BAA0Bx8F,EAChCuG,GAAMk2F,uBAAoBz8F,GAGbuG,c,4FM/FAm2F,MARf,WACE,OACE,oCCMgBC,QACW,cAA7BnxF,OAAOtG,SAAS03F,UAEe,UAA7BpxF,OAAOtG,SAAS03F,UAEhBpxF,OAAOtG,SAAS03F,SAAS1zF,MACvB,2DCZN+B,IAAS5G,OAAO,kBAAC,EAAD,MAAS4L,SAAS4sF,eAAe,SD6H3C,kBAAmBtH,WACrBA,UAAUuH,cAAcC,MAAM3lB,MAAK,SAAA4lB,GACjCA,EAAaC,kB","file":"static/js/main.ef744052.chunk.js","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nlet validateFormat = () => {};\n\nif (__DEV__) {\n  validateFormat = function(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nexport default function invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    let error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n          'for the full error message and additional helpful warnings.',\n      );\n    } else {\n      const args = [a, b, c, d, e, f];\n      let argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        }),\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nlet warningWithoutStack = () => {};\n\nif (__DEV__) {\n  warningWithoutStack = function(condition, format, ...args) {\n    if (format === undefined) {\n      throw new Error(\n        '`warningWithoutStack(condition, format, ...args)` requires a warning ' +\n          'message argument',\n      );\n    }\n    if (args.length > 8) {\n      // Check before the condition to catch violations early.\n      throw new Error(\n        'warningWithoutStack() currently supports at most 8 arguments.',\n      );\n    }\n    if (condition) {\n      return;\n    }\n    if (typeof console !== 'undefined') {\n      const argsWithFormat = args.map(item => '' + item);\n      argsWithFormat.unshift('Warning: ' + format);\n\n      // We intentionally don't use spread (or .apply) directly because it\n      // breaks IE9: https://github.com/facebook/react/issues/13610\n      Function.prototype.apply.call(console.error, console, argsWithFormat);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      let argIndex = 0;\n      const message =\n        'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nexport default warningWithoutStack;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\nexport const enableUserTimingAPI = __DEV__;\n\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\nexport const debugRenderPhaseSideEffects = false;\n\n// In some cases, StrictMode should also double-render lifecycles.\n// This can be confusing for tests though,\n// And it can be bad for performance in production.\n// This feature flag can be used to control the behavior:\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\nexport const warnAboutDeprecatedLifecycles = false;\n\n// Gather advanced timing metrics for Profiler subtrees.\nexport const enableProfilerTimer = __PROFILE__;\n\n// Trace which interactions trigger each commit.\nexport const enableSchedulerTracing = __PROFILE__;\n\n// Only used in www builds.\nexport const enableSuspenseServerRenderer = false; // TODO: __DEV__? Here it might just be false.\n\n// Only used in www builds.\nexport const enableSchedulerDebugging = false;\n\n// Only used in www builds.\nexport function addUserTimingListener() {\n  throw new Error('Not implemented.');\n}\n\n// React Fire: prevent the value and checked attributes from syncing\n// with their related DOM properties\nexport const disableInputAttributeSyncing = false;\n\n// These APIs will no longer be \"unstable\" in the upcoming 16.7 release,\n// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.\nexport const enableStableConcurrentModeAPIs = false;\n\nexport const warnAboutShorthandPropertyCollision = false;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nlet warning = warningWithoutStack;\n\nif (__DEV__) {\n  warning = function(condition, format, ...args) {\n    if (condition) {\n      return;\n    }\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\n    // eslint-disable-next-line react-internal/warning-and-invariant-args\n    warningWithoutStack(false, format + '%s', ...args, stack);\n  };\n}\n\nexport default warning;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nconst hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nexport const REACT_ELEMENT_TYPE = hasSymbol\n  ? Symbol.for('react.element')\n  : 0xeac7;\nexport const REACT_PORTAL_TYPE = hasSymbol\n  ? Symbol.for('react.portal')\n  : 0xeaca;\nexport const REACT_FRAGMENT_TYPE = hasSymbol\n  ? Symbol.for('react.fragment')\n  : 0xeacb;\nexport const REACT_STRICT_MODE_TYPE = hasSymbol\n  ? Symbol.for('react.strict_mode')\n  : 0xeacc;\nexport const REACT_PROFILER_TYPE = hasSymbol\n  ? Symbol.for('react.profiler')\n  : 0xead2;\nexport const REACT_PROVIDER_TYPE = hasSymbol\n  ? Symbol.for('react.provider')\n  : 0xeacd;\nexport const REACT_CONTEXT_TYPE = hasSymbol\n  ? Symbol.for('react.context')\n  : 0xeace;\nexport const REACT_ASYNC_MODE_TYPE = hasSymbol\n  ? Symbol.for('react.async_mode')\n  : 0xeacf;\nexport const REACT_CONCURRENT_MODE_TYPE = hasSymbol\n  ? Symbol.for('react.concurrent_mode')\n  : 0xeacf;\nexport const REACT_FORWARD_REF_TYPE = hasSymbol\n  ? Symbol.for('react.forward_ref')\n  : 0xead0;\nexport const REACT_SUSPENSE_TYPE = hasSymbol\n  ? Symbol.for('react.suspense')\n  : 0xead1;\nexport const REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nexport const REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'shared/ReactLazyComponent';\n\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport {\n  REACT_CONCURRENT_MODE_TYPE,\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\nimport {refineResolvedLazyComponent} from 'shared/ReactLazyComponent';\n\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const functionName = innerType.displayName || innerType.name || '';\n  return (\n    (outerType: any).displayName ||\n    (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName)\n  );\n}\n\nfunction getComponentName(type: mixed): string | null {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  if (__DEV__) {\n    if (typeof (type: any).tag === 'number') {\n      warningWithoutStack(\n        false,\n        'Received an unexpected object in getComponentName(). ' +\n          'This is likely a bug in React. Please file an issue.',\n      );\n    }\n  }\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_CONCURRENT_MODE_TYPE:\n      return 'ConcurrentMode';\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return `Profiler`;\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n      case REACT_LAZY_TYPE: {\n        const thenable: LazyComponent<mixed> = (type: any);\n        const resolvedThenable = refineResolvedLazyComponent(thenable);\n        if (resolvedThenable) {\n          return getComponentName(resolvedThenable);\n        }\n      }\n    }\n  }\n  return null;\n}\n\nexport default getComponentName;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler-tracing.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler-tracing.development.js');\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// import React from 'react';\nimport ReactSharedInternals from '../react/src/ReactSharedInternals';\n\n// const ReactSharedInternals =\n// React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n// Prevent newer renderers from RTE when used with older react package versions.\n// Current owner and dispatcher used to share the same ref,\n// but PR #14548 split them out to better support the react-debug-tools package.\nif (!ReactSharedInternals.hasOwnProperty('ReactCurrentDispatcher')) {\n  ReactSharedInternals.ReactCurrentDispatcher = {\n    current: null,\n  };\n}\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// This lets us hook into Fiber to debug what it's doing.\n// See https://github.com/facebook/react/pull/8033.\n// This is not part of the public API, not even for React DevTools.\n// You may only inject a debugTool if you work on React Fiber itself.\nconst ReactFiberInstrumentation = {\n  debugTool: null,\n};\n\nmodule.exports = ReactFiberInstrumentation;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type Thenable<T, R> = {\n  then(resolve: (T) => mixed, reject: (mixed) => mixed): R,\n};\n\nexport type LazyComponent<T> = {\n  $$typeof: Symbol | number,\n  _ctor: () => Thenable<{default: T}, mixed>,\n  _status: 0 | 1 | 2,\n  _result: any,\n};\n\ntype ResolvedLazyComponent<T> = {\n  $$typeof: Symbol | number,\n  _ctor: () => Thenable<{default: T}, mixed>,\n  _status: 1,\n  _result: any,\n};\n\nexport const Pending = 0;\nexport const Resolved = 1;\nexport const Rejected = 2;\n\nexport function refineResolvedLazyComponent<T>(\n  lazyComponent: LazyComponent<T>,\n): ResolvedLazyComponent<T> | null {\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\n\nimport describeComponentFrame from 'shared/describeComponentFrame';\nimport getComponentName from 'shared/getComponentName';\n\nconst ReactDebugCurrentFrame = {};\n\nlet currentlyValidatingElement = (null: null | ReactElement);\n\nexport function setCurrentlyValidatingElement(element: null | ReactElement) {\n  if (__DEV__) {\n    currentlyValidatingElement = element;\n  }\n}\n\nif (__DEV__) {\n  // Stack implementation injected by the current renderer.\n  ReactDebugCurrentFrame.getCurrentStack = (null: null | (() => string));\n\n  ReactDebugCurrentFrame.getStackAddendum = function(): string {\n    let stack = '';\n\n    // Add an extra top frame while an element is being validated\n    if (currentlyValidatingElement) {\n      const name = getComponentName(currentlyValidatingElement.type);\n      const owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(\n        name,\n        currentlyValidatingElement._source,\n        owner && getComponentName(owner.type),\n      );\n    }\n\n    // Delegate to the injected renderer-specific implementation\n    const impl = ReactDebugCurrentFrame.getCurrentStack;\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\nexport default ReactDebugCurrentFrame;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n'use strict';\n\nconst React = require('./src/React');\n\n// TODO: decide on the top-level export form.\n// This is hacky but makes it work with both Rollup and Jest.\nmodule.exports = React.default || React;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nlet lowPriorityWarning = function() {};\n\nif (__DEV__) {\n  const printWarning = function(format, ...args) {\n    let argIndex = 0;\n    const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function(condition, format, ...args) {\n    if (format === undefined) {\n      throw new Error(\n        '`lowPriorityWarning(condition, format, ...args)` requires a warning ' +\n          'message argument',\n      );\n    }\n    if (!condition) {\n      printWarning(format, ...args);\n    }\n  };\n}\n\nexport default lowPriorityWarning;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactFiber';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nconst ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: (null: null | Fiber),\n};\n\nexport default ReactCurrentOwner;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport assign from 'object-assign';\nimport {\n  unstable_cancelCallback,\n  unstable_shouldYield,\n  unstable_now,\n  unstable_scheduleCallback,\n  unstable_runWithPriority,\n  unstable_next,\n  unstable_getFirstCallbackNode,\n  unstable_pauseExecution,\n  unstable_continueExecution,\n  unstable_wrapCallback,\n  unstable_getCurrentPriorityLevel,\n  unstable_IdlePriority,\n  unstable_ImmediatePriority,\n  unstable_LowPriority,\n  unstable_NormalPriority,\n  unstable_UserBlockingPriority,\n} from 'scheduler';\nimport {\n  __interactionsRef,\n  __subscriberRef,\n  unstable_clear,\n  unstable_getCurrent,\n  unstable_getThreadID,\n  unstable_subscribe,\n  unstable_trace,\n  unstable_unsubscribe,\n  unstable_wrap,\n} from 'scheduler/tracing';\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\nimport ReactCurrentOwner from './ReactCurrentOwner';\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\n\nconst ReactSharedInternals = {\n  ReactCurrentDispatcher,\n  ReactCurrentOwner,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign,\n};\n\nif (__UMD__) {\n  // Re-export the schedule API(s) for UMD bundles.\n  // This avoids introducing a dependency on a new UMD global in a minor update,\n  // Since that would be a breaking change (e.g. for all existing CodeSandboxes).\n  // This re-export is only required for UMD bundles;\n  // CJS bundles use the shared NPM package.\n  Object.assign(ReactSharedInternals, {\n    Scheduler: {\n      unstable_cancelCallback,\n      unstable_shouldYield,\n      unstable_now,\n      unstable_scheduleCallback,\n      unstable_runWithPriority,\n      unstable_next,\n      unstable_wrapCallback,\n      unstable_getFirstCallbackNode,\n      unstable_pauseExecution,\n      unstable_continueExecution,\n      unstable_getCurrentPriorityLevel,\n      unstable_IdlePriority,\n      unstable_ImmediatePriority,\n      unstable_LowPriority,\n      unstable_NormalPriority,\n      unstable_UserBlockingPriority,\n    },\n    SchedulerTracing: {\n      __interactionsRef,\n      __subscriberRef,\n      unstable_clear,\n      unstable_getCurrent,\n      unstable_getThreadID,\n      unstable_subscribe,\n      unstable_trace,\n      unstable_unsubscribe,\n      unstable_wrap,\n    },\n  });\n}\n\nif (__DEV__) {\n  Object.assign(ReactSharedInternals, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {},\n  });\n}\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n// TODO: this is special because it gets imported during build.\nmodule.exports = '16.8.6';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher} from 'react-reconciler/src/ReactFiberHooks';\n\n/**\n * Keeps track of the current dispatcher.\n */\nconst ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: (null: null | Dispatcher),\n};\n\nexport default ReactCurrentDispatcher;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nexport default function(\n  name: null | string,\n  source: any,\n  ownerName: null | string,\n) {\n  let sourceInfo = '';\n  if (source) {\n    let path = source.fileName;\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\n    if (__DEV__) {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        const match = path.match(BEFORE_SLASH_RE);\n        if (match) {\n          const pathBeforeSlash = match[1];\n          if (pathBeforeSlash) {\n            const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n'use strict';\n\nconst ReactDOM = require('./src/client/ReactDOM');\n\n// TODO: decide on the top-level export form.\n// This is hacky but makes it work with both Rollup and Jest.\nmodule.exports = ReactDOM.default || ReactDOM;\n","/** @license React v0.18.0\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var f,g,h,k,l;\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,\ny=window.setTimeout,z=window.clearTimeout;if(\"undefined\"!==typeof console){var A=window.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\");\"function\"!==typeof A&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\")}if(\"object\"===\ntypeof w&&\"function\"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported\"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=\nfunction(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=Math.floor((c-1)/2),e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}\nfunction M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;\nfunction V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}\nfunction X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}\nfunction Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};\nexports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if(\"object\"===typeof c&&null!==c){var e=c.delay;e=\"number\"===typeof e&&0<e?d+e:d;c=\"number\"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};exports.unstable_cancelCallback=function(a){a.callback=null};\nexports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};exports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_requestPaint=Z;exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};\nexports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_Profiling=null;\n","/** @license React v0.18.0\n * scheduler-tracing.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var b=0;exports.__interactionsRef=null;exports.__subscriberRef=null;exports.unstable_clear=function(a){return a()};exports.unstable_getCurrent=function(){return null};exports.unstable_getThreadID=function(){return++b};exports.unstable_trace=function(a,d,c){return c()};exports.unstable_wrap=function(a){return a};exports.unstable_subscribe=function(){};exports.unstable_unsubscribe=function(){};\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport React from 'react';\nimport invariant from 'shared/invariant';\n\ninvariant(\n  React,\n  'ReactDOM was loaded before React. Make sure you load ' +\n    'the React package before loading ReactDOM.',\n);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\nlet invokeGuardedCallbackImpl = function<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n) {\n  const funcArgs = Array.prototype.slice.call(arguments, 3);\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n};\n\nif (__DEV__) {\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.dispatchEvent === 'function' &&\n    typeof document !== 'undefined' &&\n    typeof document.createEvent === 'function'\n  ) {\n    const fakeNode = document.createElement('react');\n\n    const invokeGuardedCallbackDev = function<A, B, C, D, E, F, Context>(\n      name: string | null,\n      func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n      context: Context,\n      a: A,\n      b: B,\n      c: C,\n      d: D,\n      e: E,\n      f: F,\n    ) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebookincubator/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      invariant(\n        typeof document !== 'undefined',\n        'The `document` global was defined when React was initialized, but is not ' +\n          'defined anymore. This can happen in a test environment if a component ' +\n          'schedules an update from an asynchronous callback, but the test has already ' +\n          'finished running. To solve this, you can either unmount the component at ' +\n          'the end of your test (and ensure that any asynchronous operations get ' +\n          'canceled in `componentWillUnmount`), or you can change the test itself ' +\n          'to be asynchronous.',\n      );\n      const evt = document.createEvent('Event');\n\n      // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n      let didError = true;\n\n      // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n      let windowEvent = window.event;\n\n      // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n      const windowEventDescriptor = Object.getOwnPropertyDescriptor(\n        window,\n        'event',\n      );\n\n      // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n      const funcArgs = Array.prototype.slice.call(arguments, 3);\n      function callCallback() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false);\n\n        // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n        if (\n          typeof window.event !== 'undefined' &&\n          window.hasOwnProperty('event')\n        ) {\n          window.event = windowEvent;\n        }\n\n        func.apply(context, funcArgs);\n        didError = false;\n      }\n\n      // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n      let error;\n      // Use this to track whether the error event is ever called.\n      let didSetError = false;\n      let isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === 'object') {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {\n              // Ignore.\n            }\n          }\n        }\n      }\n\n      // Create a fake event type.\n      const evtType = `react-${name ? name : 'invokeguardedcallback'}`;\n\n      // Attach our event handlers\n      window.addEventListener('error', handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false);\n\n      // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, 'event', windowEventDescriptor);\n      }\n\n      if (didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          error = new Error(\n            'An error was thrown inside one of your components, but React ' +\n              \"doesn't know what it was. This is likely due to browser \" +\n              'flakiness. React does its best to preserve the \"Pause on ' +\n              'exceptions\" behavior of the DevTools, which requires some ' +\n              \"DEV-mode only tricks. It's possible that these don't work in \" +\n              'your browser. Try triggering the error in production mode, ' +\n              'or switching to a modern browser. If you suspect that this is ' +\n              'actually an issue with React, please file an issue.',\n          );\n        } else if (isCrossOriginError) {\n          error = new Error(\n            \"A cross-origin error was thrown. React doesn't have access to \" +\n              'the actual error object in development. ' +\n              'See https://fb.me/react-crossorigin-error for more information.',\n          );\n        }\n        this.onError(error);\n      }\n\n      // Remove our event listeners\n      window.removeEventListener('error', handleWindowError);\n    };\n\n    invokeGuardedCallbackImpl = invokeGuardedCallbackDev;\n  }\n}\n\nexport default invokeGuardedCallbackImpl;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport invokeGuardedCallbackImpl from './invokeGuardedCallbackImpl';\n\n// Used by Fiber to simulate a try-catch.\nlet hasError: boolean = false;\nlet caughtError: mixed = null;\n\n// Used by event system to capture/rethrow the first error.\nlet hasRethrowError: boolean = false;\nlet rethrowError: mixed = null;\n\nconst reporter = {\n  onError(error: mixed) {\n    hasError = true;\n    caughtError = error;\n  },\n};\n\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallback<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl.apply(reporter, arguments);\n}\n\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallbackAndCatchFirstError<\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  Context,\n>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => void,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  invokeGuardedCallback.apply(this, arguments);\n  if (hasError) {\n    const error = clearCaughtError();\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\nexport function rethrowCaughtError() {\n  if (hasRethrowError) {\n    const error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\n\nexport function hasCaughtError() {\n  return hasError;\n}\n\nexport function clearCaughtError() {\n  if (hasError) {\n    const error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    invariant(\n      false,\n      'clearCaughtError was called but no error was captured. This error ' +\n        'is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DispatchConfig} from './ReactSyntheticEventType';\nimport type {\n  AnyNativeEvent,\n  PluginName,\n  PluginModule,\n} from './PluginModuleType';\n\nimport invariant from 'shared/invariant';\n\ntype NamesToPlugins = {[key: PluginName]: PluginModule<AnyNativeEvent>};\ntype EventPluginOrder = null | Array<PluginName>;\n\n/**\n * Injectable ordering of event plugins.\n */\nlet eventPluginOrder: EventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nconst namesToPlugins: NamesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering(): void {\n  if (!eventPluginOrder) {\n    // Wait until an `eventPluginOrder` is injected.\n    return;\n  }\n  for (const pluginName in namesToPlugins) {\n    const pluginModule = namesToPlugins[pluginName];\n    const pluginIndex = eventPluginOrder.indexOf(pluginName);\n    invariant(\n      pluginIndex > -1,\n      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +\n        'the plugin ordering, `%s`.',\n      pluginName,\n    );\n    if (plugins[pluginIndex]) {\n      continue;\n    }\n    invariant(\n      pluginModule.extractEvents,\n      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +\n        'method, but `%s` does not.',\n      pluginName,\n    );\n    plugins[pluginIndex] = pluginModule;\n    const publishedEvents = pluginModule.eventTypes;\n    for (const eventName in publishedEvents) {\n      invariant(\n        publishEventForPlugin(\n          publishedEvents[eventName],\n          pluginModule,\n          eventName,\n        ),\n        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',\n        eventName,\n        pluginName,\n      );\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(\n  dispatchConfig: DispatchConfig,\n  pluginModule: PluginModule<AnyNativeEvent>,\n  eventName: string,\n): boolean {\n  invariant(\n    !eventNameDispatchConfigs.hasOwnProperty(eventName),\n    'EventPluginHub: More than one plugin attempted to publish the same ' +\n      'event name, `%s`.',\n    eventName,\n  );\n  eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  const phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (const phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        const phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(\n          phasedRegistrationName,\n          pluginModule,\n          eventName,\n        );\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(\n      dispatchConfig.registrationName,\n      pluginModule,\n      eventName,\n    );\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(\n  registrationName: string,\n  pluginModule: PluginModule<AnyNativeEvent>,\n  eventName: string,\n): void {\n  invariant(\n    !registrationNameModules[registrationName],\n    'EventPluginHub: More than one plugin attempted to publish the same ' +\n      'registration name, `%s`.',\n    registrationName,\n  );\n  registrationNameModules[registrationName] = pluginModule;\n  registrationNameDependencies[registrationName] =\n    pluginModule.eventTypes[eventName].dependencies;\n\n  if (__DEV__) {\n    const lowerCasedName = registrationName.toLowerCase();\n    possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\n\n/**\n * Ordered list of injected plugins.\n */\nexport const plugins = [];\n\n/**\n * Mapping from event name to dispatch config\n */\nexport const eventNameDispatchConfigs = {};\n\n/**\n * Mapping from registration name to plugin module\n */\nexport const registrationNameModules = {};\n\n/**\n * Mapping from registration name to event name\n */\nexport const registrationNameDependencies = {};\n\n/**\n * Mapping from lowercase registration names to the properly cased version,\n * used to warn in the case of missing event handlers. Available\n * only in __DEV__.\n * @type {Object}\n */\nexport const possibleRegistrationNames = __DEV__ ? {} : (null: any);\n// Trust the developer to only use possibleRegistrationNames in __DEV__\n\n/**\n * Injects an ordering of plugins (by plugin name). This allows the ordering\n * to be decoupled from injection of the actual plugins so that ordering is\n * always deterministic regardless of packaging, on-the-fly injection, etc.\n *\n * @param {array} InjectedEventPluginOrder\n * @internal\n * @see {EventPluginHub.injection.injectEventPluginOrder}\n */\nexport function injectEventPluginOrder(\n  injectedEventPluginOrder: EventPluginOrder,\n): void {\n  invariant(\n    !eventPluginOrder,\n    'EventPluginRegistry: Cannot inject event plugin ordering more than ' +\n      'once. You are likely trying to load more than one copy of React.',\n  );\n  // Clone the ordering so it cannot be dynamically mutated.\n  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n  recomputePluginOrdering();\n}\n\n/**\n * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n * in the ordering injected by `injectEventPluginOrder`.\n *\n * Plugins can be injected as part of page initialization or on-the-fly.\n *\n * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n * @internal\n * @see {EventPluginHub.injection.injectEventPluginsByName}\n */\nexport function injectEventPluginsByName(\n  injectedNamesToPlugins: NamesToPlugins,\n): void {\n  let isOrderingDirty = false;\n  for (const pluginName in injectedNamesToPlugins) {\n    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n      continue;\n    }\n    const pluginModule = injectedNamesToPlugins[pluginName];\n    if (\n      !namesToPlugins.hasOwnProperty(pluginName) ||\n      namesToPlugins[pluginName] !== pluginModule\n    ) {\n      invariant(\n        !namesToPlugins[pluginName],\n        'EventPluginRegistry: Cannot inject two different event plugins ' +\n          'using the same name, `%s`.',\n        pluginName,\n      );\n      namesToPlugins[pluginName] = pluginModule;\n      isOrderingDirty = true;\n    }\n  }\n  if (isOrderingDirty) {\n    recomputePluginOrdering();\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {invokeGuardedCallbackAndCatchFirstError} from 'shared/ReactErrorUtils';\nimport invariant from 'shared/invariant';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nexport let getFiberCurrentPropsFromNode = null;\nexport let getInstanceFromNode = null;\nexport let getNodeFromInstance = null;\n\nexport function setComponentTree(\n  getFiberCurrentPropsFromNodeImpl,\n  getInstanceFromNodeImpl,\n  getNodeFromInstanceImpl,\n) {\n  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\n  getInstanceFromNode = getInstanceFromNodeImpl;\n  getNodeFromInstance = getNodeFromInstanceImpl;\n  if (__DEV__) {\n    warningWithoutStack(\n      getNodeFromInstance && getInstanceFromNode,\n      'EventPluginUtils.setComponentTree(...): Injected ' +\n        'module is missing getNodeFromInstance or getInstanceFromNode.',\n    );\n  }\n}\n\nlet validateEventDispatches;\nif (__DEV__) {\n  validateEventDispatches = function(event) {\n    const dispatchListeners = event._dispatchListeners;\n    const dispatchInstances = event._dispatchInstances;\n\n    const listenersIsArr = Array.isArray(dispatchListeners);\n    const listenersLen = listenersIsArr\n      ? dispatchListeners.length\n      : dispatchListeners\n        ? 1\n        : 0;\n\n    const instancesIsArr = Array.isArray(dispatchInstances);\n    const instancesLen = instancesIsArr\n      ? dispatchInstances.length\n      : dispatchInstances\n        ? 1\n        : 0;\n\n    warningWithoutStack(\n      instancesIsArr === listenersIsArr && instancesLen === listenersLen,\n      'EventPluginUtils: Invalid `event`.',\n    );\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nfunction executeDispatch(event, listener, inst) {\n  const type = event.type || 'unknown-event';\n  event.currentTarget = getNodeFromInstance(inst);\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nexport function executeDispatchesInOrder(event) {\n  const dispatchListeners = event._dispatchListeners;\n  const dispatchInstances = event._dispatchInstances;\n  if (__DEV__) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (let i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  const dispatchListeners = event._dispatchListeners;\n  const dispatchInstances = event._dispatchInstances;\n  if (__DEV__) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (let i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nexport function executeDispatchesInOrderStopAtTrue(event) {\n  const ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nexport function executeDirectDispatch(event) {\n  if (__DEV__) {\n    validateEventDispatches(event);\n  }\n  const dispatchListener = event._dispatchListeners;\n  const dispatchInstance = event._dispatchInstances;\n  invariant(\n    !Array.isArray(dispatchListener),\n    'executeDirectDispatch(...): Invalid `event`.',\n  );\n  event.currentTarget = dispatchListener\n    ? getNodeFromInstance(dispatchInstance)\n    : null;\n  const res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nexport function hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto<T>(\n  current: ?(Array<T> | T),\n  next: T | Array<T>,\n): T | Array<T> {\n  invariant(\n    next != null,\n    'accumulateInto(...): Accumulated items must not be null or undefined.',\n  );\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nexport default accumulateInto;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n * @param {function} cb Callback invoked with each element or a collection.\n * @param {?} [scope] Scope used as `this` in a callback.\n */\nfunction forEachAccumulated<T>(\n  arr: ?(Array<T> | T),\n  cb: (elem: T) => void,\n  scope: ?any,\n) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nexport default forEachAccumulated;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport {rethrowCaughtError} from 'shared/ReactErrorUtils';\nimport invariant from 'shared/invariant';\n\nimport {\n  injectEventPluginOrder,\n  injectEventPluginsByName,\n  plugins,\n} from './EventPluginRegistry';\nimport {\n  executeDispatchesInOrder,\n  getFiberCurrentPropsFromNode,\n} from './EventPluginUtils';\nimport accumulateInto from './accumulateInto';\nimport forEachAccumulated from './forEachAccumulated';\n\nimport type {PluginModule} from './PluginModuleType';\nimport type {ReactSyntheticEvent} from './ReactSyntheticEventType';\nimport type {Fiber} from 'react-reconciler/src/ReactFiber';\nimport type {AnyNativeEvent} from './PluginModuleType';\nimport type {TopLevelType} from './TopLevelEventTypes';\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nlet eventQueue: ?(Array<ReactSyntheticEvent> | ReactSyntheticEvent) = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\nconst executeDispatchesAndRelease = function(event: ReactSyntheticEvent) {\n  if (event) {\n    executeDispatchesInOrder(event);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nconst executeDispatchesAndReleaseTopLevel = function(e) {\n  return executeDispatchesAndRelease(e);\n};\n\nfunction isInteractive(tag) {\n  return (\n    tag === 'button' ||\n    tag === 'input' ||\n    tag === 'select' ||\n    tag === 'textarea'\n  );\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\n\n/**\n * Methods for injecting dependencies.\n */\nexport const injection = {\n  /**\n   * @param {array} InjectedEventPluginOrder\n   * @public\n   */\n  injectEventPluginOrder,\n\n  /**\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   */\n  injectEventPluginsByName,\n};\n\n/**\n * @param {object} inst The instance, which is the source of events.\n * @param {string} registrationName Name of listener (e.g. `onClick`).\n * @return {?function} The stored callback.\n */\nexport function getListener(inst: Fiber, registrationName: string) {\n  let listener;\n\n  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n  // live here; needs to be moved to a better place soon\n  const stateNode = inst.stateNode;\n  if (!stateNode) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n  const props = getFiberCurrentPropsFromNode(stateNode);\n  if (!props) {\n    // Work in progress.\n    return null;\n  }\n  listener = props[registrationName];\n  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {\n    return null;\n  }\n  invariant(\n    !listener || typeof listener === 'function',\n    'Expected `%s` listener to be a function, instead got a value of `%s` type.',\n    registrationName,\n    typeof listener,\n  );\n  return listener;\n}\n\n/**\n * Allows registered plugins an opportunity to extract events from top-level\n * native browser events.\n *\n * @return {*} An accumulation of synthetic events.\n * @internal\n */\nfunction extractEvents(\n  topLevelType: TopLevelType,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: EventTarget,\n): Array<ReactSyntheticEvent> | ReactSyntheticEvent | null {\n  let events = null;\n  for (let i = 0; i < plugins.length; i++) {\n    // Not every plugin in the ordering may be loaded at runtime.\n    const possiblePlugin: PluginModule<AnyNativeEvent> = plugins[i];\n    if (possiblePlugin) {\n      const extractedEvents = possiblePlugin.extractEvents(\n        topLevelType,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      if (extractedEvents) {\n        events = accumulateInto(events, extractedEvents);\n      }\n    }\n  }\n  return events;\n}\n\nexport function runEventsInBatch(\n  events: Array<ReactSyntheticEvent> | ReactSyntheticEvent | null,\n) {\n  if (events !== null) {\n    eventQueue = accumulateInto(eventQueue, events);\n  }\n\n  // Set `eventQueue` to null before processing it so that we can tell if more\n  // events get enqueued while processing.\n  const processingEventQueue = eventQueue;\n  eventQueue = null;\n\n  if (!processingEventQueue) {\n    return;\n  }\n\n  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n  invariant(\n    !eventQueue,\n    'processEventQueue(): Additional events were enqueued while processing ' +\n      'an event queue. Support for this has not yet been implemented.',\n  );\n  // This would be a good time to rethrow if any of the event handlers threw.\n  rethrowCaughtError();\n}\n\nexport function runExtractedEventsInBatch(\n  topLevelType: TopLevelType,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: EventTarget,\n) {\n  const events = extractEvents(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  );\n  runEventsInBatch(events);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type WorkTag =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18;\n\nexport const FunctionComponent = 0;\nexport const ClassComponent = 1;\nexport const IndeterminateComponent = 2; // Before we know whether it is function or class\nexport const HostRoot = 3; // Root of a host tree. Could be nested inside another node.\nexport const HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\nexport const HostComponent = 5;\nexport const HostText = 6;\nexport const Fragment = 7;\nexport const Mode = 8;\nexport const ContextConsumer = 9;\nexport const ContextProvider = 10;\nexport const ForwardRef = 11;\nexport const Profiler = 12;\nexport const SuspenseComponent = 13;\nexport const MemoComponent = 14;\nexport const SimpleMemoComponent = 15;\nexport const LazyComponent = 16;\nexport const IncompleteClassComponent = 17;\nexport const DehydratedSuspenseComponent = 18;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {HostComponent, HostText} from 'shared/ReactWorkTags';\nimport invariant from 'shared/invariant';\n\nconst randomKey = Math.random()\n  .toString(36)\n  .slice(2);\nconst internalInstanceKey = '__reactInternalInstance$' + randomKey;\nconst internalEventHandlersKey = '__reactEventHandlers$' + randomKey;\n\nexport function precacheFiberNode(hostInst, node) {\n  node[internalInstanceKey] = hostInst;\n}\n\n/**\n * Given a DOM node, return the closest ReactDOMComponent or\n * ReactDOMTextComponent instance ancestor.\n */\nexport function getClosestInstanceFromNode(node) {\n  if (node[internalInstanceKey]) {\n    return node[internalInstanceKey];\n  }\n\n  while (!node[internalInstanceKey]) {\n    if (node.parentNode) {\n      node = node.parentNode;\n    } else {\n      // Top of the tree. This node must not be part of a React tree (or is\n      // unmounted, potentially).\n      return null;\n    }\n  }\n\n  let inst = node[internalInstanceKey];\n  if (inst.tag === HostComponent || inst.tag === HostText) {\n    // In Fiber, this will always be the deepest root.\n    return inst;\n  }\n\n  return null;\n}\n\n/**\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n * instance, or null if the node was not rendered by this React.\n */\nexport function getInstanceFromNode(node) {\n  const inst = node[internalInstanceKey];\n  if (inst) {\n    if (inst.tag === HostComponent || inst.tag === HostText) {\n      return inst;\n    } else {\n      return null;\n    }\n  }\n  return null;\n}\n\n/**\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n * DOM node.\n */\nexport function getNodeFromInstance(inst) {\n  if (inst.tag === HostComponent || inst.tag === HostText) {\n    // In Fiber this, is just the state node right now. We assume it will be\n    // a host component or host text.\n    return inst.stateNode;\n  }\n\n  // Without this first invariant, passing a non-DOM-component triggers the next\n  // invariant for a missing parent, which is super confusing.\n  invariant(false, 'getNodeFromInstance: Invalid argument.');\n}\n\nexport function getFiberCurrentPropsFromNode(node) {\n  return node[internalEventHandlersKey] || null;\n}\n\nexport function updateFiberProps(node, props) {\n  node[internalEventHandlersKey] = props;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {HostComponent} from './ReactWorkTags';\n\nfunction getParent(inst) {\n  do {\n    inst = inst.return;\n    // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n  if (inst) {\n    return inst;\n  }\n  return null;\n}\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nexport function getLowestCommonAncestor(instA, instB) {\n  let depthA = 0;\n  for (let tempA = instA; tempA; tempA = getParent(tempA)) {\n    depthA++;\n  }\n  let depthB = 0;\n  for (let tempB = instB; tempB; tempB = getParent(tempB)) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    instA = getParent(instA);\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    instB = getParent(instB);\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  let depth = depthA;\n  while (depth--) {\n    if (instA === instB || instA === instB.alternate) {\n      return instA;\n    }\n    instA = getParent(instA);\n    instB = getParent(instB);\n  }\n  return null;\n}\n\n/**\n * Return if A is an ancestor of B.\n */\nexport function isAncestor(instA, instB) {\n  while (instB) {\n    if (instA === instB || instA === instB.alternate) {\n      return true;\n    }\n    instB = getParent(instB);\n  }\n  return false;\n}\n\n/**\n * Return the parent instance of the passed-in instance.\n */\nexport function getParentInstance(inst) {\n  return getParent(inst);\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nexport function traverseTwoPhase(inst, fn, arg) {\n  const path = [];\n  while (inst) {\n    path.push(inst);\n    inst = getParent(inst);\n  }\n  let i;\n  for (i = path.length; i-- > 0; ) {\n    fn(path[i], 'captured', arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\n/**\n * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n * should would receive a `mouseEnter` or `mouseLeave` event.\n *\n * Does not invoke the callback on the nearest common ancestor because nothing\n * \"entered\" or \"left\" that element.\n */\nexport function traverseEnterLeave(from, to, fn, argFrom, argTo) {\n  const common = from && to ? getLowestCommonAncestor(from, to) : null;\n  const pathFrom = [];\n  while (true) {\n    if (!from) {\n      break;\n    }\n    if (from === common) {\n      break;\n    }\n    const alternate = from.alternate;\n    if (alternate !== null && alternate === common) {\n      break;\n    }\n    pathFrom.push(from);\n    from = getParent(from);\n  }\n  const pathTo = [];\n  while (true) {\n    if (!to) {\n      break;\n    }\n    if (to === common) {\n      break;\n    }\n    const alternate = to.alternate;\n    if (alternate !== null && alternate === common) {\n      break;\n    }\n    pathTo.push(to);\n    to = getParent(to);\n  }\n  for (let i = 0; i < pathFrom.length; i++) {\n    fn(pathFrom[i], 'bubbled', argFrom);\n  }\n  for (let i = pathTo.length; i-- > 0; ) {\n    fn(pathTo[i], 'captured', argTo);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  getParentInstance,\n  traverseTwoPhase,\n  traverseEnterLeave,\n} from 'shared/ReactTreeTraversal';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nimport {getListener} from './EventPluginHub';\nimport accumulateInto from './accumulateInto';\nimport forEachAccumulated from './forEachAccumulated';\n\ntype PropagationPhases = 'bubbled' | 'captured';\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(inst, event, propagationPhase: PropagationPhases) {\n  const registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing even a\n * single one.\n */\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  if (__DEV__) {\n    warningWithoutStack(inst, 'Dispatching inst must not be null');\n  }\n  const listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(\n      event._dispatchListeners,\n      listener,\n    );\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We cannot perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n */\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    const targetInst = event._targetInst;\n    const parentInst = targetInst ? getParentInstance(targetInst) : null;\n    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    const registrationName = event.dispatchConfig.registrationName;\n    const listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(\n        event._dispatchListeners,\n        listener,\n      );\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nexport function accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nexport function accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nexport function accumulateEnterLeaveDispatches(leave, enter, from, to) {\n  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n}\n\nexport function accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport const canUseDOM: boolean = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\nfunction makePrefixMap(styleProp, eventName) {\n  const prefixes = {};\n\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n\n  return prefixes;\n}\n\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\nconst vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd'),\n};\n\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\nconst prefixedEventNames = {};\n\n/**\n * Element to check for prefixes on.\n */\nlet style = {};\n\n/**\n * Bootstrap if a DOM exists.\n */\nif (canUseDOM) {\n  style = document.createElement('div').style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  }\n\n  // Same as above\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  const prefixMap = vendorPrefixes[eventName];\n\n  for (const styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return (prefixedEventNames[eventName] = prefixMap[styleProp]);\n    }\n  }\n\n  return eventName;\n}\n\nexport default getVendorPrefixedEventName;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DOMTopLevelEventType} from 'react-events/TopLevelEventTypes';\n\nimport {\n  unsafeCastStringToDOMTopLevelType,\n  unsafeCastDOMTopLevelTypeToString,\n} from 'react-events/TopLevelEventTypes';\nimport getVendorPrefixedEventName from './getVendorPrefixedEventName';\n\n/**\n * To identify top level events in ReactDOM, we use constants defined by this\n * module. This is the only module that uses the unsafe* methods to express\n * that the constants actually correspond to the browser event names. This lets\n * us save some bundle size by avoiding a top level type -> event name map.\n * The rest of ReactDOM code should import top level types from this file.\n */\nexport const TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');\nexport const TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(\n  getVendorPrefixedEventName('animationend'),\n);\nexport const TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(\n  getVendorPrefixedEventName('animationiteration'),\n);\nexport const TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(\n  getVendorPrefixedEventName('animationstart'),\n);\nexport const TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');\nexport const TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');\nexport const TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType(\n  'canplaythrough',\n);\nexport const TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');\nexport const TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');\nexport const TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');\nexport const TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');\nexport const TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType(\n  'compositionend',\n);\nexport const TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType(\n  'compositionstart',\n);\nexport const TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType(\n  'compositionupdate',\n);\nexport const TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType(\n  'contextmenu',\n);\nexport const TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');\nexport const TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');\nexport const TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');\nexport const TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');\nexport const TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');\nexport const TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');\nexport const TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');\nexport const TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');\nexport const TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');\nexport const TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');\nexport const TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');\nexport const TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');\nexport const TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType(\n  'durationchange',\n);\nexport const TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');\nexport const TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');\nexport const TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');\nexport const TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');\nexport const TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');\nexport const TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType(\n  'gotpointercapture',\n);\nexport const TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');\nexport const TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');\nexport const TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');\nexport const TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');\nexport const TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');\nexport const TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');\nexport const TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');\nexport const TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');\nexport const TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType(\n  'loadedmetadata',\n);\nexport const TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType(\n  'lostpointercapture',\n);\nexport const TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');\nexport const TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');\nexport const TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');\nexport const TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');\nexport const TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');\nexport const TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');\nexport const TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');\nexport const TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');\nexport const TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');\nexport const TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType(\n  'pointercancel',\n);\nexport const TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType(\n  'pointerdown',\n);\nexport const TOP_POINTER_ENTER = unsafeCastStringToDOMTopLevelType(\n  'pointerenter',\n);\nexport const TOP_POINTER_LEAVE = unsafeCastStringToDOMTopLevelType(\n  'pointerleave',\n);\nexport const TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType(\n  'pointermove',\n);\nexport const TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');\nexport const TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType(\n  'pointerover',\n);\nexport const TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');\nexport const TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');\nexport const TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');\nexport const TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');\nexport const TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');\nexport const TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');\nexport const TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');\nexport const TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType(\n  'selectionchange',\n);\nexport const TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');\nexport const TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');\nexport const TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');\nexport const TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');\nexport const TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');\nexport const TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');\nexport const TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType(\n  'touchcancel',\n);\nexport const TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');\nexport const TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');\nexport const TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');\nexport const TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(\n  getVendorPrefixedEventName('transitionend'),\n);\nexport const TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType(\n  'volumechange',\n);\nexport const TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');\nexport const TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');\n\n// List of events that need to be individually attached to media elements.\n// Note that events in this list will *not* be listened to at the top level\n// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.\nexport const mediaEventTypes = [\n  TOP_ABORT,\n  TOP_CAN_PLAY,\n  TOP_CAN_PLAY_THROUGH,\n  TOP_DURATION_CHANGE,\n  TOP_EMPTIED,\n  TOP_ENCRYPTED,\n  TOP_ENDED,\n  TOP_ERROR,\n  TOP_LOADED_DATA,\n  TOP_LOADED_METADATA,\n  TOP_LOAD_START,\n  TOP_PAUSE,\n  TOP_PLAY,\n  TOP_PLAYING,\n  TOP_PROGRESS,\n  TOP_RATE_CHANGE,\n  TOP_SEEKED,\n  TOP_SEEKING,\n  TOP_STALLED,\n  TOP_SUSPEND,\n  TOP_TIME_UPDATE,\n  TOP_VOLUME_CHANGE,\n  TOP_WAITING,\n];\n\nexport function getRawEventName(topLevelType: DOMTopLevelEventType): string {\n  return unsafeCastDOMTopLevelTypeToString(topLevelType);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * These variables store information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n *\n */\n\nlet root = null;\nlet startText = null;\nlet fallbackText = null;\n\nexport function initialize(nativeEventTarget) {\n  root = nativeEventTarget;\n  startText = getText();\n  return true;\n}\n\nexport function reset() {\n  root = null;\n  startText = null;\n  fallbackText = null;\n}\n\nexport function getData() {\n  if (fallbackText) {\n    return fallbackText;\n  }\n\n  let start;\n  const startValue = startText;\n  const startLength = startValue.length;\n  let end;\n  const endValue = getText();\n  const endLength = endValue.length;\n\n  for (start = 0; start < startLength; start++) {\n    if (startValue[start] !== endValue[start]) {\n      break;\n    }\n  }\n\n  const minEnd = startLength - start;\n  for (end = 1; end <= minEnd; end++) {\n    if (startValue[startLength - end] !== endValue[endLength - end]) {\n      break;\n    }\n  }\n\n  const sliceTail = end > 1 ? 1 - end : undefined;\n  fallbackText = endValue.slice(start, sliceTail);\n  return fallbackText;\n}\n\nexport function getText() {\n  if ('value' in root) {\n    return root.value;\n  }\n  return root.textContent;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint valid-typeof: 0 */\n\nimport invariant from 'shared/invariant';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nconst EVENT_POOL_SIZE = 10;\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: function() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null,\n};\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n}\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  if (__DEV__) {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n    delete this.isDefaultPrevented;\n    delete this.isPropagationStopped;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n\n  const Interface = this.constructor.Interface;\n  for (const propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    if (__DEV__) {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    const normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  const defaultPrevented =\n    nativeEvent.defaultPrevented != null\n      ? nativeEvent.defaultPrevented\n      : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = functionThatReturnsFalse;\n  }\n  this.isPropagationStopped = functionThatReturnsFalse;\n  return this;\n}\n\nObject.assign(SyntheticEvent.prototype, {\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    const event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  },\n\n  stopPropagation: function() {\n    const event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = functionThatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = functionThatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: functionThatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    const Interface = this.constructor.Interface;\n    for (const propName in Interface) {\n      if (__DEV__) {\n        Object.defineProperty(\n          this,\n          propName,\n          getPooledWarningPropertyDefinition(propName, Interface[propName]),\n        );\n      } else {\n        this[propName] = null;\n      }\n    }\n    this.dispatchConfig = null;\n    this._targetInst = null;\n    this.nativeEvent = null;\n    this.isDefaultPrevented = functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    this._dispatchListeners = null;\n    this._dispatchInstances = null;\n    if (__DEV__) {\n      Object.defineProperty(\n        this,\n        'nativeEvent',\n        getPooledWarningPropertyDefinition('nativeEvent', null),\n      );\n      Object.defineProperty(\n        this,\n        'isDefaultPrevented',\n        getPooledWarningPropertyDefinition(\n          'isDefaultPrevented',\n          functionThatReturnsFalse,\n        ),\n      );\n      Object.defineProperty(\n        this,\n        'isPropagationStopped',\n        getPooledWarningPropertyDefinition(\n          'isPropagationStopped',\n          functionThatReturnsFalse,\n        ),\n      );\n      Object.defineProperty(\n        this,\n        'preventDefault',\n        getPooledWarningPropertyDefinition('preventDefault', () => {}),\n      );\n      Object.defineProperty(\n        this,\n        'stopPropagation',\n        getPooledWarningPropertyDefinition('stopPropagation', () => {}),\n      );\n    }\n  },\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n */\nSyntheticEvent.extend = function(Interface) {\n  const Super = this;\n\n  const E = function() {};\n  E.prototype = Super.prototype;\n  const prototype = new E();\n\n  function Class() {\n    return Super.apply(this, arguments);\n  }\n  Object.assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = Object.assign({}, Super.Interface, Interface);\n  Class.extend = Super.extend;\n  addEventPoolingTo(Class);\n\n  return Class;\n};\n\naddEventPoolingTo(SyntheticEvent);\n\n/**\n * Helper to nullify syntheticEvent instance properties when destructing\n *\n * @param {String} propName\n * @param {?object} getVal\n * @return {object} defineProperty object\n */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  const isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get,\n  };\n\n  function set(val) {\n    const action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    const action = isFunction\n      ? 'accessing the method'\n      : 'accessing the property';\n    const result = isFunction\n      ? 'This is a no-op function'\n      : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    const warningCondition = false;\n    warningWithoutStack(\n      warningCondition,\n      \"This synthetic event is reused for performance reasons. If you're seeing this, \" +\n        \"you're %s `%s` on a released/nullified synthetic event. %s. \" +\n        'If you must keep the original synthetic event around, use event.persist(). ' +\n        'See https://fb.me/react-event-pooling for more information.',\n      action,\n      propName,\n      result,\n    );\n  }\n}\n\nfunction getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\n  const EventConstructor = this;\n  if (EventConstructor.eventPool.length) {\n    const instance = EventConstructor.eventPool.pop();\n    EventConstructor.call(\n      instance,\n      dispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeInst,\n    );\n    return instance;\n  }\n  return new EventConstructor(\n    dispatchConfig,\n    targetInst,\n    nativeEvent,\n    nativeInst,\n  );\n}\n\nfunction releasePooledEvent(event) {\n  const EventConstructor = this;\n  invariant(\n    event instanceof EventConstructor,\n    'Trying to release an event instance into a pool of a different type.',\n  );\n  event.destructor();\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n    EventConstructor.eventPool.push(event);\n  }\n}\n\nfunction addEventPoolingTo(EventConstructor) {\n  EventConstructor.eventPool = [];\n  EventConstructor.getPooled = getPooledEvent;\n  EventConstructor.release = releasePooledEvent;\n}\n\nexport default SyntheticEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from 'react-events/SyntheticEvent';\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nconst SyntheticCompositionEvent = SyntheticEvent.extend({\n  data: null,\n});\n\nexport default SyntheticCompositionEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from 'react-events/SyntheticEvent';\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nconst SyntheticInputEvent = SyntheticEvent.extend({\n  data: null,\n});\n\nexport default SyntheticInputEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {TopLevelType} from 'react-events/TopLevelEventTypes';\n\nimport {accumulateTwoPhaseDispatches} from 'react-events/EventPropagators';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\nimport {\n  TOP_BLUR,\n  TOP_COMPOSITION_START,\n  TOP_COMPOSITION_END,\n  TOP_COMPOSITION_UPDATE,\n  TOP_KEY_DOWN,\n  TOP_KEY_PRESS,\n  TOP_KEY_UP,\n  TOP_MOUSE_DOWN,\n  TOP_TEXT_INPUT,\n  TOP_PASTE,\n} from './DOMTopLevelEventTypes';\nimport {\n  getData as FallbackCompositionStateGetData,\n  initialize as FallbackCompositionStateInitialize,\n  reset as FallbackCompositionStateReset,\n} from './FallbackCompositionState';\nimport SyntheticCompositionEvent from './SyntheticCompositionEvent';\nimport SyntheticInputEvent from './SyntheticInputEvent';\n\nconst END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nconst START_KEYCODE = 229;\n\nconst canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;\n\nlet documentMode = null;\nif (canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nconst canUseTextInputEvent =\n  canUseDOM && 'TextEvent' in window && !documentMode;\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nconst useFallbackCompositionData =\n  canUseDOM &&\n  (!canUseCompositionEvent ||\n    (documentMode && documentMode > 8 && documentMode <= 11));\n\nconst SPACEBAR_CODE = 32;\nconst SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\n// Events and their corresponding property names.\nconst eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: 'onBeforeInput',\n      captured: 'onBeforeInputCapture',\n    },\n    dependencies: [\n      TOP_COMPOSITION_END,\n      TOP_KEY_PRESS,\n      TOP_TEXT_INPUT,\n      TOP_PASTE,\n    ],\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionEnd',\n      captured: 'onCompositionEndCapture',\n    },\n    dependencies: [\n      TOP_BLUR,\n      TOP_COMPOSITION_END,\n      TOP_KEY_DOWN,\n      TOP_KEY_PRESS,\n      TOP_KEY_UP,\n      TOP_MOUSE_DOWN,\n    ],\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionStart',\n      captured: 'onCompositionStartCapture',\n    },\n    dependencies: [\n      TOP_BLUR,\n      TOP_COMPOSITION_START,\n      TOP_KEY_DOWN,\n      TOP_KEY_PRESS,\n      TOP_KEY_UP,\n      TOP_MOUSE_DOWN,\n    ],\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionUpdate',\n      captured: 'onCompositionUpdateCapture',\n    },\n    dependencies: [\n      TOP_BLUR,\n      TOP_COMPOSITION_UPDATE,\n      TOP_KEY_DOWN,\n      TOP_KEY_PRESS,\n      TOP_KEY_UP,\n      TOP_MOUSE_DOWN,\n    ],\n  },\n};\n\n// Track whether we've ever handled a keypress on the space key.\nlet hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (\n    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n    // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n    !(nativeEvent.ctrlKey && nativeEvent.altKey)\n  );\n}\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case TOP_COMPOSITION_START:\n      return eventTypes.compositionStart;\n    case TOP_COMPOSITION_END:\n      return eventTypes.compositionEnd;\n    case TOP_COMPOSITION_UPDATE:\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case TOP_KEY_UP:\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n    case TOP_KEY_DOWN:\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n    case TOP_KEY_PRESS:\n    case TOP_MOUSE_DOWN:\n    case TOP_BLUR:\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  const detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n/**\n * Check if a composition event was triggered by Korean IME.\n * Our fallback mode does not work well with IE's Korean IME,\n * so just use native composition events when Korean IME is used.\n * Although CompositionEvent.locale property is deprecated,\n * it is available in IE, where our fallback mode is enabled.\n *\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isUsingKoreanIME(nativeEvent) {\n  return nativeEvent.locale === 'ko';\n}\n\n// Track the current IME composition status, if any.\nlet isComposing = false;\n\n/**\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  let eventType;\n  let fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!isComposing) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!isComposing && eventType === eventTypes.compositionStart) {\n      isComposing = FallbackCompositionStateInitialize(nativeEventTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (isComposing) {\n        fallbackData = FallbackCompositionStateGetData();\n      }\n    }\n  }\n\n  const event = SyntheticCompositionEvent.getPooled(\n    eventType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  );\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    const customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {TopLevelType} topLevelType Number from `TopLevelType`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType: TopLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case TOP_COMPOSITION_END:\n      return getDataFromCustomEvent(nativeEvent);\n    case TOP_KEY_PRESS:\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      const which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case TOP_TEXT_INPUT:\n      // Record the characters to be added to the DOM.\n      const chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to ignore it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {number} topLevelType Number from `TopLevelEventTypes`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType: TopLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  // If composition event is available, we extract a string only at\n  // compositionevent, otherwise extract it at fallback events.\n  if (isComposing) {\n    if (\n      topLevelType === TOP_COMPOSITION_END ||\n      (!canUseCompositionEvent &&\n        isFallbackCompositionEnd(topLevelType, nativeEvent))\n    ) {\n      const chars = FallbackCompositionStateGetData();\n      FallbackCompositionStateReset();\n      isComposing = false;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case TOP_PASTE:\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case TOP_KEY_PRESS:\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (!isKeypressCommand(nativeEvent)) {\n        // IE fires the `keypress` event when a user types an emoji via\n        // Touch keyboard of Windows.  In such a case, the `char` property\n        // holds an emoji character like `\\uD83D\\uDE0A`.  Because its length\n        // is 2, the property `which` does not represent an emoji correctly.\n        // In such a case, we directly return the `char` property instead of\n        // using `which`.\n        if (nativeEvent.char && nativeEvent.char.length > 1) {\n          return nativeEvent.char;\n        } else if (nativeEvent.which) {\n          return String.fromCharCode(nativeEvent.which);\n        }\n      }\n      return null;\n    case TOP_COMPOSITION_END:\n      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)\n        ? null\n        : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  let chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  const event = SyntheticInputEvent.getPooled(\n    eventTypes.beforeInput,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  );\n\n  event.data = chars;\n  accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nconst BeforeInputEventPlugin = {\n  eventTypes: eventTypes,\n\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  ) {\n    const composition = extractCompositionEvent(\n      topLevelType,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n\n    const beforeInput = extractBeforeInputEvent(\n      topLevelType,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n\n    if (composition === null) {\n      return beforeInput;\n    }\n\n    if (beforeInput === null) {\n      return composition;\n    }\n\n    return [composition, beforeInput];\n  },\n};\n\nexport default BeforeInputEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\nimport {\n  getInstanceFromNode,\n  getFiberCurrentPropsFromNode,\n} from './EventPluginUtils';\n\n// Use to restore controlled state after a change event has fired.\n\nlet restoreImpl = null;\nlet restoreTarget = null;\nlet restoreQueue = null;\n\nfunction restoreStateOfTarget(target) {\n  // We perform this translation at the end of the event loop so that we\n  // always receive the correct fiber here\n  const internalInstance = getInstanceFromNode(target);\n  if (!internalInstance) {\n    // Unmounted\n    return;\n  }\n  invariant(\n    typeof restoreImpl === 'function',\n    'setRestoreImplementation() needs to be called to handle a target for controlled ' +\n      'events. This error is likely caused by a bug in React. Please file an issue.',\n  );\n  const props = getFiberCurrentPropsFromNode(internalInstance.stateNode);\n  restoreImpl(internalInstance.stateNode, internalInstance.type, props);\n}\n\nexport function setRestoreImplementation(\n  impl: (domElement: Element, tag: string, props: Object) => void,\n): void {\n  restoreImpl = impl;\n}\n\nexport function enqueueStateRestore(target: EventTarget): void {\n  if (restoreTarget) {\n    if (restoreQueue) {\n      restoreQueue.push(target);\n    } else {\n      restoreQueue = [target];\n    }\n  } else {\n    restoreTarget = target;\n  }\n}\n\nexport function needsStateRestore(): boolean {\n  return restoreTarget !== null || restoreQueue !== null;\n}\n\nexport function restoreStateIfNeeded() {\n  if (!restoreTarget) {\n    return;\n  }\n  const target = restoreTarget;\n  const queuedTargets = restoreQueue;\n  restoreTarget = null;\n  restoreQueue = null;\n\n  restoreStateOfTarget(target);\n  if (queuedTargets) {\n    for (let i = 0; i < queuedTargets.length; i++) {\n      restoreStateOfTarget(queuedTargets[i]);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  needsStateRestore,\n  restoreStateIfNeeded,\n} from './ReactControlledComponent';\n\n// Used as a way to call batchedUpdates when we don't have a reference to\n// the renderer. Such as when we're dispatching events or if third party\n// libraries need to call batchedUpdates. Eventually, this API will go away when\n// everything is batched by default. We'll then have a similar API to opt-out of\n// scheduled work and instead do synchronous work.\n\n// Defaults\nlet _batchedUpdatesImpl = function(fn, bookkeeping) {\n  return fn(bookkeeping);\n};\nlet _interactiveUpdatesImpl = function(fn, a, b) {\n  return fn(a, b);\n};\nlet _flushInteractiveUpdatesImpl = function() {};\n\nlet isBatching = false;\nexport function batchedUpdates(fn, bookkeeping) {\n  if (isBatching) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(bookkeeping);\n  }\n  isBatching = true;\n  try {\n    return _batchedUpdatesImpl(fn, bookkeeping);\n  } finally {\n    // Here we wait until all updates have propagated, which is important\n    // when using controlled components within layers:\n    // https://github.com/facebook/react/issues/1698\n    // Then we restore state of any controlled component.\n    isBatching = false;\n    const controlledComponentsHavePendingUpdates = needsStateRestore();\n    if (controlledComponentsHavePendingUpdates) {\n      // If a controlled event was fired, we may need to restore the state of\n      // the DOM node back to the controlled value. This is necessary when React\n      // bails out of the update without touching the DOM.\n      _flushInteractiveUpdatesImpl();\n      restoreStateIfNeeded();\n    }\n  }\n}\n\nexport function interactiveUpdates(fn, a, b) {\n  return _interactiveUpdatesImpl(fn, a, b);\n}\n\nexport function flushInteractiveUpdates() {\n  return _flushInteractiveUpdatesImpl();\n}\n\nexport function setBatchingImplementation(\n  batchedUpdatesImpl,\n  interactiveUpdatesImpl,\n  flushInteractiveUpdatesImpl,\n) {\n  _batchedUpdatesImpl = batchedUpdatesImpl;\n  _interactiveUpdatesImpl = interactiveUpdatesImpl;\n  _flushInteractiveUpdatesImpl = flushInteractiveUpdatesImpl;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nconst supportedInputTypes: {[key: string]: true | void} = {\n  color: true,\n  date: true,\n  datetime: true,\n  'datetime-local': true,\n  email: true,\n  month: true,\n  number: true,\n  password: true,\n  range: true,\n  search: true,\n  tel: true,\n  text: true,\n  time: true,\n  url: true,\n  week: true,\n};\n\nfunction isTextInputElement(elem: ?HTMLElement): boolean {\n  const nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n  if (nodeName === 'input') {\n    return !!supportedInputTypes[((elem: any): HTMLInputElement).type];\n  }\n\n  if (nodeName === 'textarea') {\n    return true;\n  }\n\n  return false;\n}\n\nexport default isTextInputElement;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * HTML nodeType values that represent the type of the node\n */\n\nexport const ELEMENT_NODE = 1;\nexport const TEXT_NODE = 3;\nexport const COMMENT_NODE = 8;\nexport const DOCUMENT_NODE = 9;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\nfunction getEventTarget(nativeEvent) {\n  // Fallback to nativeEvent.srcElement for IE9\n  // https://github.com/facebook/react/issues/12506\n  let target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === TEXT_NODE ? target.parentNode : target;\n}\n\nexport default getEventTarget;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  const eventName = 'on' + eventNameSuffix;\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  return isSupported;\n}\n\nexport default isEventSupported;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ntype ValueTracker = {\n  getValue(): string,\n  setValue(value: string): void,\n  stopTracking(): void,\n};\ntype WrapperState = {_valueTracker?: ?ValueTracker};\ntype ElementWithValueTracker = HTMLInputElement & WrapperState;\n\nfunction isCheckable(elem: HTMLInputElement) {\n  const type = elem.type;\n  const nodeName = elem.nodeName;\n  return (\n    nodeName &&\n    nodeName.toLowerCase() === 'input' &&\n    (type === 'checkbox' || type === 'radio')\n  );\n}\n\nfunction getTracker(node: ElementWithValueTracker) {\n  return node._valueTracker;\n}\n\nfunction detachTracker(node: ElementWithValueTracker) {\n  node._valueTracker = null;\n}\n\nfunction getValueFromNode(node: HTMLInputElement): string {\n  let value = '';\n  if (!node) {\n    return value;\n  }\n\n  if (isCheckable(node)) {\n    value = node.checked ? 'true' : 'false';\n  } else {\n    value = node.value;\n  }\n\n  return value;\n}\n\nfunction trackValueOnNode(node: any): ?ValueTracker {\n  const valueField = isCheckable(node) ? 'checked' : 'value';\n  const descriptor = Object.getOwnPropertyDescriptor(\n    node.constructor.prototype,\n    valueField,\n  );\n\n  let currentValue = '' + node[valueField];\n\n  // if someone has already defined a value or Safari, then bail\n  // and don't track value will cause over reporting of changes,\n  // but it's better then a hard failure\n  // (needed for certain tests that spyOn input values and Safari)\n  if (\n    node.hasOwnProperty(valueField) ||\n    typeof descriptor === 'undefined' ||\n    typeof descriptor.get !== 'function' ||\n    typeof descriptor.set !== 'function'\n  ) {\n    return;\n  }\n  const {get, set} = descriptor;\n  Object.defineProperty(node, valueField, {\n    configurable: true,\n    get: function() {\n      return get.call(this);\n    },\n    set: function(value) {\n      currentValue = '' + value;\n      set.call(this, value);\n    },\n  });\n  // We could've passed this the first time\n  // but it triggers a bug in IE11 and Edge 14/15.\n  // Calling defineProperty() again should be equivalent.\n  // https://github.com/facebook/react/issues/11768\n  Object.defineProperty(node, valueField, {\n    enumerable: descriptor.enumerable,\n  });\n\n  const tracker = {\n    getValue() {\n      return currentValue;\n    },\n    setValue(value) {\n      currentValue = '' + value;\n    },\n    stopTracking() {\n      detachTracker(node);\n      delete node[valueField];\n    },\n  };\n  return tracker;\n}\n\nexport function track(node: ElementWithValueTracker) {\n  if (getTracker(node)) {\n    return;\n  }\n\n  // TODO: Once it's just Fiber we can move this to node._wrapperState\n  node._valueTracker = trackValueOnNode(node);\n}\n\nexport function updateValueIfChanged(node: ElementWithValueTracker) {\n  if (!node) {\n    return false;\n  }\n\n  const tracker = getTracker(node);\n  // if there is no tracker at this point it's unlikely\n  // that trying again will succeed\n  if (!tracker) {\n    return true;\n  }\n\n  const lastValue = tracker.getValue();\n  const nextValue = getValueFromNode(node);\n  if (nextValue !== lastValue) {\n    tracker.setValue(nextValue);\n    return true;\n  }\n  return false;\n}\n\nexport function stopTracking(node: ElementWithValueTracker) {\n  const tracker = getTracker(node);\n  if (tracker) {\n    tracker.stopTracking();\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  HostRoot,\n  HostPortal,\n  HostText,\n  Fragment,\n  ContextProvider,\n  ContextConsumer,\n} from 'shared/ReactWorkTags';\nimport describeComponentFrame from 'shared/describeComponentFrame';\nimport getComponentName from 'shared/getComponentName';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\ntype LifeCyclePhase = 'render' | 'getChildContext';\n\nfunction describeFiber(fiber: Fiber): string {\n  switch (fiber.tag) {\n    case HostRoot:\n    case HostPortal:\n    case HostText:\n    case Fragment:\n    case ContextProvider:\n    case ContextConsumer:\n      return '';\n    default:\n      const owner = fiber._debugOwner;\n      const source = fiber._debugSource;\n      const name = getComponentName(fiber.type);\n      let ownerName = null;\n      if (owner) {\n        ownerName = getComponentName(owner.type);\n      }\n      return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nexport function getStackByFiberInDevAndProd(workInProgress: Fiber): string {\n  let info = '';\n  let node = workInProgress;\n  do {\n    info += describeFiber(node);\n    node = node.return;\n  } while (node);\n  return info;\n}\n\nexport let current: Fiber | null = null;\nexport let phase: LifeCyclePhase | null = null;\n\nexport function getCurrentFiberOwnerNameInDevOrNull(): string | null {\n  if (__DEV__) {\n    if (current === null) {\n      return null;\n    }\n    const owner = current._debugOwner;\n    if (owner !== null && typeof owner !== 'undefined') {\n      return getComponentName(owner.type);\n    }\n  }\n  return null;\n}\n\nexport function getCurrentFiberStackInDev(): string {\n  if (__DEV__) {\n    if (current === null) {\n      return '';\n    }\n    // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n    return getStackByFiberInDevAndProd(current);\n  }\n  return '';\n}\n\nexport function resetCurrentFiber() {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = null;\n    current = null;\n    phase = null;\n  }\n}\n\nexport function setCurrentFiber(fiber: Fiber) {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;\n    current = fiber;\n    phase = null;\n  }\n}\n\nexport function setCurrentPhase(lifeCyclePhase: LifeCyclePhase | null) {\n  if (__DEV__) {\n    phase = lifeCyclePhase;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport warning from 'shared/warning';\n\ntype PropertyType = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\n// A reserved attribute.\n// It is handled by React separately and shouldn't be written to the DOM.\nexport const RESERVED = 0;\n\n// A simple string attribute.\n// Attributes that aren't in the whitelist are presumed to have this type.\nexport const STRING = 1;\n\n// A string attribute that accepts booleans in React. In HTML, these are called\n// \"enumerated\" attributes with \"true\" and \"false\" as possible values.\n// When true, it should be set to a \"true\" string.\n// When false, it should be set to a \"false\" string.\nexport const BOOLEANISH_STRING = 2;\n\n// A real boolean attribute.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\nexport const BOOLEAN = 3;\n\n// An attribute that can be used as a flag as well as with a value.\n// When true, it should be present (set either to an empty string or its name).\n// When false, it should be omitted.\n// For any other value, should be present with that value.\nexport const OVERLOADED_BOOLEAN = 4;\n\n// An attribute that must be numeric or parse as a numeric.\n// When falsy, it should be removed.\nexport const NUMERIC = 5;\n\n// An attribute that must be positive numeric or parse as a positive numeric.\n// When falsy, it should be removed.\nexport const POSITIVE_NUMERIC = 6;\n\nexport type PropertyInfo = {|\n  +acceptsBooleans: boolean,\n  +attributeName: string,\n  +attributeNamespace: string | null,\n  +mustUseProperty: boolean,\n  +propertyName: string,\n  +type: PropertyType,\n|};\n\n/* eslint-disable max-len */\nexport const ATTRIBUTE_NAME_START_CHAR =\n  ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\nexport const ATTRIBUTE_NAME_CHAR =\n  ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\nexport const ID_ATTRIBUTE_NAME = 'data-reactid';\nexport const ROOT_ATTRIBUTE_NAME = 'data-reactroot';\nexport const VALID_ATTRIBUTE_NAME_REGEX = new RegExp(\n  '^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$',\n);\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst illegalAttributeNameCache = {};\nconst validatedAttributeNameCache = {};\n\nexport function isAttributeNameSafe(attributeName: string): boolean {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {\n    return true;\n  }\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  if (__DEV__) {\n    warning(false, 'Invalid attribute name: `%s`', attributeName);\n  }\n  return false;\n}\n\nexport function shouldIgnoreAttribute(\n  name: string,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (propertyInfo !== null) {\n    return propertyInfo.type === RESERVED;\n  }\n  if (isCustomComponentTag) {\n    return false;\n  }\n  if (\n    name.length > 2 &&\n    (name[0] === 'o' || name[0] === 'O') &&\n    (name[1] === 'n' || name[1] === 'N')\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function shouldRemoveAttributeWithWarning(\n  name: string,\n  value: mixed,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (propertyInfo !== null && propertyInfo.type === RESERVED) {\n    return false;\n  }\n  switch (typeof value) {\n    case 'function':\n    // $FlowIssue symbol is perfectly valid here\n    case 'symbol': // eslint-disable-line\n      return true;\n    case 'boolean': {\n      if (isCustomComponentTag) {\n        return false;\n      }\n      if (propertyInfo !== null) {\n        return !propertyInfo.acceptsBooleans;\n      } else {\n        const prefix = name.toLowerCase().slice(0, 5);\n        return prefix !== 'data-' && prefix !== 'aria-';\n      }\n    }\n    default:\n      return false;\n  }\n}\n\nexport function shouldRemoveAttribute(\n  name: string,\n  value: mixed,\n  propertyInfo: PropertyInfo | null,\n  isCustomComponentTag: boolean,\n): boolean {\n  if (value === null || typeof value === 'undefined') {\n    return true;\n  }\n  if (\n    shouldRemoveAttributeWithWarning(\n      name,\n      value,\n      propertyInfo,\n      isCustomComponentTag,\n    )\n  ) {\n    return true;\n  }\n  if (isCustomComponentTag) {\n    return false;\n  }\n  if (propertyInfo !== null) {\n    switch (propertyInfo.type) {\n      case BOOLEAN:\n        return !value;\n      case OVERLOADED_BOOLEAN:\n        return value === false;\n      case NUMERIC:\n        return isNaN(value);\n      case POSITIVE_NUMERIC:\n        return isNaN(value) || (value: any) < 1;\n    }\n  }\n  return false;\n}\n\nexport function getPropertyInfo(name: string): PropertyInfo | null {\n  return properties.hasOwnProperty(name) ? properties[name] : null;\n}\n\nfunction PropertyInfoRecord(\n  name: string,\n  type: PropertyType,\n  mustUseProperty: boolean,\n  attributeName: string,\n  attributeNamespace: string | null,\n) {\n  this.acceptsBooleans =\n    type === BOOLEANISH_STRING ||\n    type === BOOLEAN ||\n    type === OVERLOADED_BOOLEAN;\n  this.attributeName = attributeName;\n  this.attributeNamespace = attributeNamespace;\n  this.mustUseProperty = mustUseProperty;\n  this.propertyName = name;\n  this.type = type;\n}\n\n// When adding attributes to this list, be sure to also add them to\n// the `possibleStandardNames` module to ensure casing and incorrect\n// name warnings.\nconst properties = {};\n\n// These props are reserved by React. They shouldn't be written to the DOM.\n[\n  'children',\n  'dangerouslySetInnerHTML',\n  // TODO: This prevents the assignment of defaultValue to regular\n  // elements (not just inputs). Now that ReactDOMInput assigns to the\n  // defaultValue property -- do we need this?\n  'defaultValue',\n  'defaultChecked',\n  'innerHTML',\n  'suppressContentEditableWarning',\n  'suppressHydrationWarning',\n  'style',\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    RESERVED,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n  );\n});\n\n// A few React string attributes have a different name.\n// This is a mapping from React prop names to the attribute names.\n[\n  ['acceptCharset', 'accept-charset'],\n  ['className', 'class'],\n  ['htmlFor', 'for'],\n  ['httpEquiv', 'http-equiv'],\n].forEach(([name, attributeName]) => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName, // attributeName\n    null, // attributeNamespace\n  );\n});\n\n// These are \"enumerated\" HTML attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEANISH_STRING,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n  );\n});\n\n// These are \"enumerated\" SVG attributes that accept \"true\" and \"false\".\n// In React, we let users pass `true` and `false` even though technically\n// these aren't boolean attributes (they are coerced to strings).\n// Since these are SVG attributes, their attribute names are case-sensitive.\n[\n  'autoReverse',\n  'externalResourcesRequired',\n  'focusable',\n  'preserveAlpha',\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEANISH_STRING,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n  );\n});\n\n// These are HTML boolean attributes.\n[\n  'allowFullScreen',\n  'async',\n  // Note: there is a special case that prevents it from being written to the DOM\n  // on the client side because the browsers are inconsistent. Instead we call focus().\n  'autoFocus',\n  'autoPlay',\n  'controls',\n  'default',\n  'defer',\n  'disabled',\n  'formNoValidate',\n  'hidden',\n  'loop',\n  'noModule',\n  'noValidate',\n  'open',\n  'playsInline',\n  'readOnly',\n  'required',\n  'reversed',\n  'scoped',\n  'seamless',\n  // Microdata\n  'itemScope',\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEAN,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n  );\n});\n\n// These are the few React props that we set as DOM properties\n// rather than attributes. These are all booleans.\n[\n  'checked',\n  // Note: `option.selected` is not updated if `select.multiple` is\n  // disabled with `removeAttribute`. We have special logic for handling this.\n  'multiple',\n  'muted',\n  'selected',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    BOOLEAN,\n    true, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n  );\n});\n\n// These are HTML attributes that are \"overloaded booleans\": they behave like\n// booleans, but can also accept a string value.\n[\n  'capture',\n  'download',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    OVERLOADED_BOOLEAN,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n  );\n});\n\n// These are HTML attributes that must be positive numbers.\n[\n  'cols',\n  'rows',\n  'size',\n  'span',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    POSITIVE_NUMERIC,\n    false, // mustUseProperty\n    name, // attributeName\n    null, // attributeNamespace\n  );\n});\n\n// These are HTML attributes that must be numbers.\n['rowSpan', 'start'].forEach(name => {\n  properties[name] = new PropertyInfoRecord(\n    name,\n    NUMERIC,\n    false, // mustUseProperty\n    name.toLowerCase(), // attributeName\n    null, // attributeNamespace\n  );\n});\n\nconst CAMELIZE = /[\\-\\:]([a-z])/g;\nconst capitalize = token => token[1].toUpperCase();\n\n// This is a list of all SVG attributes that need special casing, namespacing,\n// or boolean value assignment. Regular attributes that just accept strings\n// and have the same names are omitted, just like in the HTML whitelist.\n// Some of these attributes can be hard to find. This list was created by\n// scrapping the MDN documentation.\n[\n  'accent-height',\n  'alignment-baseline',\n  'arabic-form',\n  'baseline-shift',\n  'cap-height',\n  'clip-path',\n  'clip-rule',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'dominant-baseline',\n  'enable-background',\n  'fill-opacity',\n  'fill-rule',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'glyph-name',\n  'glyph-orientation-horizontal',\n  'glyph-orientation-vertical',\n  'horiz-adv-x',\n  'horiz-origin-x',\n  'image-rendering',\n  'letter-spacing',\n  'lighting-color',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'overline-position',\n  'overline-thickness',\n  'paint-order',\n  'panose-1',\n  'pointer-events',\n  'rendering-intent',\n  'shape-rendering',\n  'stop-color',\n  'stop-opacity',\n  'strikethrough-position',\n  'strikethrough-thickness',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'underline-position',\n  'underline-thickness',\n  'unicode-bidi',\n  'unicode-range',\n  'units-per-em',\n  'v-alphabetic',\n  'v-hanging',\n  'v-ideographic',\n  'v-mathematical',\n  'vector-effect',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'word-spacing',\n  'writing-mode',\n  'xmlns:xlink',\n  'x-height',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    null, // attributeNamespace\n  );\n});\n\n// String SVG attributes with the xlink namespace.\n[\n  'xlink:actuate',\n  'xlink:arcrole',\n  'xlink:href',\n  'xlink:role',\n  'xlink:show',\n  'xlink:title',\n  'xlink:type',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    'http://www.w3.org/1999/xlink',\n  );\n});\n\n// String SVG attributes with the xml namespace.\n[\n  'xml:base',\n  'xml:lang',\n  'xml:space',\n\n  // NOTE: if you add a camelCased prop to this list,\n  // you'll need to set attributeName to name.toLowerCase()\n  // instead in the assignment below.\n].forEach(attributeName => {\n  const name = attributeName.replace(CAMELIZE, capitalize);\n  properties[name] = new PropertyInfoRecord(\n    name,\n    STRING,\n    false, // mustUseProperty\n    attributeName,\n    'http://www.w3.org/XML/1998/namespace',\n  );\n});\n\n// These attribute exists both in HTML and SVG.\n// The attribute name is case-sensitive in SVG so we can't just use\n// the React name like we do for attributes that exist only in HTML.\n['tabIndex', 'crossOrigin'].forEach(attributeName => {\n  properties[attributeName] = new PropertyInfoRecord(\n    attributeName,\n    STRING,\n    false, // mustUseProperty\n    attributeName.toLowerCase(), // attributeName\n    null, // attributeNamespace\n  );\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  getPropertyInfo,\n  shouldIgnoreAttribute,\n  shouldRemoveAttribute,\n  isAttributeNameSafe,\n  BOOLEAN,\n  OVERLOADED_BOOLEAN,\n} from '../shared/DOMProperty';\n\nimport type {PropertyInfo} from '../shared/DOMProperty';\n\n/**\n * Get the value for a property on a node. Only used in DEV for SSR validation.\n * The \"expected\" argument is used as a hint of what the expected value is.\n * Some properties have multiple equivalent values.\n */\nexport function getValueForProperty(\n  node: Element,\n  name: string,\n  expected: mixed,\n  propertyInfo: PropertyInfo,\n): mixed {\n  if (__DEV__) {\n    if (propertyInfo.mustUseProperty) {\n      const {propertyName} = propertyInfo;\n      return (node: any)[propertyName];\n    } else {\n      const attributeName = propertyInfo.attributeName;\n\n      let stringValue = null;\n\n      if (propertyInfo.type === OVERLOADED_BOOLEAN) {\n        if (node.hasAttribute(attributeName)) {\n          const value = node.getAttribute(attributeName);\n          if (value === '') {\n            return true;\n          }\n          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n            return value;\n          }\n          if (value === '' + (expected: any)) {\n            return expected;\n          }\n          return value;\n        }\n      } else if (node.hasAttribute(attributeName)) {\n        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n          // We had an attribute but shouldn't have had one, so read it\n          // for the error message.\n          return node.getAttribute(attributeName);\n        }\n        if (propertyInfo.type === BOOLEAN) {\n          // If this was a boolean, it doesn't matter what the value is\n          // the fact that we have it is the same as the expected.\n          return expected;\n        }\n        // Even if this property uses a namespace we use getAttribute\n        // because we assume its namespaced name is the same as our config.\n        // To use getAttributeNS we need the local name which we don't have\n        // in our config atm.\n        stringValue = node.getAttribute(attributeName);\n      }\n\n      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {\n        return stringValue === null ? expected : stringValue;\n      } else if (stringValue === '' + (expected: any)) {\n        return expected;\n      } else {\n        return stringValue;\n      }\n    }\n  }\n}\n\n/**\n * Get the value for a attribute on a node. Only used in DEV for SSR validation.\n * The third argument is used as a hint of what the expected value is. Some\n * attributes have multiple equivalent values.\n */\nexport function getValueForAttribute(\n  node: Element,\n  name: string,\n  expected: mixed,\n): mixed {\n  if (__DEV__) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (!node.hasAttribute(name)) {\n      return expected === undefined ? undefined : null;\n    }\n    const value = node.getAttribute(name);\n    if (value === '' + (expected: any)) {\n      return expected;\n    }\n    return value;\n  }\n}\n\n/**\n * Sets the value for a property on a node.\n *\n * @param {DOMElement} node\n * @param {string} name\n * @param {*} value\n */\nexport function setValueForProperty(\n  node: Element,\n  name: string,\n  value: mixed,\n  isCustomComponentTag: boolean,\n) {\n  const propertyInfo = getPropertyInfo(name);\n  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {\n    return;\n  }\n  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {\n    value = null;\n  }\n  // If the prop isn't in the special list, treat it as a simple attribute.\n  if (isCustomComponentTag || propertyInfo === null) {\n    if (isAttributeNameSafe(name)) {\n      const attributeName = name;\n      if (value === null) {\n        node.removeAttribute(attributeName);\n      } else {\n        node.setAttribute(attributeName, '' + (value: any));\n      }\n    }\n    return;\n  }\n  const {mustUseProperty} = propertyInfo;\n  if (mustUseProperty) {\n    const {propertyName} = propertyInfo;\n    if (value === null) {\n      const {type} = propertyInfo;\n      (node: any)[propertyName] = type === BOOLEAN ? false : '';\n    } else {\n      // Contrary to `setAttribute`, object properties are properly\n      // `toString`ed by IE8/9.\n      (node: any)[propertyName] = value;\n    }\n    return;\n  }\n  // The rest are treated as attributes with special cases.\n  const {attributeName, attributeNamespace} = propertyInfo;\n  if (value === null) {\n    node.removeAttribute(attributeName);\n  } else {\n    const {type} = propertyInfo;\n    let attributeValue;\n    if (type === BOOLEAN || (type === OVERLOADED_BOOLEAN && value === true)) {\n      attributeValue = '';\n    } else {\n      // `setAttribute` with objects becomes only `[object]` in IE8/9,\n      // ('' + value) makes it output the correct toString()-value.\n      attributeValue = '' + (value: any);\n    }\n    if (attributeNamespace) {\n      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);\n    } else {\n      node.setAttribute(attributeName, attributeValue);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport opaque type ToStringValue =\n  | boolean\n  | number\n  | Object\n  | string\n  | null\n  | void;\n\n// Flow does not allow string concatenation of most non-string types. To work\n// around this limitation, we use an opaque type that can only be obtained by\n// passing the value through getToStringValue first.\nexport function toString(value: ToStringValue): string {\n  return '' + (value: any);\n}\n\nexport function getToStringValue(value: mixed): ToStringValue {\n  switch (typeof value) {\n    case 'boolean':\n    case 'number':\n    case 'object':\n    case 'string':\n    case 'undefined':\n      return value;\n    default:\n      // function, symbol are assigned as empty strings\n      return '';\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport checkPropTypes from 'prop-types/checkPropTypes';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nlet ReactDebugCurrentFrame = null;\n\nconst ReactControlledValuePropTypes = {\n  checkPropTypes: null,\n};\n\nif (__DEV__) {\n  ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\n  const hasReadOnlyValue = {\n    button: true,\n    checkbox: true,\n    image: true,\n    hidden: true,\n    radio: true,\n    reset: true,\n    submit: true,\n  };\n\n  const propTypes = {\n    value: function(props, propName, componentName) {\n      if (\n        hasReadOnlyValue[props.type] ||\n        props.onChange ||\n        props.readOnly ||\n        props.disabled ||\n        props[propName] == null\n      ) {\n        return null;\n      }\n      return new Error(\n        'You provided a `value` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultValue`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.',\n      );\n    },\n    checked: function(props, propName, componentName) {\n      if (\n        props.onChange ||\n        props.readOnly ||\n        props.disabled ||\n        props[propName] == null\n      ) {\n        return null;\n      }\n      return new Error(\n        'You provided a `checked` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultChecked`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.',\n      );\n    },\n  };\n\n  /**\n   * Provide a linked `value` attribute for controlled forms. You should not use\n   * this outside of the ReactDOM controlled form components.\n   */\n  ReactControlledValuePropTypes.checkPropTypes = function(tagName, props) {\n    checkPropTypes(\n      propTypes,\n      props,\n      'prop',\n      tagName,\n      ReactDebugCurrentFrame.getStackAddendum,\n    );\n  };\n}\n\nexport default ReactControlledValuePropTypes;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nimport {getCurrentFiberOwnerNameInDevOrNull} from 'react-reconciler/src/ReactCurrentFiber';\nimport invariant from 'shared/invariant';\nimport warning from 'shared/warning';\n\nimport {setValueForProperty} from './DOMPropertyOperations';\nimport {getFiberCurrentPropsFromNode} from './ReactDOMComponentTree';\nimport {getToStringValue, toString} from './ToStringValue';\nimport ReactControlledValuePropTypes from '../shared/ReactControlledValuePropTypes';\nimport {updateValueIfChanged} from './inputValueTracking';\nimport {disableInputAttributeSyncing} from 'shared/ReactFeatureFlags';\n\nimport type {ToStringValue} from './ToStringValue';\n\ntype InputWithWrapperState = HTMLInputElement & {\n  _wrapperState: {\n    initialValue: ToStringValue,\n    initialChecked: ?boolean,\n    controlled?: boolean,\n  },\n};\n\nlet didWarnValueDefaultValue = false;\nlet didWarnCheckedDefaultChecked = false;\nlet didWarnControlledToUncontrolled = false;\nlet didWarnUncontrolledToControlled = false;\n\nfunction isControlled(props) {\n  const usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\n\nexport function getHostProps(element: Element, props: Object) {\n  const node = ((element: any): InputWithWrapperState);\n  const checked = props.checked;\n\n  const hostProps = Object.assign({}, props, {\n    defaultChecked: undefined,\n    defaultValue: undefined,\n    value: undefined,\n    checked: checked != null ? checked : node._wrapperState.initialChecked,\n  });\n\n  return hostProps;\n}\n\nexport function initWrapperState(element: Element, props: Object) {\n  if (__DEV__) {\n    ReactControlledValuePropTypes.checkPropTypes('input', props);\n\n    if (\n      props.checked !== undefined &&\n      props.defaultChecked !== undefined &&\n      !didWarnCheckedDefaultChecked\n    ) {\n      warning(\n        false,\n        '%s contains an input of type %s with both checked and defaultChecked props. ' +\n          'Input elements must be either controlled or uncontrolled ' +\n          '(specify either the checked prop, or the defaultChecked prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled input ' +\n          'element and remove one of these props. More info: ' +\n          'https://fb.me/react-controlled-components',\n        getCurrentFiberOwnerNameInDevOrNull() || 'A component',\n        props.type,\n      );\n      didWarnCheckedDefaultChecked = true;\n    }\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnValueDefaultValue\n    ) {\n      warning(\n        false,\n        '%s contains an input of type %s with both value and defaultValue props. ' +\n          'Input elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled input ' +\n          'element and remove one of these props. More info: ' +\n          'https://fb.me/react-controlled-components',\n        getCurrentFiberOwnerNameInDevOrNull() || 'A component',\n        props.type,\n      );\n      didWarnValueDefaultValue = true;\n    }\n  }\n\n  const node = ((element: any): InputWithWrapperState);\n  const defaultValue = props.defaultValue == null ? '' : props.defaultValue;\n\n  node._wrapperState = {\n    initialChecked:\n      props.checked != null ? props.checked : props.defaultChecked,\n    initialValue: getToStringValue(\n      props.value != null ? props.value : defaultValue,\n    ),\n    controlled: isControlled(props),\n  };\n}\n\nexport function updateChecked(element: Element, props: Object) {\n  const node = ((element: any): InputWithWrapperState);\n  const checked = props.checked;\n  if (checked != null) {\n    setValueForProperty(node, 'checked', checked, false);\n  }\n}\n\nexport function updateWrapper(element: Element, props: Object) {\n  const node = ((element: any): InputWithWrapperState);\n  if (__DEV__) {\n    const controlled = isControlled(props);\n\n    if (\n      !node._wrapperState.controlled &&\n      controlled &&\n      !didWarnUncontrolledToControlled\n    ) {\n      warning(\n        false,\n        'A component is changing an uncontrolled input of type %s to be controlled. ' +\n          'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +\n          'Decide between using a controlled or uncontrolled input ' +\n          'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',\n        props.type,\n      );\n      didWarnUncontrolledToControlled = true;\n    }\n    if (\n      node._wrapperState.controlled &&\n      !controlled &&\n      !didWarnControlledToUncontrolled\n    ) {\n      warning(\n        false,\n        'A component is changing a controlled input of type %s to be uncontrolled. ' +\n          'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +\n          'Decide between using a controlled or uncontrolled input ' +\n          'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',\n        props.type,\n      );\n      didWarnControlledToUncontrolled = true;\n    }\n  }\n\n  updateChecked(element, props);\n\n  const value = getToStringValue(props.value);\n  const type = props.type;\n\n  if (value != null) {\n    if (type === 'number') {\n      if (\n        (value === 0 && node.value === '') ||\n        // We explicitly want to coerce to number here if possible.\n        // eslint-disable-next-line\n        node.value != (value: any)\n      ) {\n        node.value = toString(value);\n      }\n    } else if (node.value !== toString(value)) {\n      node.value = toString(value);\n    }\n  } else if (type === 'submit' || type === 'reset') {\n    // Submit/reset inputs need the attribute removed completely to avoid\n    // blank-text buttons.\n    node.removeAttribute('value');\n    return;\n  }\n\n  if (disableInputAttributeSyncing) {\n    // When not syncing the value attribute, React only assigns a new value\n    // whenever the defaultValue React prop has changed. When not present,\n    // React does nothing\n    if (props.hasOwnProperty('defaultValue')) {\n      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\n    }\n  } else {\n    // When syncing the value attribute, the value comes from a cascade of\n    // properties:\n    //  1. The value React property\n    //  2. The defaultValue React property\n    //  3. Otherwise there should be no change\n    if (props.hasOwnProperty('value')) {\n      setDefaultValue(node, props.type, value);\n    } else if (props.hasOwnProperty('defaultValue')) {\n      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));\n    }\n  }\n\n  if (disableInputAttributeSyncing) {\n    // When not syncing the checked attribute, the attribute is directly\n    // controllable from the defaultValue React property. It needs to be\n    // updated as new props come in.\n    if (props.defaultChecked == null) {\n      node.removeAttribute('checked');\n    } else {\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  } else {\n    // When syncing the checked attribute, it only changes when it needs\n    // to be removed, such as transitioning from a checkbox into a text input\n    if (props.checked == null && props.defaultChecked != null) {\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  }\n}\n\nexport function postMountWrapper(\n  element: Element,\n  props: Object,\n  isHydrating: boolean,\n) {\n  const node = ((element: any): InputWithWrapperState);\n\n  // Do not assign value if it is already set. This prevents user text input\n  // from being lost during SSR hydration.\n  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {\n    const type = props.type;\n    const isButton = type === 'submit' || type === 'reset';\n\n    // Avoid setting value attribute on submit/reset inputs as it overrides the\n    // default value provided by the browser. See: #12872\n    if (isButton && (props.value === undefined || props.value === null)) {\n      return;\n    }\n\n    const initialValue = toString(node._wrapperState.initialValue);\n\n    // Do not assign value if it is already set. This prevents user text input\n    // from being lost during SSR hydration.\n    if (!isHydrating) {\n      if (disableInputAttributeSyncing) {\n        const value = getToStringValue(props.value);\n\n        // When not syncing the value attribute, the value property points\n        // directly to the React prop. Only assign it if it exists.\n        if (value != null) {\n          // Always assign on buttons so that it is possible to assign an\n          // empty string to clear button text.\n          //\n          // Otherwise, do not re-assign the value property if is empty. This\n          // potentially avoids a DOM write and prevents Firefox (~60.0.1) from\n          // prematurely marking required inputs as invalid. Equality is compared\n          // to the current value in case the browser provided value is not an\n          // empty string.\n          if (isButton || value !== node.value) {\n            node.value = toString(value);\n          }\n        }\n      } else {\n        // When syncing the value attribute, the value property should use\n        // the wrapperState._initialValue property. This uses:\n        //\n        //   1. The value React property when present\n        //   2. The defaultValue React property when present\n        //   3. An empty string\n        if (initialValue !== node.value) {\n          node.value = initialValue;\n        }\n      }\n    }\n\n    if (disableInputAttributeSyncing) {\n      // When not syncing the value attribute, assign the value attribute\n      // directly from the defaultValue React property (when present)\n      const defaultValue = getToStringValue(props.defaultValue);\n      if (defaultValue != null) {\n        node.defaultValue = toString(defaultValue);\n      }\n    } else {\n      // Otherwise, the value attribute is synchronized to the property,\n      // so we assign defaultValue to the same thing as the value property\n      // assignment step above.\n      node.defaultValue = initialValue;\n    }\n  }\n\n  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n  // this is needed to work around a chrome bug where setting defaultChecked\n  // will sometimes influence the value of checked (even after detachment).\n  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n  // We need to temporarily unset name to avoid disrupting radio button groups.\n  const name = node.name;\n  if (name !== '') {\n    node.name = '';\n  }\n\n  if (disableInputAttributeSyncing) {\n    // When not syncing the checked attribute, the checked property\n    // never gets assigned. It must be manually set. We don't want\n    // to do this when hydrating so that existing user input isn't\n    // modified\n    if (!isHydrating) {\n      updateChecked(element, props);\n    }\n\n    // Only assign the checked attribute if it is defined. This saves\n    // a DOM write when controlling the checked attribute isn't needed\n    // (text inputs, submit/reset)\n    if (props.hasOwnProperty('defaultChecked')) {\n      node.defaultChecked = !node.defaultChecked;\n      node.defaultChecked = !!props.defaultChecked;\n    }\n  } else {\n    // When syncing the checked attribute, both the checked property and\n    // attribute are assigned at the same time using defaultChecked. This uses:\n    //\n    //   1. The checked React property when present\n    //   2. The defaultChecked React property when present\n    //   3. Otherwise, false\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !!node._wrapperState.initialChecked;\n  }\n\n  if (name !== '') {\n    node.name = name;\n  }\n}\n\nexport function restoreControlledState(element: Element, props: Object) {\n  const node = ((element: any): InputWithWrapperState);\n  updateWrapper(node, props);\n  updateNamedCousins(node, props);\n}\n\nfunction updateNamedCousins(rootNode, props) {\n  const name = props.name;\n  if (props.type === 'radio' && name != null) {\n    let queryRoot: Element = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = ((queryRoot.parentNode: any): Element);\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form. It might not even be in the\n    // document. Let's just use the local `querySelectorAll` to ensure we don't\n    // miss anything.\n    const group = queryRoot.querySelectorAll(\n      'input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]',\n    );\n\n    for (let i = 0; i < group.length; i++) {\n      const otherNode = ((group[i]: any): HTMLInputElement);\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n      const otherProps = getFiberCurrentPropsFromNode(otherNode);\n      invariant(\n        otherProps,\n        'ReactDOMInput: Mixing React and non-React radio inputs with the ' +\n          'same `name` is not supported.',\n      );\n\n      // We need update the tracked value on the named cousin since the value\n      // was changed but the input saw no event or value set\n      updateValueIfChanged(otherNode);\n\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      updateWrapper(otherNode, otherProps);\n    }\n  }\n}\n\n// In Chrome, assigning defaultValue to certain input types triggers input validation.\n// For number inputs, the display value loses trailing decimal points. For email inputs,\n// Chrome raises \"The specified value <x> is not a valid email address\".\n//\n// Here we check to see if the defaultValue has actually changed, avoiding these problems\n// when the user is inputting text\n//\n// https://github.com/facebook/react/issues/7253\nexport function setDefaultValue(\n  node: InputWithWrapperState,\n  type: ?string,\n  value: *,\n) {\n  if (\n    // Focused number inputs synchronize on blur. See ChangeEventPlugin.js\n    type !== 'number' ||\n    node.ownerDocument.activeElement !== node\n  ) {\n    if (value == null) {\n      node.defaultValue = toString(node._wrapperState.initialValue);\n    } else if (node.defaultValue !== toString(value)) {\n      node.defaultValue = toString(value);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {runEventsInBatch} from 'react-events/EventPluginHub';\nimport {accumulateTwoPhaseDispatches} from 'react-events/EventPropagators';\nimport {enqueueStateRestore} from 'react-events/ReactControlledComponent';\nimport {batchedUpdates} from 'react-events/ReactGenericBatching';\nimport SyntheticEvent from 'react-events/SyntheticEvent';\nimport isTextInputElement from 'shared/isTextInputElement';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\n\nimport {\n  TOP_BLUR,\n  TOP_CHANGE,\n  TOP_CLICK,\n  TOP_FOCUS,\n  TOP_INPUT,\n  TOP_KEY_DOWN,\n  TOP_KEY_UP,\n  TOP_SELECTION_CHANGE,\n} from './DOMTopLevelEventTypes';\nimport getEventTarget from './getEventTarget';\nimport isEventSupported from './isEventSupported';\nimport {getNodeFromInstance} from '../client/ReactDOMComponentTree';\nimport {updateValueIfChanged} from '../client/inputValueTracking';\nimport {setDefaultValue} from '../client/ReactDOMInput';\nimport {disableInputAttributeSyncing} from 'shared/ReactFeatureFlags';\n\nconst eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: 'onChange',\n      captured: 'onChangeCapture',\n    },\n    dependencies: [\n      TOP_BLUR,\n      TOP_CHANGE,\n      TOP_CLICK,\n      TOP_FOCUS,\n      TOP_INPUT,\n      TOP_KEY_DOWN,\n      TOP_KEY_UP,\n      TOP_SELECTION_CHANGE,\n    ],\n  },\n};\n\nfunction createAndAccumulateChangeEvent(inst, nativeEvent, target) {\n  const event = SyntheticEvent.getPooled(\n    eventTypes.change,\n    inst,\n    nativeEvent,\n    target,\n  );\n  event.type = 'change';\n  // Flag this event loop as needing state restore.\n  enqueueStateRestore(target);\n  accumulateTwoPhaseDispatches(event);\n  return event;\n}\n/**\n * For IE shims\n */\nlet activeElement = null;\nlet activeElementInst = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  const nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName === 'select' || (nodeName === 'input' && elem.type === 'file')\n  );\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  const event = createAndAccumulateChangeEvent(\n    activeElementInst,\n    nativeEvent,\n    getEventTarget(nativeEvent),\n  );\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  runEventsInBatch(event);\n}\n\nfunction getInstIfValueChanged(targetInst) {\n  const targetNode = getNodeFromInstance(targetInst);\n  if (updateValueIfChanged(targetNode)) {\n    return targetInst;\n  }\n}\n\nfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === TOP_CHANGE) {\n    return targetInst;\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nlet isInputEventSupported = false;\nif (canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n  isInputEventSupported =\n    isEventSupported('input') &&\n    (!document.documentMode || document.documentMode > 9);\n}\n\n/**\n * (For IE <=9) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For IE <=9) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n  activeElement = null;\n  activeElementInst = null;\n}\n\n/**\n * (For IE <=9) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  if (getInstIfValueChanged(activeElementInst)) {\n    manualDispatchChangeEvent(nativeEvent);\n  }\n}\n\nfunction handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {\n  if (topLevelType === TOP_FOCUS) {\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (topLevelType === TOP_BLUR) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetInstForInputEventPolyfill(topLevelType, targetInst) {\n  if (\n    topLevelType === TOP_SELECTION_CHANGE ||\n    topLevelType === TOP_KEY_UP ||\n    topLevelType === TOP_KEY_DOWN\n  ) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    return getInstIfValueChanged(activeElementInst);\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  const nodeName = elem.nodeName;\n  return (\n    nodeName &&\n    nodeName.toLowerCase() === 'input' &&\n    (elem.type === 'checkbox' || elem.type === 'radio')\n  );\n}\n\nfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n  if (topLevelType === TOP_CLICK) {\n    return getInstIfValueChanged(targetInst);\n  }\n}\n\nfunction getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {\n    return getInstIfValueChanged(targetInst);\n  }\n}\n\nfunction handleControlledInputBlur(node) {\n  let state = node._wrapperState;\n\n  if (!state || !state.controlled || node.type !== 'number') {\n    return;\n  }\n\n  if (!disableInputAttributeSyncing) {\n    // If controlled, assign the value attribute to the current value on blur\n    setDefaultValue(node, 'number', node.value);\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nconst ChangeEventPlugin = {\n  eventTypes: eventTypes,\n\n  _isInputEventSupported: isInputEventSupported,\n\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  ) {\n    const targetNode = targetInst ? getNodeFromInstance(targetInst) : window;\n\n    let getTargetInstFunc, handleEventFunc;\n    if (shouldUseChangeEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForChangeEvent;\n    } else if (isTextInputElement(targetNode)) {\n      if (isInputEventSupported) {\n        getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n      } else {\n        getTargetInstFunc = getTargetInstForInputEventPolyfill;\n        handleEventFunc = handleEventsForInputEventPolyfill;\n      }\n    } else if (shouldUseClickEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForClickEvent;\n    }\n\n    if (getTargetInstFunc) {\n      const inst = getTargetInstFunc(topLevelType, targetInst);\n      if (inst) {\n        const event = createAndAccumulateChangeEvent(\n          inst,\n          nativeEvent,\n          nativeEventTarget,\n        );\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, targetNode, targetInst);\n    }\n\n    // When blurring, set the value attribute for number inputs\n    if (topLevelType === TOP_BLUR) {\n      handleControlledInputBlur(targetNode);\n    }\n  },\n};\n\nexport default ChangeEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nconst DOMEventPluginOrder = [\n  'ResponderEventPlugin',\n  'SimpleEventPlugin',\n  'EnterLeaveEventPlugin',\n  'ChangeEventPlugin',\n  'SelectEventPlugin',\n  'BeforeInputEventPlugin',\n];\n\nexport default DOMEventPluginOrder;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from 'react-events/SyntheticEvent';\n\nconst SyntheticUIEvent = SyntheticEvent.extend({\n  view: null,\n  detail: null,\n});\n\nexport default SyntheticUIEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nimport type {AnyNativeEvent} from 'react-events/PluginModuleType';\n\nconst modifierKeyToProp = {\n  Alt: 'altKey',\n  Control: 'ctrlKey',\n  Meta: 'metaKey',\n  Shift: 'shiftKey',\n};\n\n// Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support\n// getModifierState. If getModifierState is not supported, we map it to a set of\n// modifier keys exposed by the event. In this case, Lock-keys are not supported.\nfunction modifierStateGetter(keyArg: string): boolean {\n  const syntheticEvent = this;\n  const nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  const keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(\n  nativeEvent: AnyNativeEvent,\n): (keyArg: string) => boolean {\n  return modifierStateGetter;\n}\n\nexport default getEventModifierState;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport getEventModifierState from './getEventModifierState';\n\nlet previousScreenX = 0;\nlet previousScreenY = 0;\n// Use flags to signal movementX/Y has already been set\nlet isMovementXSet = false;\nlet isMovementYSet = false;\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst SyntheticMouseEvent = SyntheticUIEvent.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: null,\n  buttons: null,\n  relatedTarget: function(event) {\n    return (\n      event.relatedTarget ||\n      (event.fromElement === event.srcElement\n        ? event.toElement\n        : event.fromElement)\n    );\n  },\n  movementX: function(event) {\n    if ('movementX' in event) {\n      return event.movementX;\n    }\n\n    const screenX = previousScreenX;\n    previousScreenX = event.screenX;\n\n    if (!isMovementXSet) {\n      isMovementXSet = true;\n      return 0;\n    }\n\n    return event.type === 'mousemove' ? event.screenX - screenX : 0;\n  },\n  movementY: function(event) {\n    if ('movementY' in event) {\n      return event.movementY;\n    }\n\n    const screenY = previousScreenY;\n    previousScreenY = event.screenY;\n\n    if (!isMovementYSet) {\n      isMovementYSet = true;\n      return 0;\n    }\n\n    return event.type === 'mousemove' ? event.screenY - screenY : 0;\n  },\n});\n\nexport default SyntheticMouseEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\n\n/**\n * @interface PointerEvent\n * @see http://www.w3.org/TR/pointerevents/\n */\nconst SyntheticPointerEvent = SyntheticMouseEvent.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null,\n});\n\nexport default SyntheticPointerEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {accumulateEnterLeaveDispatches} from 'react-events/EventPropagators';\n\nimport {\n  TOP_MOUSE_OUT,\n  TOP_MOUSE_OVER,\n  TOP_POINTER_OUT,\n  TOP_POINTER_OVER,\n} from './DOMTopLevelEventTypes';\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\nimport SyntheticPointerEvent from './SyntheticPointerEvent';\nimport {\n  getClosestInstanceFromNode,\n  getNodeFromInstance,\n} from '../client/ReactDOMComponentTree';\n\nconst eventTypes = {\n  mouseEnter: {\n    registrationName: 'onMouseEnter',\n    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER],\n  },\n  mouseLeave: {\n    registrationName: 'onMouseLeave',\n    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER],\n  },\n  pointerEnter: {\n    registrationName: 'onPointerEnter',\n    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER],\n  },\n  pointerLeave: {\n    registrationName: 'onPointerLeave',\n    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER],\n  },\n};\n\nconst EnterLeaveEventPlugin = {\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   */\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  ) {\n    const isOverEvent =\n      topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;\n    const isOutEvent =\n      topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;\n\n    if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n\n    if (!isOutEvent && !isOverEvent) {\n      // Must not be a mouse or pointer in or out - ignoring.\n      return null;\n    }\n\n    let win;\n    if (nativeEventTarget.window === nativeEventTarget) {\n      // `nativeEventTarget` is probably a window object.\n      win = nativeEventTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      const doc = nativeEventTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    let from;\n    let to;\n    if (isOutEvent) {\n      from = targetInst;\n      const related = nativeEvent.relatedTarget || nativeEvent.toElement;\n      to = related ? getClosestInstanceFromNode(related) : null;\n    } else {\n      // Moving to a node from outside the window.\n      from = null;\n      to = targetInst;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    let eventInterface, leaveEventType, enterEventType, eventTypePrefix;\n\n    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {\n      eventInterface = SyntheticMouseEvent;\n      leaveEventType = eventTypes.mouseLeave;\n      enterEventType = eventTypes.mouseEnter;\n      eventTypePrefix = 'mouse';\n    } else if (\n      topLevelType === TOP_POINTER_OUT ||\n      topLevelType === TOP_POINTER_OVER\n    ) {\n      eventInterface = SyntheticPointerEvent;\n      leaveEventType = eventTypes.pointerLeave;\n      enterEventType = eventTypes.pointerEnter;\n      eventTypePrefix = 'pointer';\n    }\n\n    const fromNode = from == null ? win : getNodeFromInstance(from);\n    const toNode = to == null ? win : getNodeFromInstance(to);\n\n    const leave = eventInterface.getPooled(\n      leaveEventType,\n      from,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    leave.type = eventTypePrefix + 'leave';\n    leave.target = fromNode;\n    leave.relatedTarget = toNode;\n\n    const enter = eventInterface.getPooled(\n      enterEventType,\n      to,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    enter.type = eventTypePrefix + 'enter';\n    enter.target = toNode;\n    enter.relatedTarget = fromNode;\n\n    accumulateEnterLeaveDispatches(leave, enter, from, to);\n\n    return [leave, enter];\n  },\n};\n\nexport default EnterLeaveEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nexport default is;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport is from './objectIs';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !hasOwnProperty.call(objB, keysA[i]) ||\n      !is(objA[keysA[i]], objB[keysA[i]])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default shallowEqual;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\nexport function remove(key) {\n  key._reactInternalFiber = undefined;\n}\n\nexport function get(key) {\n  return key._reactInternalFiber;\n}\n\nexport function has(key) {\n  return key._reactInternalFiber !== undefined;\n}\n\nexport function set(key, value) {\n  key._reactInternalFiber = value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type SideEffectTag = number;\n\n// Don't change these two values. They're used by React Dev Tools.\nexport const NoEffect = /*              */ 0b000000000000;\nexport const PerformedWork = /*         */ 0b000000000001;\n\n// You can change the rest (and add more).\nexport const Placement = /*             */ 0b000000000010;\nexport const Update = /*                */ 0b000000000100;\nexport const PlacementAndUpdate = /*    */ 0b000000000110;\nexport const Deletion = /*              */ 0b000000001000;\nexport const ContentReset = /*          */ 0b000000010000;\nexport const Callback = /*              */ 0b000000100000;\nexport const DidCapture = /*            */ 0b000001000000;\nexport const Ref = /*                   */ 0b000010000000;\nexport const Snapshot = /*              */ 0b000100000000;\nexport const Passive = /*               */ 0b001000000000;\n\n// Passive & Update & Callback & Ref & Snapshot\nexport const LifecycleEffectMask = /*   */ 0b001110100100;\n\n// Union of all host effects\nexport const HostEffectMask = /*        */ 0b001111111111;\n\nexport const Incomplete = /*            */ 0b010000000000;\nexport const ShouldCapture = /*         */ 0b100000000000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\n\nimport invariant from 'shared/invariant';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentName from 'shared/getComponentName';\nimport {\n  ClassComponent,\n  HostComponent,\n  HostRoot,\n  HostPortal,\n  HostText,\n} from 'shared/ReactWorkTags';\nimport {NoEffect, Placement} from 'shared/ReactSideEffectTags';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nconst MOUNTING = 1;\nconst MOUNTED = 2;\nconst UNMOUNTED = 3;\n\nfunction isFiberMountedImpl(fiber: Fiber): number {\n  let node = fiber;\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    if ((node.effectTag & Placement) !== NoEffect) {\n      return MOUNTING;\n    }\n    while (node.return) {\n      node = node.return;\n      if ((node.effectTag & Placement) !== NoEffect) {\n        return MOUNTING;\n      }\n    }\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return MOUNTED;\n  }\n  // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n  return UNMOUNTED;\n}\n\nexport function isFiberMounted(fiber: Fiber): boolean {\n  return isFiberMountedImpl(fiber) === MOUNTED;\n}\n\nexport function isMounted(component: React$Component<any, any>): boolean {\n  if (__DEV__) {\n    const owner = (ReactCurrentOwner.current: any);\n    if (owner !== null && owner.tag === ClassComponent) {\n      const ownerFiber: Fiber = owner;\n      const instance = ownerFiber.stateNode;\n      warningWithoutStack(\n        instance._warnedAboutRefsInRender,\n        '%s is accessing isMounted inside its render() function. ' +\n          'render() should be a pure function of props and state. It should ' +\n          'never access something that requires stale data from the previous ' +\n          'render, such as refs. Move this logic to componentDidMount and ' +\n          'componentDidUpdate instead.',\n        getComponentName(ownerFiber.type) || 'A component',\n      );\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  const fiber: ?Fiber = getInstance(component);\n  if (!fiber) {\n    return false;\n  }\n  return isFiberMountedImpl(fiber) === MOUNTED;\n}\n\nfunction assertIsMounted(fiber) {\n  invariant(\n    isFiberMountedImpl(fiber) === MOUNTED,\n    'Unable to find node on an unmounted component.',\n  );\n}\n\nexport function findCurrentFiberUsingSlowPath(fiber: Fiber): Fiber | null {\n  let alternate = fiber.alternate;\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    const state = isFiberMountedImpl(fiber);\n    invariant(\n      state !== UNMOUNTED,\n      'Unable to find node on an unmounted component.',\n    );\n    if (state === MOUNTING) {\n      return null;\n    }\n    return fiber;\n  }\n  // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n  let a = fiber;\n  let b = alternate;\n  while (true) {\n    let parentA = a.return;\n    let parentB = parentA ? parentA.alternate : null;\n    if (!parentA || !parentB) {\n      // We're at the root.\n      break;\n    }\n\n    // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n    if (parentA.child === parentB.child) {\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n        child = child.sibling;\n      }\n      // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n      invariant(false, 'Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      let didFindChild = false;\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child = child.sibling;\n      }\n      if (!didFindChild) {\n        // Search parent B's child set\n        child = parentB.child;\n        while (child) {\n          if (child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child = child.sibling;\n        }\n        invariant(\n          didFindChild,\n          'Child was not found in either parent set. This indicates a bug ' +\n            'in React related to the return pointer. Please file an issue.',\n        );\n      }\n    }\n\n    invariant(\n      a.alternate === b,\n      \"Return fibers should always be each others' alternates. \" +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n  invariant(\n    a.tag === HostRoot,\n    'Unable to find node on an unmounted component.',\n  );\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  }\n  // Otherwise B has to be current branch.\n  return alternate;\n}\n\nexport function findCurrentHostFiber(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  if (!currentParent) {\n    return null;\n  }\n\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  let node: Fiber = currentParent;\n  while (true) {\n    if (node.tag === HostComponent || node.tag === HostText) {\n      return node;\n    } else if (node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === currentParent) {\n      return null;\n    }\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow needs the return null here, but ESLint complains about it.\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n\nexport function findCurrentHostFiberWithNoPortals(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  if (!currentParent) {\n    return null;\n  }\n\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  let node: Fiber = currentParent;\n  while (true) {\n    if (node.tag === HostComponent || node.tag === HostText) {\n      return node;\n    } else if (node.child && node.tag !== HostPortal) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === currentParent) {\n      return null;\n    }\n    while (!node.sibling) {\n      if (!node.return || node.return === currentParent) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  // Flow needs the return null here, but ESLint complains about it.\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from 'react-events/SyntheticEvent';\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\nconst SyntheticAnimationEvent = SyntheticEvent.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null,\n});\n\nexport default SyntheticAnimationEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from 'react-events/SyntheticEvent';\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nconst SyntheticClipboardEvent = SyntheticEvent.extend({\n  clipboardData: function(event) {\n    return 'clipboardData' in event\n      ? event.clipboardData\n      : window.clipboardData;\n  },\n});\n\nexport default SyntheticClipboardEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticUIEvent from './SyntheticUIEvent';\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst SyntheticFocusEvent = SyntheticUIEvent.extend({\n  relatedTarget: null,\n});\n\nexport default SyntheticFocusEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  let charCode;\n  const keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)\n  // report Enter as charCode 10 when ctrl is pressed.\n  if (charCode === 10) {\n    charCode = 13;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nexport default getEventCharCode;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport getEventCharCode from './getEventCharCode';\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nconst normalizeKey = {\n  Esc: 'Escape',\n  Spacebar: ' ',\n  Left: 'ArrowLeft',\n  Up: 'ArrowUp',\n  Right: 'ArrowRight',\n  Down: 'ArrowDown',\n  Del: 'Delete',\n  Win: 'OS',\n  Menu: 'ContextMenu',\n  Apps: 'ContextMenu',\n  Scroll: 'ScrollLock',\n  MozPrintableKey: 'Unidentified',\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nconst translateToKey = {\n  '8': 'Backspace',\n  '9': 'Tab',\n  '12': 'Clear',\n  '13': 'Enter',\n  '16': 'Shift',\n  '17': 'Control',\n  '18': 'Alt',\n  '19': 'Pause',\n  '20': 'CapsLock',\n  '27': 'Escape',\n  '32': ' ',\n  '33': 'PageUp',\n  '34': 'PageDown',\n  '35': 'End',\n  '36': 'Home',\n  '37': 'ArrowLeft',\n  '38': 'ArrowUp',\n  '39': 'ArrowRight',\n  '40': 'ArrowDown',\n  '45': 'Insert',\n  '46': 'Delete',\n  '112': 'F1',\n  '113': 'F2',\n  '114': 'F3',\n  '115': 'F4',\n  '116': 'F5',\n  '117': 'F6',\n  '118': 'F7',\n  '119': 'F8',\n  '120': 'F9',\n  '121': 'F10',\n  '122': 'F11',\n  '123': 'F12',\n  '144': 'NumLock',\n  '145': 'ScrollLock',\n  '224': 'Meta',\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent: KeyboardEvent): string {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    const key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    const charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nexport default getEventKey;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport getEventCharCode from './getEventCharCode';\nimport getEventKey from './getEventKey';\nimport getEventModifierState from './getEventModifierState';\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst SyntheticKeyboardEvent = SyntheticUIEvent.extend({\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function(event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function(event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function(event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n});\n\nexport default SyntheticKeyboardEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst SyntheticDragEvent = SyntheticMouseEvent.extend({\n  dataTransfer: null,\n});\n\nexport default SyntheticDragEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport getEventModifierState from './getEventModifierState';\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nconst SyntheticTouchEvent = SyntheticUIEvent.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState,\n});\n\nexport default SyntheticTouchEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from 'react-events/SyntheticEvent';\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\nconst SyntheticTransitionEvent = SyntheticEvent.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null,\n});\n\nexport default SyntheticTransitionEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst SyntheticWheelEvent = SyntheticMouseEvent.extend({\n  deltaX(event) {\n    return 'deltaX' in event\n      ? event.deltaX\n      : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n        'wheelDeltaX' in event\n        ? -event.wheelDeltaX\n        : 0;\n  },\n  deltaY(event) {\n    return 'deltaY' in event\n      ? event.deltaY\n      : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n        'wheelDeltaY' in event\n        ? -event.wheelDeltaY\n        : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n          'wheelDelta' in event\n          ? -event.wheelDelta\n          : 0;\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null,\n});\n\nexport default SyntheticWheelEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  TopLevelType,\n  DOMTopLevelEventType,\n} from 'react-events/TopLevelEventTypes';\nimport type {\n  DispatchConfig,\n  ReactSyntheticEvent,\n} from 'react-events/ReactSyntheticEventType';\nimport type {Fiber} from 'react-reconciler/src/ReactFiber';\nimport type {EventTypes, PluginModule} from 'react-events/PluginModuleType';\n\nimport {accumulateTwoPhaseDispatches} from 'react-events/EventPropagators';\nimport SyntheticEvent from 'react-events/SyntheticEvent';\n\nimport * as DOMTopLevelEventTypes from './DOMTopLevelEventTypes';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nimport SyntheticAnimationEvent from './SyntheticAnimationEvent';\nimport SyntheticClipboardEvent from './SyntheticClipboardEvent';\nimport SyntheticFocusEvent from './SyntheticFocusEvent';\nimport SyntheticKeyboardEvent from './SyntheticKeyboardEvent';\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\nimport SyntheticPointerEvent from './SyntheticPointerEvent';\nimport SyntheticDragEvent from './SyntheticDragEvent';\nimport SyntheticTouchEvent from './SyntheticTouchEvent';\nimport SyntheticTransitionEvent from './SyntheticTransitionEvent';\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport SyntheticWheelEvent from './SyntheticWheelEvent';\nimport getEventCharCode from './getEventCharCode';\n\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: [TOP_ABORT],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = new Map([\n *   [TOP_ABORT, { sameConfig }],\n * ]);\n */\ntype EventTuple = [DOMTopLevelEventType, string];\nconst interactiveEventTypeNames: Array<EventTuple> = [\n  [DOMTopLevelEventTypes.TOP_BLUR, 'blur'],\n  [DOMTopLevelEventTypes.TOP_CANCEL, 'cancel'],\n  [DOMTopLevelEventTypes.TOP_CLICK, 'click'],\n  [DOMTopLevelEventTypes.TOP_CLOSE, 'close'],\n  [DOMTopLevelEventTypes.TOP_CONTEXT_MENU, 'contextMenu'],\n  [DOMTopLevelEventTypes.TOP_COPY, 'copy'],\n  [DOMTopLevelEventTypes.TOP_CUT, 'cut'],\n  [DOMTopLevelEventTypes.TOP_AUX_CLICK, 'auxClick'],\n  [DOMTopLevelEventTypes.TOP_DOUBLE_CLICK, 'doubleClick'],\n  [DOMTopLevelEventTypes.TOP_DRAG_END, 'dragEnd'],\n  [DOMTopLevelEventTypes.TOP_DRAG_START, 'dragStart'],\n  [DOMTopLevelEventTypes.TOP_DROP, 'drop'],\n  [DOMTopLevelEventTypes.TOP_FOCUS, 'focus'],\n  [DOMTopLevelEventTypes.TOP_INPUT, 'input'],\n  [DOMTopLevelEventTypes.TOP_INVALID, 'invalid'],\n  [DOMTopLevelEventTypes.TOP_KEY_DOWN, 'keyDown'],\n  [DOMTopLevelEventTypes.TOP_KEY_PRESS, 'keyPress'],\n  [DOMTopLevelEventTypes.TOP_KEY_UP, 'keyUp'],\n  [DOMTopLevelEventTypes.TOP_MOUSE_DOWN, 'mouseDown'],\n  [DOMTopLevelEventTypes.TOP_MOUSE_UP, 'mouseUp'],\n  [DOMTopLevelEventTypes.TOP_PASTE, 'paste'],\n  [DOMTopLevelEventTypes.TOP_PAUSE, 'pause'],\n  [DOMTopLevelEventTypes.TOP_PLAY, 'play'],\n  [DOMTopLevelEventTypes.TOP_POINTER_CANCEL, 'pointerCancel'],\n  [DOMTopLevelEventTypes.TOP_POINTER_DOWN, 'pointerDown'],\n  [DOMTopLevelEventTypes.TOP_POINTER_UP, 'pointerUp'],\n  [DOMTopLevelEventTypes.TOP_RATE_CHANGE, 'rateChange'],\n  [DOMTopLevelEventTypes.TOP_RESET, 'reset'],\n  [DOMTopLevelEventTypes.TOP_SEEKED, 'seeked'],\n  [DOMTopLevelEventTypes.TOP_SUBMIT, 'submit'],\n  [DOMTopLevelEventTypes.TOP_TOUCH_CANCEL, 'touchCancel'],\n  [DOMTopLevelEventTypes.TOP_TOUCH_END, 'touchEnd'],\n  [DOMTopLevelEventTypes.TOP_TOUCH_START, 'touchStart'],\n  [DOMTopLevelEventTypes.TOP_VOLUME_CHANGE, 'volumeChange'],\n];\nconst nonInteractiveEventTypeNames: Array<EventTuple> = [\n  [DOMTopLevelEventTypes.TOP_ABORT, 'abort'],\n  [DOMTopLevelEventTypes.TOP_ANIMATION_END, 'animationEnd'],\n  [DOMTopLevelEventTypes.TOP_ANIMATION_ITERATION, 'animationIteration'],\n  [DOMTopLevelEventTypes.TOP_ANIMATION_START, 'animationStart'],\n  [DOMTopLevelEventTypes.TOP_CAN_PLAY, 'canPlay'],\n  [DOMTopLevelEventTypes.TOP_CAN_PLAY_THROUGH, 'canPlayThrough'],\n  [DOMTopLevelEventTypes.TOP_DRAG, 'drag'],\n  [DOMTopLevelEventTypes.TOP_DRAG_ENTER, 'dragEnter'],\n  [DOMTopLevelEventTypes.TOP_DRAG_EXIT, 'dragExit'],\n  [DOMTopLevelEventTypes.TOP_DRAG_LEAVE, 'dragLeave'],\n  [DOMTopLevelEventTypes.TOP_DRAG_OVER, 'dragOver'],\n  [DOMTopLevelEventTypes.TOP_DURATION_CHANGE, 'durationChange'],\n  [DOMTopLevelEventTypes.TOP_EMPTIED, 'emptied'],\n  [DOMTopLevelEventTypes.TOP_ENCRYPTED, 'encrypted'],\n  [DOMTopLevelEventTypes.TOP_ENDED, 'ended'],\n  [DOMTopLevelEventTypes.TOP_ERROR, 'error'],\n  [DOMTopLevelEventTypes.TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'],\n  [DOMTopLevelEventTypes.TOP_LOAD, 'load'],\n  [DOMTopLevelEventTypes.TOP_LOADED_DATA, 'loadedData'],\n  [DOMTopLevelEventTypes.TOP_LOADED_METADATA, 'loadedMetadata'],\n  [DOMTopLevelEventTypes.TOP_LOAD_START, 'loadStart'],\n  [DOMTopLevelEventTypes.TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'],\n  [DOMTopLevelEventTypes.TOP_MOUSE_MOVE, 'mouseMove'],\n  [DOMTopLevelEventTypes.TOP_MOUSE_OUT, 'mouseOut'],\n  [DOMTopLevelEventTypes.TOP_MOUSE_OVER, 'mouseOver'],\n  [DOMTopLevelEventTypes.TOP_PLAYING, 'playing'],\n  [DOMTopLevelEventTypes.TOP_POINTER_MOVE, 'pointerMove'],\n  [DOMTopLevelEventTypes.TOP_POINTER_OUT, 'pointerOut'],\n  [DOMTopLevelEventTypes.TOP_POINTER_OVER, 'pointerOver'],\n  [DOMTopLevelEventTypes.TOP_PROGRESS, 'progress'],\n  [DOMTopLevelEventTypes.TOP_SCROLL, 'scroll'],\n  [DOMTopLevelEventTypes.TOP_SEEKING, 'seeking'],\n  [DOMTopLevelEventTypes.TOP_STALLED, 'stalled'],\n  [DOMTopLevelEventTypes.TOP_SUSPEND, 'suspend'],\n  [DOMTopLevelEventTypes.TOP_TIME_UPDATE, 'timeUpdate'],\n  [DOMTopLevelEventTypes.TOP_TOGGLE, 'toggle'],\n  [DOMTopLevelEventTypes.TOP_TOUCH_MOVE, 'touchMove'],\n  [DOMTopLevelEventTypes.TOP_TRANSITION_END, 'transitionEnd'],\n  [DOMTopLevelEventTypes.TOP_WAITING, 'waiting'],\n  [DOMTopLevelEventTypes.TOP_WHEEL, 'wheel'],\n];\n\nconst eventTypes: EventTypes = {};\nconst topLevelEventsToDispatchConfig: {\n  [key: TopLevelType]: DispatchConfig,\n} = {};\n\nfunction addEventTypeNameToConfig(\n  [topEvent, event]: EventTuple,\n  isInteractive: boolean,\n) {\n  const capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n  const onEvent = 'on' + capitalizedEvent;\n\n  const type = {\n    phasedRegistrationNames: {\n      bubbled: onEvent,\n      captured: onEvent + 'Capture',\n    },\n    dependencies: [topEvent],\n    isInteractive,\n  };\n  eventTypes[event] = type;\n  topLevelEventsToDispatchConfig[topEvent] = type;\n}\n\ninteractiveEventTypeNames.forEach(eventTuple => {\n  addEventTypeNameToConfig(eventTuple, true);\n});\nnonInteractiveEventTypeNames.forEach(eventTuple => {\n  addEventTypeNameToConfig(eventTuple, false);\n});\n\n// Only used in DEV for exhaustiveness validation.\nconst knownHTMLTopLevelTypes: Array<DOMTopLevelEventType> = [\n  DOMTopLevelEventTypes.TOP_ABORT,\n  DOMTopLevelEventTypes.TOP_CANCEL,\n  DOMTopLevelEventTypes.TOP_CAN_PLAY,\n  DOMTopLevelEventTypes.TOP_CAN_PLAY_THROUGH,\n  DOMTopLevelEventTypes.TOP_CLOSE,\n  DOMTopLevelEventTypes.TOP_DURATION_CHANGE,\n  DOMTopLevelEventTypes.TOP_EMPTIED,\n  DOMTopLevelEventTypes.TOP_ENCRYPTED,\n  DOMTopLevelEventTypes.TOP_ENDED,\n  DOMTopLevelEventTypes.TOP_ERROR,\n  DOMTopLevelEventTypes.TOP_INPUT,\n  DOMTopLevelEventTypes.TOP_INVALID,\n  DOMTopLevelEventTypes.TOP_LOAD,\n  DOMTopLevelEventTypes.TOP_LOADED_DATA,\n  DOMTopLevelEventTypes.TOP_LOADED_METADATA,\n  DOMTopLevelEventTypes.TOP_LOAD_START,\n  DOMTopLevelEventTypes.TOP_PAUSE,\n  DOMTopLevelEventTypes.TOP_PLAY,\n  DOMTopLevelEventTypes.TOP_PLAYING,\n  DOMTopLevelEventTypes.TOP_PROGRESS,\n  DOMTopLevelEventTypes.TOP_RATE_CHANGE,\n  DOMTopLevelEventTypes.TOP_RESET,\n  DOMTopLevelEventTypes.TOP_SEEKED,\n  DOMTopLevelEventTypes.TOP_SEEKING,\n  DOMTopLevelEventTypes.TOP_STALLED,\n  DOMTopLevelEventTypes.TOP_SUBMIT,\n  DOMTopLevelEventTypes.TOP_SUSPEND,\n  DOMTopLevelEventTypes.TOP_TIME_UPDATE,\n  DOMTopLevelEventTypes.TOP_TOGGLE,\n  DOMTopLevelEventTypes.TOP_VOLUME_CHANGE,\n  DOMTopLevelEventTypes.TOP_WAITING,\n];\n\nconst SimpleEventPlugin: PluginModule<MouseEvent> & {\n  isInteractiveTopLevelEventType: (topLevelType: TopLevelType) => boolean,\n} = {\n  eventTypes: eventTypes,\n\n  isInteractiveTopLevelEventType(topLevelType: TopLevelType): boolean {\n    const config = topLevelEventsToDispatchConfig[topLevelType];\n    return config !== undefined && config.isInteractive === true;\n  },\n\n  extractEvents: function(\n    topLevelType: TopLevelType,\n    targetInst: null | Fiber,\n    nativeEvent: MouseEvent,\n    nativeEventTarget: EventTarget,\n  ): null | ReactSyntheticEvent {\n    const dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    let EventConstructor;\n    switch (topLevelType) {\n      case DOMTopLevelEventTypes.TOP_KEY_PRESS:\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case DOMTopLevelEventTypes.TOP_KEY_DOWN:\n      case DOMTopLevelEventTypes.TOP_KEY_UP:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_BLUR:\n      case DOMTopLevelEventTypes.TOP_FOCUS:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_CLICK:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case DOMTopLevelEventTypes.TOP_AUX_CLICK:\n      case DOMTopLevelEventTypes.TOP_DOUBLE_CLICK:\n      case DOMTopLevelEventTypes.TOP_MOUSE_DOWN:\n      case DOMTopLevelEventTypes.TOP_MOUSE_MOVE:\n      case DOMTopLevelEventTypes.TOP_MOUSE_UP:\n      // TODO: Disabled elements should not respond to mouse events\n      /* falls through */\n      case DOMTopLevelEventTypes.TOP_MOUSE_OUT:\n      case DOMTopLevelEventTypes.TOP_MOUSE_OVER:\n      case DOMTopLevelEventTypes.TOP_CONTEXT_MENU:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_DRAG:\n      case DOMTopLevelEventTypes.TOP_DRAG_END:\n      case DOMTopLevelEventTypes.TOP_DRAG_ENTER:\n      case DOMTopLevelEventTypes.TOP_DRAG_EXIT:\n      case DOMTopLevelEventTypes.TOP_DRAG_LEAVE:\n      case DOMTopLevelEventTypes.TOP_DRAG_OVER:\n      case DOMTopLevelEventTypes.TOP_DRAG_START:\n      case DOMTopLevelEventTypes.TOP_DROP:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_TOUCH_CANCEL:\n      case DOMTopLevelEventTypes.TOP_TOUCH_END:\n      case DOMTopLevelEventTypes.TOP_TOUCH_MOVE:\n      case DOMTopLevelEventTypes.TOP_TOUCH_START:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_ANIMATION_END:\n      case DOMTopLevelEventTypes.TOP_ANIMATION_ITERATION:\n      case DOMTopLevelEventTypes.TOP_ANIMATION_START:\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_TRANSITION_END:\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_SCROLL:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_WHEEL:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_COPY:\n      case DOMTopLevelEventTypes.TOP_CUT:\n      case DOMTopLevelEventTypes.TOP_PASTE:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_GOT_POINTER_CAPTURE:\n      case DOMTopLevelEventTypes.TOP_LOST_POINTER_CAPTURE:\n      case DOMTopLevelEventTypes.TOP_POINTER_CANCEL:\n      case DOMTopLevelEventTypes.TOP_POINTER_DOWN:\n      case DOMTopLevelEventTypes.TOP_POINTER_MOVE:\n      case DOMTopLevelEventTypes.TOP_POINTER_OUT:\n      case DOMTopLevelEventTypes.TOP_POINTER_OVER:\n      case DOMTopLevelEventTypes.TOP_POINTER_UP:\n        EventConstructor = SyntheticPointerEvent;\n        break;\n      default:\n        if (__DEV__) {\n          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {\n            warningWithoutStack(\n              false,\n              'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' +\n                'is likely caused by a bug in React. Please file an issue.',\n              topLevelType,\n            );\n          }\n        }\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n    }\n    const event = EventConstructor.getPooled(\n      dispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n};\n\nexport default SimpleEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {AnyNativeEvent} from 'react-events/PluginModuleType';\nimport type {Fiber} from 'react-reconciler/src/ReactFiber';\nimport type {DOMTopLevelEventType} from 'react-events/TopLevelEventTypes';\n\nimport {batchedUpdates, interactiveUpdates} from 'react-events/ReactGenericBatching';\nimport {runExtractedEventsInBatch} from 'react-events/EventPluginHub';\nimport {isFiberMounted} from 'react-reconciler/reflection';\nimport {HostRoot} from 'shared/ReactWorkTags';\n\nimport {addEventBubbleListener, addEventCaptureListener} from './EventListener';\nimport getEventTarget from './getEventTarget';\nimport {getClosestInstanceFromNode} from '../client/ReactDOMComponentTree';\nimport SimpleEventPlugin from './SimpleEventPlugin';\nimport {getRawEventName} from './DOMTopLevelEventTypes';\n\nconst {isInteractiveTopLevelEventType} = SimpleEventPlugin;\n\nconst CALLBACK_BOOKKEEPING_POOL_SIZE = 10;\nconst callbackBookkeepingPool = [];\n\n/**\n * Find the deepest React component completely containing the root of the\n * passed-in instance (for use when entire React trees are nested within each\n * other). If React trees are not nested, returns null.\n */\nfunction findRootContainerNode(inst) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  while (inst.return) {\n    inst = inst.return;\n  }\n  if (inst.tag !== HostRoot) {\n    // This can happen if we're in a detached tree.\n    return null;\n  }\n  return inst.stateNode.containerInfo;\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction getTopLevelCallbackBookKeeping(\n  topLevelType,\n  nativeEvent,\n  targetInst,\n): {\n  topLevelType: ?DOMTopLevelEventType,\n  nativeEvent: ?AnyNativeEvent,\n  targetInst: Fiber | null,\n  ancestors: Array<Fiber>,\n} {\n  if (callbackBookkeepingPool.length) {\n    const instance = callbackBookkeepingPool.pop();\n    instance.topLevelType = topLevelType;\n    instance.nativeEvent = nativeEvent;\n    instance.targetInst = targetInst;\n    return instance;\n  }\n  return {\n    topLevelType,\n    nativeEvent,\n    targetInst,\n    ancestors: [],\n  };\n}\n\nfunction releaseTopLevelCallbackBookKeeping(instance) {\n  instance.topLevelType = null;\n  instance.nativeEvent = null;\n  instance.targetInst = null;\n  instance.ancestors.length = 0;\n  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {\n    callbackBookkeepingPool.push(instance);\n  }\n}\n\nfunction handleTopLevel(bookKeeping) {\n  let targetInst = bookKeeping.targetInst;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  let ancestor = targetInst;\n  do {\n    if (!ancestor) {\n      bookKeeping.ancestors.push(ancestor);\n      break;\n    }\n    const root = findRootContainerNode(ancestor);\n    if (!root) {\n      break;\n    }\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = getClosestInstanceFromNode(root);\n  } while (ancestor);\n\n  for (let i = 0; i < bookKeeping.ancestors.length; i++) {\n    targetInst = bookKeeping.ancestors[i];\n    runExtractedEventsInBatch(\n      bookKeeping.topLevelType,\n      targetInst,\n      bookKeeping.nativeEvent,\n      getEventTarget(bookKeeping.nativeEvent),\n    );\n  }\n}\n\n// TODO: can we stop exporting these?\nexport let _enabled = true;\n\nexport function setEnabled(enabled: ?boolean) {\n  _enabled = !!enabled;\n}\n\nexport function isEnabled() {\n  return _enabled;\n}\n\n/**\n * Traps top-level events by using event bubbling.\n *\n * @param {number} topLevelType Number from `TopLevelEventTypes`.\n * @param {object} element Element on which to attach listener.\n * @return {?object} An object with a remove function which will forcefully\n *                  remove the listener.\n * @internal\n */\nexport function trapBubbledEvent(\n  topLevelType: DOMTopLevelEventType,\n  element: Document | Element,\n) {\n  if (!element) {\n    return null;\n  }\n  const dispatch = isInteractiveTopLevelEventType(topLevelType)\n    ? dispatchInteractiveEvent\n    : dispatchEvent;\n\n  addEventBubbleListener(\n    element,\n    getRawEventName(topLevelType),\n    // Check if interactive and wrap in interactiveUpdates\n    dispatch.bind(null, topLevelType),\n  );\n}\n\n/**\n * Traps a top-level event by using event capturing.\n *\n * @param {number} topLevelType Number from `TopLevelEventTypes`.\n * @param {object} element Element on which to attach listener.\n * @return {?object} An object with a remove function which will forcefully\n *                  remove the listener.\n * @internal\n */\nexport function trapCapturedEvent(\n  topLevelType: DOMTopLevelEventType,\n  element: Document | Element,\n) {\n  if (!element) {\n    return null;\n  }\n  const dispatch = isInteractiveTopLevelEventType(topLevelType)\n    ? dispatchInteractiveEvent\n    : dispatchEvent;\n\n  addEventCaptureListener(\n    element,\n    getRawEventName(topLevelType),\n    // Check if interactive and wrap in interactiveUpdates\n    dispatch.bind(null, topLevelType),\n  );\n}\n\nfunction dispatchInteractiveEvent(topLevelType, nativeEvent) {\n  interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);\n}\n\nexport function dispatchEvent(\n  topLevelType: DOMTopLevelEventType,\n  nativeEvent: AnyNativeEvent,\n) {\n  if (!_enabled) {\n    return;\n  }\n\n  const nativeEventTarget = getEventTarget(nativeEvent);\n  let targetInst = getClosestInstanceFromNode(nativeEventTarget);\n  if (\n    targetInst !== null &&\n    typeof targetInst.tag === 'number' &&\n    !isFiberMounted(targetInst)\n  ) {\n    // If we get an event (ex: img onload) before committing that\n    // component's mount, ignore it for now (that is, treat it as if it was an\n    // event on a non-React tree). We might also consider queueing events and\n    // dispatching them after the mount.\n    targetInst = null;\n  }\n\n  const bookKeeping = getTopLevelCallbackBookKeeping(\n    topLevelType,\n    nativeEvent,\n    targetInst,\n  );\n\n  try {\n    // Event queue being processed in the same cycle allows\n    // `preventDefault`.\n    batchedUpdates(handleTopLevel, bookKeeping);\n  } finally {\n    releaseTopLevelCallbackBookKeeping(bookKeeping);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function addEventBubbleListener(\n  element: Document | Element,\n  eventType: string,\n  listener: Function,\n): void {\n  element.addEventListener(eventType, listener, false);\n}\n\nexport function addEventCaptureListener(\n  element: Document | Element,\n  eventType: string,\n  listener: Function,\n): void {\n  element.addEventListener(eventType, listener, true);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {registrationNameDependencies} from 'react-events/EventPluginRegistry';\nimport {\n  TOP_BLUR,\n  TOP_CANCEL,\n  TOP_CLOSE,\n  TOP_FOCUS,\n  TOP_INVALID,\n  TOP_RESET,\n  TOP_SCROLL,\n  TOP_SUBMIT,\n  getRawEventName,\n  mediaEventTypes,\n} from './DOMTopLevelEventTypes';\nimport {\n  setEnabled,\n  isEnabled,\n  trapBubbledEvent,\n  trapCapturedEvent,\n} from './ReactDOMEventListener';\nimport isEventSupported from './isEventSupported';\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactDOMEventListener, which is injected and can therefore support\n *    pluggable event sources. This is the only work that occurs in the main\n *    thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nconst alreadyListeningTo = {};\nlet reactTopListenersCounter = 0;\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nconst topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt: any) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * We listen for bubbled touch events on the document object.\n *\n * Firefox v8.01 (and possibly others) exhibited strange behavior when\n * mounting `onmousemove` events at some node that was not the document\n * element. The symptoms were that if your mouse is not moving over something\n * contained within that mount point (for example on the background) the\n * top-level listeners for `onmousemove` won't be called. However, if you\n * register the `mousemove` on the document object, then it will of course\n * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n * top-level listeners to the document object only, at least for these\n * movement types of events and possibly all events.\n *\n * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n *\n * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n * they bubble to document.\n *\n * @param {string} registrationName Name of listener (e.g. `onClick`).\n * @param {object} mountAt Container where to mount the listener\n */\nexport function listenTo(\n  registrationName: string,\n  mountAt: Document | Element,\n) {\n  const isListening = getListeningForDocument(mountAt);\n  const dependencies = registrationNameDependencies[registrationName];\n\n  for (let i = 0; i < dependencies.length; i++) {\n    const dependency = dependencies[i];\n    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n      switch (dependency) {\n        case TOP_SCROLL:\n          trapCapturedEvent(TOP_SCROLL, mountAt);\n          break;\n        case TOP_FOCUS:\n        case TOP_BLUR:\n          trapCapturedEvent(TOP_FOCUS, mountAt);\n          trapCapturedEvent(TOP_BLUR, mountAt);\n          // We set the flag for a single dependency later in this function,\n          // but this ensures we mark both as attached rather than just one.\n          isListening[TOP_BLUR] = true;\n          isListening[TOP_FOCUS] = true;\n          break;\n        case TOP_CANCEL:\n        case TOP_CLOSE:\n          if (isEventSupported(getRawEventName(dependency))) {\n            trapCapturedEvent(dependency, mountAt);\n          }\n          break;\n        case TOP_INVALID:\n        case TOP_SUBMIT:\n        case TOP_RESET:\n          // We listen to them on the target DOM elements.\n          // Some of them bubble so we don't want them to fire twice.\n          break;\n        default:\n          // By default, listen on the top level to all non-media events.\n          // Media events don't bubble so adding the listener wouldn't do anything.\n          const isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;\n          if (!isMediaEvent) {\n            trapBubbledEvent(dependency, mountAt);\n          }\n          break;\n      }\n      isListening[dependency] = true;\n    }\n  }\n}\n\nexport function isListeningToAllDependencies(\n  registrationName: string,\n  mountAt: Document | Element,\n) {\n  const isListening = getListeningForDocument(mountAt);\n  const dependencies = registrationNameDependencies[registrationName];\n  for (let i = 0; i < dependencies.length; i++) {\n    const dependency = dependencies[i];\n    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport {setEnabled, isEnabled, trapBubbledEvent, trapCapturedEvent};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport default function getActiveElement(doc: ?Document): ?Element {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root: Element, offset: number): ?Object {\n  let node = getLeafNode(root);\n  let nodeStart = 0;\n  let nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === TEXT_NODE) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart,\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nexport default getNodeForCharacterOffset;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getNodeForCharacterOffset from './getNodeForCharacterOffset';\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\n\n/**\n * @param {DOMElement} outerNode\n * @return {?object}\n */\nexport function getOffsets(outerNode) {\n  const {ownerDocument} = outerNode;\n  const win = (ownerDocument && ownerDocument.defaultView) || window;\n  const selection = win.getSelection && win.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  const {anchorNode, anchorOffset, focusNode, focusOffset} = selection;\n\n  // In Firefox, anchorNode and focusNode can be \"anonymous divs\", e.g. the\n  // up/down buttons on an <input type=\"number\">. Anonymous divs do not seem to\n  // expose properties, triggering a \"Permission denied error\" if any of its\n  // properties are accessed. The only seemingly possible way to avoid erroring\n  // is to access a property that typically works for non-anonymous divs and\n  // catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    anchorNode.nodeType;\n    focusNode.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  return getModernOffsetsFromPoints(\n    outerNode,\n    anchorNode,\n    anchorOffset,\n    focusNode,\n    focusOffset,\n  );\n}\n\n/**\n * Returns {start, end} where `start` is the character/codepoint index of\n * (anchorNode, anchorOffset) within the textContent of `outerNode`, and\n * `end` is the index of (focusNode, focusOffset).\n *\n * Returns null if you pass in garbage input but we should probably just crash.\n *\n * Exported only for testing.\n */\nexport function getModernOffsetsFromPoints(\n  outerNode,\n  anchorNode,\n  anchorOffset,\n  focusNode,\n  focusOffset,\n) {\n  let length = 0;\n  let start = -1;\n  let end = -1;\n  let indexWithinAnchor = 0;\n  let indexWithinFocus = 0;\n  let node = outerNode;\n  let parentNode = null;\n\n  outer: while (true) {\n    let next = null;\n\n    while (true) {\n      if (\n        node === anchorNode &&\n        (anchorOffset === 0 || node.nodeType === TEXT_NODE)\n      ) {\n        start = length + anchorOffset;\n      }\n      if (\n        node === focusNode &&\n        (focusOffset === 0 || node.nodeType === TEXT_NODE)\n      ) {\n        end = length + focusOffset;\n      }\n\n      if (node.nodeType === TEXT_NODE) {\n        length += node.nodeValue.length;\n      }\n\n      if ((next = node.firstChild) === null) {\n        break;\n      }\n      // Moving from `node` to its first child `next`.\n      parentNode = node;\n      node = next;\n    }\n\n    while (true) {\n      if (node === outerNode) {\n        // If `outerNode` has children, this is always the second time visiting\n        // it. If it has no children, this is still the first loop, and the only\n        // valid selection is anchorNode and focusNode both equal to this node\n        // and both offsets 0, in which case we will have handled above.\n        break outer;\n      }\n      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {\n        start = length;\n      }\n      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {\n        end = length;\n      }\n      if ((next = node.nextSibling) !== null) {\n        break;\n      }\n      node = parentNode;\n      parentNode = node.parentNode;\n    }\n\n    // Moving from `node` to its next sibling `next`.\n    node = next;\n  }\n\n  if (start === -1 || end === -1) {\n    // This should never happen. (Would happen if the anchor/focus nodes aren't\n    // actually inside the passed-in node.)\n    return null;\n  }\n\n  return {\n    start: start,\n    end: end,\n  };\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nexport function setOffsets(node, offsets) {\n  const doc = node.ownerDocument || document;\n  const win = (doc && doc.defaultView) || window;\n\n  // Edge fails with \"Object expected\" in some scenarios.\n  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,\n  // fails when pasting 100+ items)\n  if (!win.getSelection) {\n    return;\n  }\n\n  const selection = win.getSelection();\n  const length = node.textContent.length;\n  let start = Math.min(offsets.start, length);\n  let end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    let temp = end;\n    end = start;\n    start = temp;\n  }\n\n  const startMarker = getNodeForCharacterOffset(node, start);\n  const endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    if (\n      selection.rangeCount === 1 &&\n      selection.anchorNode === startMarker.node &&\n      selection.anchorOffset === startMarker.offset &&\n      selection.focusNode === endMarker.node &&\n      selection.focusOffset === endMarker.offset\n    ) {\n      return;\n    }\n    const range = doc.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getActiveElement from './getActiveElement';\n\nimport {getOffsets, setOffsets} from './ReactDOMSelection';\nimport {ELEMENT_NODE, TEXT_NODE} from '../shared/HTMLNodeType';\n\nfunction isTextNode(node) {\n  return node && node.nodeType === TEXT_NODE;\n}\n\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nfunction isInDocument(node) {\n  return (\n    node &&\n    node.ownerDocument &&\n    containsNode(node.ownerDocument.documentElement, node)\n  );\n}\n\nfunction isSameOriginFrame(iframe) {\n  try {\n    // Accessing the contentDocument of a HTMLIframeElement can cause the browser\n    // to throw, e.g. if it has a cross-origin src attribute.\n    // Safari will show an error in the console when the access results in \"Blocked a frame with origin\". e.g:\n    // iframe.contentDocument.defaultView;\n    // A safety way is to access one of the cross origin properties: Window or Location\n    // Which might result in \"SecurityError\" DOM Exception and it is compatible to Safari.\n    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl\n\n    return typeof iframe.contentWindow.location.href === 'string';\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction getActiveElementDeep() {\n  let win = window;\n  let element = getActiveElement();\n  while (element instanceof win.HTMLIFrameElement) {\n    if (isSameOriginFrame(element)) {\n      win = element.contentWindow;\n    } else {\n      return element;\n    }\n    element = getActiveElement(win.document);\n  }\n  return element;\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\n\n/**\n * @hasSelectionCapabilities: we get the element types that support selection\n * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`\n * and `selectionEnd` rows.\n */\nexport function hasSelectionCapabilities(elem) {\n  const nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName &&\n    ((nodeName === 'input' &&\n      (elem.type === 'text' ||\n        elem.type === 'search' ||\n        elem.type === 'tel' ||\n        elem.type === 'url' ||\n        elem.type === 'password')) ||\n      nodeName === 'textarea' ||\n      elem.contentEditable === 'true')\n  );\n}\n\nexport function getSelectionInformation() {\n  const focusedElem = getActiveElementDeep();\n  return {\n    focusedElem: focusedElem,\n    selectionRange: hasSelectionCapabilities(focusedElem)\n      ? getSelection(focusedElem)\n      : null,\n  };\n}\n\n/**\n * @restoreSelection: If any selection information was potentially lost,\n * restore it. This is useful when performing operations that could remove dom\n * nodes and place them back in, resulting in focus being lost.\n */\nexport function restoreSelection(priorSelectionInformation) {\n  const curFocusedElem = getActiveElementDeep();\n  const priorFocusedElem = priorSelectionInformation.focusedElem;\n  const priorSelectionRange = priorSelectionInformation.selectionRange;\n  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n    if (\n      priorSelectionRange !== null &&\n      hasSelectionCapabilities(priorFocusedElem)\n    ) {\n      setSelection(priorFocusedElem, priorSelectionRange);\n    }\n\n    // Focusing a node can change the scroll position, which is undesirable\n    const ancestors = [];\n    let ancestor = priorFocusedElem;\n    while ((ancestor = ancestor.parentNode)) {\n      if (ancestor.nodeType === ELEMENT_NODE) {\n        ancestors.push({\n          element: ancestor,\n          left: ancestor.scrollLeft,\n          top: ancestor.scrollTop,\n        });\n      }\n    }\n\n    if (typeof priorFocusedElem.focus === 'function') {\n      priorFocusedElem.focus();\n    }\n\n    for (let i = 0; i < ancestors.length; i++) {\n      const info = ancestors[i];\n      info.element.scrollLeft = info.left;\n      info.element.scrollTop = info.top;\n    }\n  }\n}\n\n/**\n * @getSelection: Gets the selection bounds of a focused textarea, input or\n * contentEditable node.\n * -@input: Look up selection bounds of this input\n * -@return {start: selectionStart, end: selectionEnd}\n */\nexport function getSelection(input) {\n  let selection;\n\n  if ('selectionStart' in input) {\n    // Modern browser with input or textarea.\n    selection = {\n      start: input.selectionStart,\n      end: input.selectionEnd,\n    };\n  } else {\n    // Content editable or old IE textarea.\n    selection = getOffsets(input);\n  }\n\n  return selection || {start: 0, end: 0};\n}\n\n/**\n * @setSelection: Sets the selection bounds of a textarea or input and focuses\n * the input.\n * -@input     Set selection bounds of this input or textarea\n * -@offsets   Object of same form that is returned from get*\n */\nexport function setSelection(input, offsets) {\n  let {start, end} = offsets;\n  if (end === undefined) {\n    end = start;\n  }\n\n  if ('selectionStart' in input) {\n    input.selectionStart = start;\n    input.selectionEnd = Math.min(end, input.value.length);\n  } else {\n    setOffsets(input, offsets);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {accumulateTwoPhaseDispatches} from 'react-events/EventPropagators';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\nimport SyntheticEvent from 'react-events/SyntheticEvent';\nimport isTextInputElement from 'shared/isTextInputElement';\nimport shallowEqual from 'shared/shallowEqual';\n\nimport {\n  TOP_BLUR,\n  TOP_CONTEXT_MENU,\n  TOP_DRAG_END,\n  TOP_FOCUS,\n  TOP_KEY_DOWN,\n  TOP_KEY_UP,\n  TOP_MOUSE_DOWN,\n  TOP_MOUSE_UP,\n  TOP_SELECTION_CHANGE,\n} from './DOMTopLevelEventTypes';\nimport {isListeningToAllDependencies} from './ReactBrowserEventEmitter';\nimport getActiveElement from '../client/getActiveElement';\nimport {getNodeFromInstance} from '../client/ReactDOMComponentTree';\nimport {hasSelectionCapabilities} from '../client/ReactInputSelection';\nimport {DOCUMENT_NODE} from '../shared/HTMLNodeType';\n\nconst skipSelectionChangeEvent =\n  canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nconst eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelect',\n      captured: 'onSelectCapture',\n    },\n    dependencies: [\n      TOP_BLUR,\n      TOP_CONTEXT_MENU,\n      TOP_DRAG_END,\n      TOP_FOCUS,\n      TOP_KEY_DOWN,\n      TOP_KEY_UP,\n      TOP_MOUSE_DOWN,\n      TOP_MOUSE_UP,\n      TOP_SELECTION_CHANGE,\n    ],\n  },\n};\n\nlet activeElement = null;\nlet activeElementInst = null;\nlet lastSelection = null;\nlet mouseDown = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd,\n    };\n  } else {\n    const win =\n      (node.ownerDocument && node.ownerDocument.defaultView) || window;\n    const selection = win.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset,\n    };\n  }\n}\n\n/**\n * Get document associated with the event target.\n *\n * @param {object} nativeEventTarget\n * @return {Document}\n */\nfunction getEventTargetDocument(eventTarget) {\n  return eventTarget.window === eventTarget\n    ? eventTarget.document\n    : eventTarget.nodeType === DOCUMENT_NODE\n      ? eventTarget\n      : eventTarget.ownerDocument;\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @param {object} nativeEventTarget\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  const doc = getEventTargetDocument(nativeEventTarget);\n\n  if (\n    mouseDown ||\n    activeElement == null ||\n    activeElement !== getActiveElement(doc)\n  ) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  const currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    const syntheticEvent = SyntheticEvent.getPooled(\n      eventTypes.select,\n      activeElementInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nconst SelectEventPlugin = {\n  eventTypes: eventTypes,\n\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  ) {\n    const doc = getEventTargetDocument(nativeEventTarget);\n    // Track whether all listeners exists for this plugin. If none exist, we do\n    // not extract events. See #3639.\n    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {\n      return null;\n    }\n\n    const targetNode = targetInst ? getNodeFromInstance(targetInst) : window;\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case TOP_FOCUS:\n        if (\n          isTextInputElement(targetNode) ||\n          targetNode.contentEditable === 'true'\n        ) {\n          activeElement = targetNode;\n          activeElementInst = targetInst;\n          lastSelection = null;\n        }\n        break;\n      case TOP_BLUR:\n        activeElement = null;\n        activeElementInst = null;\n        lastSelection = null;\n        break;\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case TOP_MOUSE_DOWN:\n        mouseDown = true;\n        break;\n      case TOP_CONTEXT_MENU:\n      case TOP_MOUSE_UP:\n      case TOP_DRAG_END:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case TOP_SELECTION_CHANGE:\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case TOP_KEY_DOWN:\n      case TOP_KEY_UP:\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n};\n\nexport default SelectEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {injection as EventPluginHubInjection} from 'react-events/EventPluginHub';\nimport {setComponentTree} from 'react-events/EventPluginUtils';\n\nimport {\n  getFiberCurrentPropsFromNode,\n  getInstanceFromNode,\n  getNodeFromInstance,\n} from './ReactDOMComponentTree';\nimport BeforeInputEventPlugin from '../events/BeforeInputEventPlugin';\nimport ChangeEventPlugin from '../events/ChangeEventPlugin';\nimport DOMEventPluginOrder from '../events/DOMEventPluginOrder';\nimport EnterLeaveEventPlugin from '../events/EnterLeaveEventPlugin';\nimport SelectEventPlugin from '../events/SelectEventPlugin';\nimport SimpleEventPlugin from '../events/SimpleEventPlugin';\n\n/**\n * Inject modules for resolving DOM hierarchy and plugin ordering.\n */\nEventPluginHubInjection.injectEventPluginOrder(DOMEventPluginOrder);\nsetComponentTree(\n  getFiberCurrentPropsFromNode,\n  getInstanceFromNode,\n  getNodeFromInstance,\n);\n\n/**\n * Some important event plugins included by default (without having to require\n * them).\n */\nEventPluginHubInjection.injectEventPluginsByName({\n  SimpleEventPlugin: SimpleEventPlugin,\n  EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n  ChangeEventPlugin: ChangeEventPlugin,\n  SelectEventPlugin: SelectEventPlugin,\n  BeforeInputEventPlugin: BeforeInputEventPlugin,\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport React from 'react';\nimport warning from 'shared/warning';\nimport {getToStringValue, toString} from './ToStringValue';\n\nlet didWarnSelectedSetOnOption = false;\nlet didWarnInvalidChild = false;\n\nfunction flattenChildren(children) {\n  let content = '';\n\n  // Flatten children. We'll warn if they are invalid\n  // during validateProps() which runs for hydration too.\n  // Note that this would throw on non-element objects.\n  // Elements are stringified (which is normally irrelevant\n  // but matters for <fbt>).\n  React.Children.forEach(children, function(child) {\n    if (child == null) {\n      return;\n    }\n    content += child;\n    // Note: we don't warn about invalid children here.\n    // Instead, this is done separately below so that\n    // it happens during the hydration codepath too.\n  });\n\n  return content;\n}\n\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\n\nexport function validateProps(element: Element, props: Object) {\n  if (__DEV__) {\n    // This mirrors the codepath above, but runs for hydration too.\n    // Warn about invalid children here so that client and hydration are consistent.\n    // TODO: this seems like it could cause a DEV-only throw for hydration\n    // if children contains a non-element object. We should try to avoid that.\n    if (typeof props.children === 'object' && props.children !== null) {\n      React.Children.forEach(props.children, function(child) {\n        if (child == null) {\n          return;\n        }\n        if (typeof child === 'string' || typeof child === 'number') {\n          return;\n        }\n        if (typeof child.type !== 'string') {\n          return;\n        }\n        if (!didWarnInvalidChild) {\n          didWarnInvalidChild = true;\n          warning(\n            false,\n            'Only strings and numbers are supported as <option> children.',\n          );\n        }\n      });\n    }\n\n    // TODO: Remove support for `selected` in <option>.\n    if (props.selected != null && !didWarnSelectedSetOnOption) {\n      warning(\n        false,\n        'Use the `defaultValue` or `value` props on <select> instead of ' +\n          'setting `selected` on <option>.',\n      );\n      didWarnSelectedSetOnOption = true;\n    }\n  }\n}\n\nexport function postMountWrapper(element: Element, props: Object) {\n  // value=\"\" should make a value attribute (#6219)\n  if (props.value != null) {\n    element.setAttribute('value', toString(getToStringValue(props.value)));\n  }\n}\n\nexport function getHostProps(element: Element, props: Object) {\n  const hostProps = {children: undefined, ...props};\n  const content = flattenChildren(props.children);\n\n  if (content) {\n    hostProps.children = content;\n  }\n\n  return hostProps;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nimport {getCurrentFiberOwnerNameInDevOrNull} from 'react-reconciler/src/ReactCurrentFiber';\nimport warning from 'shared/warning';\n\nimport ReactControlledValuePropTypes from '../shared/ReactControlledValuePropTypes';\nimport {getToStringValue, toString} from './ToStringValue';\n\nlet didWarnValueDefaultValue;\n\nif (__DEV__) {\n  didWarnValueDefaultValue = false;\n}\n\ntype SelectWithWrapperState = HTMLSelectElement & {\n  _wrapperState: {\n    wasMultiple: boolean,\n  },\n};\n\nfunction getDeclarationErrorAddendum() {\n  const ownerName = getCurrentFiberOwnerNameInDevOrNull();\n  if (ownerName) {\n    return '\\n\\nCheck the render method of `' + ownerName + '`.';\n  }\n  return '';\n}\n\nconst valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n */\nfunction checkSelectPropTypes(props) {\n  ReactControlledValuePropTypes.checkPropTypes('select', props);\n\n  for (let i = 0; i < valuePropNames.length; i++) {\n    const propName = valuePropNames[i];\n    if (props[propName] == null) {\n      continue;\n    }\n    const isArray = Array.isArray(props[propName]);\n    if (props.multiple && !isArray) {\n      warning(\n        false,\n        'The `%s` prop supplied to <select> must be an array if ' +\n          '`multiple` is true.%s',\n        propName,\n        getDeclarationErrorAddendum(),\n      );\n    } else if (!props.multiple && isArray) {\n      warning(\n        false,\n        'The `%s` prop supplied to <select> must be a scalar ' +\n          'value if `multiple` is false.%s',\n        propName,\n        getDeclarationErrorAddendum(),\n      );\n    }\n  }\n}\n\nfunction updateOptions(\n  node: HTMLSelectElement,\n  multiple: boolean,\n  propValue: any,\n  setDefaultSelected: boolean,\n) {\n  type IndexableHTMLOptionsCollection = HTMLOptionsCollection & {\n    [key: number]: HTMLOptionElement,\n  };\n  const options: IndexableHTMLOptionsCollection = node.options;\n\n  if (multiple) {\n    let selectedValues = (propValue: Array<string>);\n    let selectedValue = {};\n    for (let i = 0; i < selectedValues.length; i++) {\n      // Prefix to avoid chaos with special keys.\n      selectedValue['$' + selectedValues[i]] = true;\n    }\n    for (let i = 0; i < options.length; i++) {\n      const selected = selectedValue.hasOwnProperty('$' + options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n      if (selected && setDefaultSelected) {\n        options[i].defaultSelected = true;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    let selectedValue = toString(getToStringValue((propValue: any)));\n    let defaultSelected = null;\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        if (setDefaultSelected) {\n          options[i].defaultSelected = true;\n        }\n        return;\n      }\n      if (defaultSelected === null && !options[i].disabled) {\n        defaultSelected = options[i];\n      }\n    }\n    if (defaultSelected !== null) {\n      defaultSelected.selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\n\nexport function getHostProps(element: Element, props: Object) {\n  return Object.assign({}, props, {\n    value: undefined,\n  });\n}\n\nexport function initWrapperState(element: Element, props: Object) {\n  const node = ((element: any): SelectWithWrapperState);\n  if (__DEV__) {\n    checkSelectPropTypes(props);\n  }\n\n  node._wrapperState = {\n    wasMultiple: !!props.multiple,\n  };\n\n  if (__DEV__) {\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnValueDefaultValue\n    ) {\n      warning(\n        false,\n        'Select elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled select ' +\n          'element and remove one of these props. More info: ' +\n          'https://fb.me/react-controlled-components',\n      );\n      didWarnValueDefaultValue = true;\n    }\n  }\n}\n\nexport function postMountWrapper(element: Element, props: Object) {\n  const node = ((element: any): SelectWithWrapperState);\n  node.multiple = !!props.multiple;\n  const value = props.value;\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (props.defaultValue != null) {\n    updateOptions(node, !!props.multiple, props.defaultValue, true);\n  }\n}\n\nexport function postUpdateWrapper(element: Element, props: Object) {\n  const node = ((element: any): SelectWithWrapperState);\n  const wasMultiple = node._wrapperState.wasMultiple;\n  node._wrapperState.wasMultiple = !!props.multiple;\n\n  const value = props.value;\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  } else if (wasMultiple !== !!props.multiple) {\n    // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n    if (props.defaultValue != null) {\n      updateOptions(node, !!props.multiple, props.defaultValue, true);\n    } else {\n      // Revert the select back to its default unselected state.\n      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);\n    }\n  }\n}\n\nexport function restoreControlledState(element: Element, props: Object) {\n  const node = ((element: any): SelectWithWrapperState);\n  const value = props.value;\n\n  if (value != null) {\n    updateOptions(node, !!props.multiple, value, false);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport warning from 'shared/warning';\n\nimport ReactControlledValuePropTypes from '../shared/ReactControlledValuePropTypes';\nimport {getCurrentFiberOwnerNameInDevOrNull} from 'react-reconciler/src/ReactCurrentFiber';\nimport {getToStringValue, toString} from './ToStringValue';\nimport type {ToStringValue} from './ToStringValue';\n\nlet didWarnValDefaultVal = false;\n\ntype TextAreaWithWrapperState = HTMLTextAreaElement & {\n  _wrapperState: {\n    initialValue: ToStringValue,\n  },\n};\n\n/**\n * Implements a <textarea> host component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\n\nexport function getHostProps(element: Element, props: Object) {\n  const node = ((element: any): TextAreaWithWrapperState);\n  invariant(\n    props.dangerouslySetInnerHTML == null,\n    '`dangerouslySetInnerHTML` does not make sense on <textarea>.',\n  );\n\n  // Always set children to the same thing. In IE9, the selection range will\n  // get reset if `textContent` is mutated.  We could add a check in setTextContent\n  // to only set the value if/when the value differs from the node value (which would\n  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this\n  // solution. The value can be a boolean or object so that's why it's forced\n  // to be a string.\n  const hostProps = {\n    ...props,\n    value: undefined,\n    defaultValue: undefined,\n    children: toString(node._wrapperState.initialValue),\n  };\n\n  return hostProps;\n}\n\nexport function initWrapperState(element: Element, props: Object) {\n  const node = ((element: any): TextAreaWithWrapperState);\n  if (__DEV__) {\n    ReactControlledValuePropTypes.checkPropTypes('textarea', props);\n    if (\n      props.value !== undefined &&\n      props.defaultValue !== undefined &&\n      !didWarnValDefaultVal\n    ) {\n      warning(\n        false,\n        '%s contains a textarea with both value and defaultValue props. ' +\n          'Textarea elements must be either controlled or uncontrolled ' +\n          '(specify either the value prop, or the defaultValue prop, but not ' +\n          'both). Decide between using a controlled or uncontrolled textarea ' +\n          'and remove one of these props. More info: ' +\n          'https://fb.me/react-controlled-components',\n        getCurrentFiberOwnerNameInDevOrNull() || 'A component',\n      );\n      didWarnValDefaultVal = true;\n    }\n  }\n\n  let initialValue = props.value;\n\n  // Only bother fetching default value if we're going to use it\n  if (initialValue == null) {\n    let defaultValue = props.defaultValue;\n    // TODO (yungsters): Remove support for children content in <textarea>.\n    let children = props.children;\n    if (children != null) {\n      if (__DEV__) {\n        warning(\n          false,\n          'Use the `defaultValue` or `value` props instead of setting ' +\n            'children on <textarea>.',\n        );\n      }\n      invariant(\n        defaultValue == null,\n        'If you supply `defaultValue` on a <textarea>, do not pass children.',\n      );\n      if (Array.isArray(children)) {\n        invariant(\n          children.length <= 1,\n          '<textarea> can only have at most one child.',\n        );\n        children = children[0];\n      }\n\n      defaultValue = children;\n    }\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    initialValue = defaultValue;\n  }\n\n  node._wrapperState = {\n    initialValue: getToStringValue(initialValue),\n  };\n}\n\nexport function updateWrapper(element: Element, props: Object) {\n  const node = ((element: any): TextAreaWithWrapperState);\n  const value = getToStringValue(props.value);\n  const defaultValue = getToStringValue(props.defaultValue);\n  if (value != null) {\n    // Cast `value` to a string to ensure the value is set correctly. While\n    // browsers typically do this as necessary, jsdom doesn't.\n    const newValue = toString(value);\n    // To avoid side effects (such as losing text selection), only set value if changed\n    if (newValue !== node.value) {\n      node.value = newValue;\n    }\n    if (props.defaultValue == null && node.defaultValue !== newValue) {\n      node.defaultValue = newValue;\n    }\n  }\n  if (defaultValue != null) {\n    node.defaultValue = toString(defaultValue);\n  }\n}\n\nexport function postMountWrapper(element: Element, props: Object) {\n  const node = ((element: any): TextAreaWithWrapperState);\n  // This is in postMount because we need access to the DOM node, which is not\n  // available until after the component has mounted.\n  const textContent = node.textContent;\n\n  // Only set node.value if textContent is equal to the expected\n  // initial value. In IE10/IE11 there is a bug where the placeholder attribute\n  // will populate textContent as well.\n  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\n  if (textContent === node._wrapperState.initialValue) {\n    node.value = textContent;\n  }\n}\n\nexport function restoreControlledState(element: Element, props: Object) {\n  // DOM component is still mounted; update\n  updateWrapper(element, props);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nconst MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\nconst SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nexport const Namespaces = {\n  html: HTML_NAMESPACE,\n  mathml: MATH_NAMESPACE,\n  svg: SVG_NAMESPACE,\n};\n\n// Assumes there is no parent namespace.\nexport function getIntrinsicNamespace(type: string): string {\n  switch (type) {\n    case 'svg':\n      return SVG_NAMESPACE;\n    case 'math':\n      return MATH_NAMESPACE;\n    default:\n      return HTML_NAMESPACE;\n  }\n}\n\nexport function getChildNamespace(\n  parentNamespace: string | null,\n  type: string,\n): string {\n  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {\n    // No (or default) parent namespace: potential entry point.\n    return getIntrinsicNamespace(type);\n  }\n  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {\n    // We're leaving SVG.\n    return HTML_NAMESPACE;\n  }\n  // By default, pass namespace below.\n  return parentNamespace;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {Namespaces} from '../shared/DOMNamespaces';\nimport createMicrosoftUnsafeLocalFunction from '../shared/createMicrosoftUnsafeLocalFunction';\n\n// SVG temp container for IE lacking innerHTML\nlet reusableSVGContainer;\n\n/**\n * Set the innerHTML property of a node\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nconst setInnerHTML = createMicrosoftUnsafeLocalFunction(function(\n  node: Element,\n  html: string,\n): void {\n  // IE does not have innerHTML for SVG nodes, so instead we inject the\n  // new markup in a temp node and then move the child nodes across into\n  // the target node\n\n  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {\n    reusableSVGContainer =\n      reusableSVGContainer || document.createElement('div');\n    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n    const svgNode = reusableSVGContainer.firstChild;\n    while (node.firstChild) {\n      node.removeChild(node.firstChild);\n    }\n    while (svgNode.firstChild) {\n      node.appendChild(svgNode.firstChild);\n    }\n  } else {\n    node.innerHTML = html;\n  }\n});\n\nexport default setInnerHTML;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* globals MSApp */\n\n/**\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\n */\nconst createMicrosoftUnsafeLocalFunction = function(func) {\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n    return function(arg0, arg1, arg2, arg3) {\n      MSApp.execUnsafeLocalFunction(function() {\n        return func(arg0, arg1, arg2, arg3);\n      });\n    };\n  } else {\n    return func;\n  }\n};\n\nexport default createMicrosoftUnsafeLocalFunction;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {TEXT_NODE} from '../shared/HTMLNodeType';\n\n/**\n * Set the textContent property of a node. For text updates, it's faster\n * to set the `nodeValue` of the Text node directly instead of using\n * `.textContent` which will remove the existing node and create a new one.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nlet setTextContent = function(node: Element, text: string): void {\n  if (text) {\n    let firstChild = node.firstChild;\n\n    if (\n      firstChild &&\n      firstChild === node.lastChild &&\n      firstChild.nodeType === TEXT_NODE\n    ) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n};\n\nexport default setTextContent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// List derived from Gecko source code:\n// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js\nexport const shorthandToLonghand = {\n  animation: [\n    'animationDelay',\n    'animationDirection',\n    'animationDuration',\n    'animationFillMode',\n    'animationIterationCount',\n    'animationName',\n    'animationPlayState',\n    'animationTimingFunction',\n  ],\n  background: [\n    'backgroundAttachment',\n    'backgroundClip',\n    'backgroundColor',\n    'backgroundImage',\n    'backgroundOrigin',\n    'backgroundPositionX',\n    'backgroundPositionY',\n    'backgroundRepeat',\n    'backgroundSize',\n  ],\n  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],\n  border: [\n    'borderBottomColor',\n    'borderBottomStyle',\n    'borderBottomWidth',\n    'borderImageOutset',\n    'borderImageRepeat',\n    'borderImageSlice',\n    'borderImageSource',\n    'borderImageWidth',\n    'borderLeftColor',\n    'borderLeftStyle',\n    'borderLeftWidth',\n    'borderRightColor',\n    'borderRightStyle',\n    'borderRightWidth',\n    'borderTopColor',\n    'borderTopStyle',\n    'borderTopWidth',\n  ],\n  borderBlockEnd: [\n    'borderBlockEndColor',\n    'borderBlockEndStyle',\n    'borderBlockEndWidth',\n  ],\n  borderBlockStart: [\n    'borderBlockStartColor',\n    'borderBlockStartStyle',\n    'borderBlockStartWidth',\n  ],\n  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],\n  borderColor: [\n    'borderBottomColor',\n    'borderLeftColor',\n    'borderRightColor',\n    'borderTopColor',\n  ],\n  borderImage: [\n    'borderImageOutset',\n    'borderImageRepeat',\n    'borderImageSlice',\n    'borderImageSource',\n    'borderImageWidth',\n  ],\n  borderInlineEnd: [\n    'borderInlineEndColor',\n    'borderInlineEndStyle',\n    'borderInlineEndWidth',\n  ],\n  borderInlineStart: [\n    'borderInlineStartColor',\n    'borderInlineStartStyle',\n    'borderInlineStartWidth',\n  ],\n  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],\n  borderRadius: [\n    'borderBottomLeftRadius',\n    'borderBottomRightRadius',\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n  ],\n  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],\n  borderStyle: [\n    'borderBottomStyle',\n    'borderLeftStyle',\n    'borderRightStyle',\n    'borderTopStyle',\n  ],\n  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],\n  borderWidth: [\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'borderRightWidth',\n    'borderTopWidth',\n  ],\n  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],\n  columns: ['columnCount', 'columnWidth'],\n  flex: ['flexBasis', 'flexGrow', 'flexShrink'],\n  flexFlow: ['flexDirection', 'flexWrap'],\n  font: [\n    'fontFamily',\n    'fontFeatureSettings',\n    'fontKerning',\n    'fontLanguageOverride',\n    'fontSize',\n    'fontSizeAdjust',\n    'fontStretch',\n    'fontStyle',\n    'fontVariant',\n    'fontVariantAlternates',\n    'fontVariantCaps',\n    'fontVariantEastAsian',\n    'fontVariantLigatures',\n    'fontVariantNumeric',\n    'fontVariantPosition',\n    'fontWeight',\n    'lineHeight',\n  ],\n  fontVariant: [\n    'fontVariantAlternates',\n    'fontVariantCaps',\n    'fontVariantEastAsian',\n    'fontVariantLigatures',\n    'fontVariantNumeric',\n    'fontVariantPosition',\n  ],\n  gap: ['columnGap', 'rowGap'],\n  grid: [\n    'gridAutoColumns',\n    'gridAutoFlow',\n    'gridAutoRows',\n    'gridTemplateAreas',\n    'gridTemplateColumns',\n    'gridTemplateRows',\n  ],\n  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],\n  gridColumn: ['gridColumnEnd', 'gridColumnStart'],\n  gridColumnGap: ['columnGap'],\n  gridGap: ['columnGap', 'rowGap'],\n  gridRow: ['gridRowEnd', 'gridRowStart'],\n  gridRowGap: ['rowGap'],\n  gridTemplate: [\n    'gridTemplateAreas',\n    'gridTemplateColumns',\n    'gridTemplateRows',\n  ],\n  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],\n  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n  marker: ['markerEnd', 'markerMid', 'markerStart'],\n  mask: [\n    'maskClip',\n    'maskComposite',\n    'maskImage',\n    'maskMode',\n    'maskOrigin',\n    'maskPositionX',\n    'maskPositionY',\n    'maskRepeat',\n    'maskSize',\n  ],\n  maskPosition: ['maskPositionX', 'maskPositionY'],\n  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],\n  overflow: ['overflowX', 'overflowY'],\n  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n  placeContent: ['alignContent', 'justifyContent'],\n  placeItems: ['alignItems', 'justifyItems'],\n  placeSelf: ['alignSelf', 'justifySelf'],\n  textDecoration: [\n    'textDecorationColor',\n    'textDecorationLine',\n    'textDecorationStyle',\n  ],\n  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],\n  transition: [\n    'transitionDelay',\n    'transitionDuration',\n    'transitionProperty',\n    'transitionTimingFunction',\n  ],\n  wordWrap: ['overflowWrap'],\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nexport const isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridArea: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nconst prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function(prop) {\n  prefixes.forEach(function(prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {isUnitlessNumber} from './CSSProperty';\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, isCustomProperty) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  const isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  if (\n    !isCustomProperty &&\n    typeof value === 'number' &&\n    value !== 0 &&\n    !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])\n  ) {\n    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  return ('' + value).trim();\n}\n\nexport default dangerousStyleValue;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst uppercasePattern = /([A-Z])/g;\nconst msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n */\nexport default function hyphenateStyleName(name: string): string {\n  return name\n    .replace(uppercasePattern, '-$1')\n    .toLowerCase()\n    .replace(msPattern, '-ms-');\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport warning from 'shared/warning';\n\nlet warnValidStyle = () => {};\n\nif (__DEV__) {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  const badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n  const msPattern = /^-ms-/;\n  const hyphenPattern = /-(.)/g;\n\n  // style values shouldn't contain a semicolon\n  const badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  const warnedStyleNames = {};\n  const warnedStyleValues = {};\n  let warnedForNaNValue = false;\n  let warnedForInfinityValue = false;\n\n  const camelize = function(string) {\n    return string.replace(hyphenPattern, function(_, character) {\n      return character.toUpperCase();\n    });\n  };\n\n  const warnHyphenatedStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    warning(\n      false,\n      'Unsupported style property %s. Did you mean %s?',\n      name,\n      // As Andi Smith suggests\n      // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n      // is converted to lowercase `ms`.\n      camelize(name.replace(msPattern, 'ms-')),\n    );\n  };\n\n  const warnBadVendoredStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    warning(\n      false,\n      'Unsupported vendor-prefixed style property %s. Did you mean %s?',\n      name,\n      name.charAt(0).toUpperCase() + name.slice(1),\n    );\n  };\n\n  const warnStyleValueWithSemicolon = function(name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    warning(\n      false,\n      \"Style property values shouldn't contain a semicolon. \" +\n        'Try \"%s: %s\" instead.',\n      name,\n      value.replace(badStyleValueWithSemicolonPattern, ''),\n    );\n  };\n\n  const warnStyleValueIsNaN = function(name, value) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    warning(\n      false,\n      '`NaN` is an invalid value for the `%s` css style property.',\n      name,\n    );\n  };\n\n  const warnStyleValueIsInfinity = function(name, value) {\n    if (warnedForInfinityValue) {\n      return;\n    }\n\n    warnedForInfinityValue = true;\n    warning(\n      false,\n      '`Infinity` is an invalid value for the `%s` css style property.',\n      name,\n    );\n  };\n\n  warnValidStyle = function(name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n\n    if (typeof value === 'number') {\n      if (isNaN(value)) {\n        warnStyleValueIsNaN(name, value);\n      } else if (!isFinite(value)) {\n        warnStyleValueIsInfinity(name, value);\n      }\n    }\n  };\n}\n\nexport default warnValidStyle;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {shorthandToLonghand} from './CSSShorthandProperty';\n\nimport dangerousStyleValue from './dangerousStyleValue';\nimport hyphenateStyleName from './hyphenateStyleName';\nimport warnValidStyle from './warnValidStyle';\nimport warning from 'shared/warning';\n\nimport {warnAboutShorthandPropertyCollision} from 'shared/ReactFeatureFlags';\n\n/**\n * Operations for dealing with CSS properties.\n */\n\n/**\n * This creates a string that is expected to be equivalent to the style\n * attribute generated by server-side rendering. It by-passes warnings and\n * security checks so it's not safe to use this value for anything other than\n * comparison. It is only used in DEV for SSR validation.\n */\nexport function createDangerousStringForStyles(styles) {\n  if (__DEV__) {\n    let serialized = '';\n    let delimiter = '';\n    for (const styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      const styleValue = styles[styleName];\n      if (styleValue != null) {\n        const isCustomProperty = styleName.indexOf('--') === 0;\n        serialized += delimiter + hyphenateStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(\n          styleName,\n          styleValue,\n          isCustomProperty,\n        );\n\n        delimiter = ';';\n      }\n    }\n    return serialized || null;\n  }\n}\n\n/**\n * Sets the value for multiple styles on a node.  If a value is specified as\n * '' (empty string), the corresponding style property will be unset.\n *\n * @param {DOMElement} node\n * @param {object} styles\n */\nexport function setValueForStyles(node, styles) {\n  const style = node.style;\n  for (let styleName in styles) {\n    if (!styles.hasOwnProperty(styleName)) {\n      continue;\n    }\n    const isCustomProperty = styleName.indexOf('--') === 0;\n    if (__DEV__) {\n      if (!isCustomProperty) {\n        warnValidStyle(styleName, styles[styleName]);\n      }\n    }\n    const styleValue = dangerousStyleValue(\n      styleName,\n      styles[styleName],\n      isCustomProperty,\n    );\n    if (styleName === 'float') {\n      styleName = 'cssFloat';\n    }\n    if (isCustomProperty) {\n      style.setProperty(styleName, styleValue);\n    } else {\n      style[styleName] = styleValue;\n    }\n  }\n}\n\nfunction isValueEmpty(value) {\n  return value == null || typeof value === 'boolean' || value === '';\n}\n\n/**\n * Given {color: 'red', overflow: 'hidden'} returns {\n *   color: 'color',\n *   overflowX: 'overflow',\n *   overflowY: 'overflow',\n * }. This can be read as \"the overflowY property was set by the overflow\n * shorthand\". That is, the values are the property that each was derived from.\n */\nfunction expandShorthandMap(styles) {\n  const expanded = {};\n  for (const key in styles) {\n    const longhands = shorthandToLonghand[key] || [key];\n    for (let i = 0; i < longhands.length; i++) {\n      expanded[longhands[i]] = key;\n    }\n  }\n  return expanded;\n}\n\n/**\n * When mixing shorthand and longhand property names, we warn during updates if\n * we expect an incorrect result to occur. In particular, we warn for:\n *\n * Updating a shorthand property (longhand gets overwritten):\n *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}\n *   becomes .style.font = 'baz'\n * Removing a shorthand property (longhand gets lost too):\n *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}\n *   becomes .style.font = ''\n * Removing a longhand property (should revert to shorthand; doesn't):\n *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}\n *   becomes .style.fontVariant = ''\n */\nexport function validateShorthandPropertyCollisionInDev(\n  styleUpdates,\n  nextStyles,\n) {\n  if (!warnAboutShorthandPropertyCollision) {\n    return;\n  }\n\n  if (!nextStyles) {\n    return;\n  }\n\n  const expandedUpdates = expandShorthandMap(styleUpdates);\n  const expandedStyles = expandShorthandMap(nextStyles);\n  const warnedAbout = {};\n  for (const key in expandedUpdates) {\n    const originalKey = expandedUpdates[key];\n    const correctOriginalKey = expandedStyles[key];\n    if (correctOriginalKey && originalKey !== correctOriginalKey) {\n      const warningKey = originalKey + ',' + correctOriginalKey;\n      if (warnedAbout[warningKey]) {\n        continue;\n      }\n      warnedAbout[warningKey] = true;\n      warning(\n        false,\n        '%s a style property during rerender (%s) when a ' +\n          'conflicting property is set (%s) can lead to styling bugs. To ' +\n          \"avoid this, don't mix shorthand and non-shorthand properties \" +\n          'for the same value; instead, replace the shorthand with ' +\n          'separate values.',\n        isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating',\n        originalKey,\n        correctOriginalKey,\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport omittedCloseTags from './omittedCloseTags';\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nconst voidElementTags = {\n  menuitem: true,\n  ...omittedCloseTags,\n};\n\nexport default voidElementTags;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special-case tags.\n\nconst omittedCloseTags = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true,\n  // NOTE: menuitem's close tag should be omitted, but that causes problems.\n};\n\nexport default omittedCloseTags;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport invariant from 'shared/invariant';\nimport warning from 'shared/warning';\n// TODO: We can remove this if we add invariantWithStack()\n// or add stack by default to invariants where possible.\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nimport voidElementTags from './voidElementTags';\n\nconst HTML = '__html';\n\nlet ReactDebugCurrentFrame = null;\nif (__DEV__) {\n  ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n}\n\nfunction assertValidProps(tag: string, props: ?Object) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (voidElementTags[tag]) {\n    invariant(\n      props.children == null && props.dangerouslySetInnerHTML == null,\n      '%s is a void element tag and must neither have `children` nor ' +\n        'use `dangerouslySetInnerHTML`.%s',\n      tag,\n      __DEV__ ? ReactDebugCurrentFrame.getStackAddendum() : '',\n    );\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    invariant(\n      props.children == null,\n      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',\n    );\n    invariant(\n      typeof props.dangerouslySetInnerHTML === 'object' &&\n        HTML in props.dangerouslySetInnerHTML,\n      '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\n        'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +\n        'for more information.',\n    );\n  }\n  if (__DEV__) {\n    warning(\n      props.suppressContentEditableWarning ||\n        !props.contentEditable ||\n        props.children == null,\n      'A component is `contentEditable` and contains `children` managed by ' +\n        'React. It is now your responsibility to guarantee that none of ' +\n        'those nodes are unexpectedly modified or duplicated. This is ' +\n        'probably not intentional.',\n    );\n  }\n  invariant(\n    props.style == null || typeof props.style === 'object',\n    'The `style` prop expects a mapping from style properties to values, ' +\n      \"not a string. For example, style={{marginRight: spacing + 'em'}} when \" +\n      'using JSX.%s',\n    __DEV__ ? ReactDebugCurrentFrame.getStackAddendum() : '',\n  );\n}\n\nexport default assertValidProps;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nfunction isCustomComponent(tagName: string, props: Object) {\n  if (tagName.indexOf('-') === -1) {\n    return typeof props.is === 'string';\n  }\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this whitelist too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n    default:\n      return true;\n  }\n}\n\nexport default isCustomComponent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// When adding attributes to the HTML or SVG whitelist, be sure to\n// also add them to this module to ensure casing and incorrect name\n// warnings.\nconst possibleStandardNames = {\n  // HTML\n  accept: 'accept',\n  acceptcharset: 'acceptCharset',\n  'accept-charset': 'acceptCharset',\n  accesskey: 'accessKey',\n  action: 'action',\n  allowfullscreen: 'allowFullScreen',\n  alt: 'alt',\n  as: 'as',\n  async: 'async',\n  autocapitalize: 'autoCapitalize',\n  autocomplete: 'autoComplete',\n  autocorrect: 'autoCorrect',\n  autofocus: 'autoFocus',\n  autoplay: 'autoPlay',\n  autosave: 'autoSave',\n  capture: 'capture',\n  cellpadding: 'cellPadding',\n  cellspacing: 'cellSpacing',\n  challenge: 'challenge',\n  charset: 'charSet',\n  checked: 'checked',\n  children: 'children',\n  cite: 'cite',\n  class: 'className',\n  classid: 'classID',\n  classname: 'className',\n  cols: 'cols',\n  colspan: 'colSpan',\n  content: 'content',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  controls: 'controls',\n  controlslist: 'controlsList',\n  coords: 'coords',\n  crossorigin: 'crossOrigin',\n  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\n  data: 'data',\n  datetime: 'dateTime',\n  default: 'default',\n  defaultchecked: 'defaultChecked',\n  defaultvalue: 'defaultValue',\n  defer: 'defer',\n  dir: 'dir',\n  disabled: 'disabled',\n  download: 'download',\n  draggable: 'draggable',\n  enctype: 'encType',\n  for: 'htmlFor',\n  form: 'form',\n  formmethod: 'formMethod',\n  formaction: 'formAction',\n  formenctype: 'formEncType',\n  formnovalidate: 'formNoValidate',\n  formtarget: 'formTarget',\n  frameborder: 'frameBorder',\n  headers: 'headers',\n  height: 'height',\n  hidden: 'hidden',\n  high: 'high',\n  href: 'href',\n  hreflang: 'hrefLang',\n  htmlfor: 'htmlFor',\n  httpequiv: 'httpEquiv',\n  'http-equiv': 'httpEquiv',\n  icon: 'icon',\n  id: 'id',\n  innerhtml: 'innerHTML',\n  inputmode: 'inputMode',\n  integrity: 'integrity',\n  is: 'is',\n  itemid: 'itemID',\n  itemprop: 'itemProp',\n  itemref: 'itemRef',\n  itemscope: 'itemScope',\n  itemtype: 'itemType',\n  keyparams: 'keyParams',\n  keytype: 'keyType',\n  kind: 'kind',\n  label: 'label',\n  lang: 'lang',\n  list: 'list',\n  loop: 'loop',\n  low: 'low',\n  manifest: 'manifest',\n  marginwidth: 'marginWidth',\n  marginheight: 'marginHeight',\n  max: 'max',\n  maxlength: 'maxLength',\n  media: 'media',\n  mediagroup: 'mediaGroup',\n  method: 'method',\n  min: 'min',\n  minlength: 'minLength',\n  multiple: 'multiple',\n  muted: 'muted',\n  name: 'name',\n  nomodule: 'noModule',\n  nonce: 'nonce',\n  novalidate: 'noValidate',\n  open: 'open',\n  optimum: 'optimum',\n  pattern: 'pattern',\n  placeholder: 'placeholder',\n  playsinline: 'playsInline',\n  poster: 'poster',\n  preload: 'preload',\n  profile: 'profile',\n  radiogroup: 'radioGroup',\n  readonly: 'readOnly',\n  referrerpolicy: 'referrerPolicy',\n  rel: 'rel',\n  required: 'required',\n  reversed: 'reversed',\n  role: 'role',\n  rows: 'rows',\n  rowspan: 'rowSpan',\n  sandbox: 'sandbox',\n  scope: 'scope',\n  scoped: 'scoped',\n  scrolling: 'scrolling',\n  seamless: 'seamless',\n  selected: 'selected',\n  shape: 'shape',\n  size: 'size',\n  sizes: 'sizes',\n  span: 'span',\n  spellcheck: 'spellCheck',\n  src: 'src',\n  srcdoc: 'srcDoc',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  start: 'start',\n  step: 'step',\n  style: 'style',\n  summary: 'summary',\n  tabindex: 'tabIndex',\n  target: 'target',\n  title: 'title',\n  type: 'type',\n  usemap: 'useMap',\n  value: 'value',\n  width: 'width',\n  wmode: 'wmode',\n  wrap: 'wrap',\n\n  // SVG\n  about: 'about',\n  accentheight: 'accentHeight',\n  'accent-height': 'accentHeight',\n  accumulate: 'accumulate',\n  additive: 'additive',\n  alignmentbaseline: 'alignmentBaseline',\n  'alignment-baseline': 'alignmentBaseline',\n  allowreorder: 'allowReorder',\n  alphabetic: 'alphabetic',\n  amplitude: 'amplitude',\n  arabicform: 'arabicForm',\n  'arabic-form': 'arabicForm',\n  ascent: 'ascent',\n  attributename: 'attributeName',\n  attributetype: 'attributeType',\n  autoreverse: 'autoReverse',\n  azimuth: 'azimuth',\n  basefrequency: 'baseFrequency',\n  baselineshift: 'baselineShift',\n  'baseline-shift': 'baselineShift',\n  baseprofile: 'baseProfile',\n  bbox: 'bbox',\n  begin: 'begin',\n  bias: 'bias',\n  by: 'by',\n  calcmode: 'calcMode',\n  capheight: 'capHeight',\n  'cap-height': 'capHeight',\n  clip: 'clip',\n  clippath: 'clipPath',\n  'clip-path': 'clipPath',\n  clippathunits: 'clipPathUnits',\n  cliprule: 'clipRule',\n  'clip-rule': 'clipRule',\n  color: 'color',\n  colorinterpolation: 'colorInterpolation',\n  'color-interpolation': 'colorInterpolation',\n  colorinterpolationfilters: 'colorInterpolationFilters',\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  colorprofile: 'colorProfile',\n  'color-profile': 'colorProfile',\n  colorrendering: 'colorRendering',\n  'color-rendering': 'colorRendering',\n  contentscripttype: 'contentScriptType',\n  contentstyletype: 'contentStyleType',\n  cursor: 'cursor',\n  cx: 'cx',\n  cy: 'cy',\n  d: 'd',\n  datatype: 'datatype',\n  decelerate: 'decelerate',\n  descent: 'descent',\n  diffuseconstant: 'diffuseConstant',\n  direction: 'direction',\n  display: 'display',\n  divisor: 'divisor',\n  dominantbaseline: 'dominantBaseline',\n  'dominant-baseline': 'dominantBaseline',\n  dur: 'dur',\n  dx: 'dx',\n  dy: 'dy',\n  edgemode: 'edgeMode',\n  elevation: 'elevation',\n  enablebackground: 'enableBackground',\n  'enable-background': 'enableBackground',\n  end: 'end',\n  exponent: 'exponent',\n  externalresourcesrequired: 'externalResourcesRequired',\n  fill: 'fill',\n  fillopacity: 'fillOpacity',\n  'fill-opacity': 'fillOpacity',\n  fillrule: 'fillRule',\n  'fill-rule': 'fillRule',\n  filter: 'filter',\n  filterres: 'filterRes',\n  filterunits: 'filterUnits',\n  floodopacity: 'floodOpacity',\n  'flood-opacity': 'floodOpacity',\n  floodcolor: 'floodColor',\n  'flood-color': 'floodColor',\n  focusable: 'focusable',\n  fontfamily: 'fontFamily',\n  'font-family': 'fontFamily',\n  fontsize: 'fontSize',\n  'font-size': 'fontSize',\n  fontsizeadjust: 'fontSizeAdjust',\n  'font-size-adjust': 'fontSizeAdjust',\n  fontstretch: 'fontStretch',\n  'font-stretch': 'fontStretch',\n  fontstyle: 'fontStyle',\n  'font-style': 'fontStyle',\n  fontvariant: 'fontVariant',\n  'font-variant': 'fontVariant',\n  fontweight: 'fontWeight',\n  'font-weight': 'fontWeight',\n  format: 'format',\n  from: 'from',\n  fx: 'fx',\n  fy: 'fy',\n  g1: 'g1',\n  g2: 'g2',\n  glyphname: 'glyphName',\n  'glyph-name': 'glyphName',\n  glyphorientationhorizontal: 'glyphOrientationHorizontal',\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  glyphorientationvertical: 'glyphOrientationVertical',\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  glyphref: 'glyphRef',\n  gradienttransform: 'gradientTransform',\n  gradientunits: 'gradientUnits',\n  hanging: 'hanging',\n  horizadvx: 'horizAdvX',\n  'horiz-adv-x': 'horizAdvX',\n  horizoriginx: 'horizOriginX',\n  'horiz-origin-x': 'horizOriginX',\n  ideographic: 'ideographic',\n  imagerendering: 'imageRendering',\n  'image-rendering': 'imageRendering',\n  in2: 'in2',\n  in: 'in',\n  inlist: 'inlist',\n  intercept: 'intercept',\n  k1: 'k1',\n  k2: 'k2',\n  k3: 'k3',\n  k4: 'k4',\n  k: 'k',\n  kernelmatrix: 'kernelMatrix',\n  kernelunitlength: 'kernelUnitLength',\n  kerning: 'kerning',\n  keypoints: 'keyPoints',\n  keysplines: 'keySplines',\n  keytimes: 'keyTimes',\n  lengthadjust: 'lengthAdjust',\n  letterspacing: 'letterSpacing',\n  'letter-spacing': 'letterSpacing',\n  lightingcolor: 'lightingColor',\n  'lighting-color': 'lightingColor',\n  limitingconeangle: 'limitingConeAngle',\n  local: 'local',\n  markerend: 'markerEnd',\n  'marker-end': 'markerEnd',\n  markerheight: 'markerHeight',\n  markermid: 'markerMid',\n  'marker-mid': 'markerMid',\n  markerstart: 'markerStart',\n  'marker-start': 'markerStart',\n  markerunits: 'markerUnits',\n  markerwidth: 'markerWidth',\n  mask: 'mask',\n  maskcontentunits: 'maskContentUnits',\n  maskunits: 'maskUnits',\n  mathematical: 'mathematical',\n  mode: 'mode',\n  numoctaves: 'numOctaves',\n  offset: 'offset',\n  opacity: 'opacity',\n  operator: 'operator',\n  order: 'order',\n  orient: 'orient',\n  orientation: 'orientation',\n  origin: 'origin',\n  overflow: 'overflow',\n  overlineposition: 'overlinePosition',\n  'overline-position': 'overlinePosition',\n  overlinethickness: 'overlineThickness',\n  'overline-thickness': 'overlineThickness',\n  paintorder: 'paintOrder',\n  'paint-order': 'paintOrder',\n  panose1: 'panose1',\n  'panose-1': 'panose1',\n  pathlength: 'pathLength',\n  patterncontentunits: 'patternContentUnits',\n  patterntransform: 'patternTransform',\n  patternunits: 'patternUnits',\n  pointerevents: 'pointerEvents',\n  'pointer-events': 'pointerEvents',\n  points: 'points',\n  pointsatx: 'pointsAtX',\n  pointsaty: 'pointsAtY',\n  pointsatz: 'pointsAtZ',\n  prefix: 'prefix',\n  preservealpha: 'preserveAlpha',\n  preserveaspectratio: 'preserveAspectRatio',\n  primitiveunits: 'primitiveUnits',\n  property: 'property',\n  r: 'r',\n  radius: 'radius',\n  refx: 'refX',\n  refy: 'refY',\n  renderingintent: 'renderingIntent',\n  'rendering-intent': 'renderingIntent',\n  repeatcount: 'repeatCount',\n  repeatdur: 'repeatDur',\n  requiredextensions: 'requiredExtensions',\n  requiredfeatures: 'requiredFeatures',\n  resource: 'resource',\n  restart: 'restart',\n  result: 'result',\n  results: 'results',\n  rotate: 'rotate',\n  rx: 'rx',\n  ry: 'ry',\n  scale: 'scale',\n  security: 'security',\n  seed: 'seed',\n  shaperendering: 'shapeRendering',\n  'shape-rendering': 'shapeRendering',\n  slope: 'slope',\n  spacing: 'spacing',\n  specularconstant: 'specularConstant',\n  specularexponent: 'specularExponent',\n  speed: 'speed',\n  spreadmethod: 'spreadMethod',\n  startoffset: 'startOffset',\n  stddeviation: 'stdDeviation',\n  stemh: 'stemh',\n  stemv: 'stemv',\n  stitchtiles: 'stitchTiles',\n  stopcolor: 'stopColor',\n  'stop-color': 'stopColor',\n  stopopacity: 'stopOpacity',\n  'stop-opacity': 'stopOpacity',\n  strikethroughposition: 'strikethroughPosition',\n  'strikethrough-position': 'strikethroughPosition',\n  strikethroughthickness: 'strikethroughThickness',\n  'strikethrough-thickness': 'strikethroughThickness',\n  string: 'string',\n  stroke: 'stroke',\n  strokedasharray: 'strokeDasharray',\n  'stroke-dasharray': 'strokeDasharray',\n  strokedashoffset: 'strokeDashoffset',\n  'stroke-dashoffset': 'strokeDashoffset',\n  strokelinecap: 'strokeLinecap',\n  'stroke-linecap': 'strokeLinecap',\n  strokelinejoin: 'strokeLinejoin',\n  'stroke-linejoin': 'strokeLinejoin',\n  strokemiterlimit: 'strokeMiterlimit',\n  'stroke-miterlimit': 'strokeMiterlimit',\n  strokewidth: 'strokeWidth',\n  'stroke-width': 'strokeWidth',\n  strokeopacity: 'strokeOpacity',\n  'stroke-opacity': 'strokeOpacity',\n  suppresscontenteditablewarning: 'suppressContentEditableWarning',\n  suppresshydrationwarning: 'suppressHydrationWarning',\n  surfacescale: 'surfaceScale',\n  systemlanguage: 'systemLanguage',\n  tablevalues: 'tableValues',\n  targetx: 'targetX',\n  targety: 'targetY',\n  textanchor: 'textAnchor',\n  'text-anchor': 'textAnchor',\n  textdecoration: 'textDecoration',\n  'text-decoration': 'textDecoration',\n  textlength: 'textLength',\n  textrendering: 'textRendering',\n  'text-rendering': 'textRendering',\n  to: 'to',\n  transform: 'transform',\n  typeof: 'typeof',\n  u1: 'u1',\n  u2: 'u2',\n  underlineposition: 'underlinePosition',\n  'underline-position': 'underlinePosition',\n  underlinethickness: 'underlineThickness',\n  'underline-thickness': 'underlineThickness',\n  unicode: 'unicode',\n  unicodebidi: 'unicodeBidi',\n  'unicode-bidi': 'unicodeBidi',\n  unicoderange: 'unicodeRange',\n  'unicode-range': 'unicodeRange',\n  unitsperem: 'unitsPerEm',\n  'units-per-em': 'unitsPerEm',\n  unselectable: 'unselectable',\n  valphabetic: 'vAlphabetic',\n  'v-alphabetic': 'vAlphabetic',\n  values: 'values',\n  vectoreffect: 'vectorEffect',\n  'vector-effect': 'vectorEffect',\n  version: 'version',\n  vertadvy: 'vertAdvY',\n  'vert-adv-y': 'vertAdvY',\n  vertoriginx: 'vertOriginX',\n  'vert-origin-x': 'vertOriginX',\n  vertoriginy: 'vertOriginY',\n  'vert-origin-y': 'vertOriginY',\n  vhanging: 'vHanging',\n  'v-hanging': 'vHanging',\n  videographic: 'vIdeographic',\n  'v-ideographic': 'vIdeographic',\n  viewbox: 'viewBox',\n  viewtarget: 'viewTarget',\n  visibility: 'visibility',\n  vmathematical: 'vMathematical',\n  'v-mathematical': 'vMathematical',\n  vocab: 'vocab',\n  widths: 'widths',\n  wordspacing: 'wordSpacing',\n  'word-spacing': 'wordSpacing',\n  writingmode: 'writingMode',\n  'writing-mode': 'writingMode',\n  x1: 'x1',\n  x2: 'x2',\n  x: 'x',\n  xchannelselector: 'xChannelSelector',\n  xheight: 'xHeight',\n  'x-height': 'xHeight',\n  xlinkactuate: 'xlinkActuate',\n  'xlink:actuate': 'xlinkActuate',\n  xlinkarcrole: 'xlinkArcrole',\n  'xlink:arcrole': 'xlinkArcrole',\n  xlinkhref: 'xlinkHref',\n  'xlink:href': 'xlinkHref',\n  xlinkrole: 'xlinkRole',\n  'xlink:role': 'xlinkRole',\n  xlinkshow: 'xlinkShow',\n  'xlink:show': 'xlinkShow',\n  xlinktitle: 'xlinkTitle',\n  'xlink:title': 'xlinkTitle',\n  xlinktype: 'xlinkType',\n  'xlink:type': 'xlinkType',\n  xmlbase: 'xmlBase',\n  'xml:base': 'xmlBase',\n  xmllang: 'xmlLang',\n  'xml:lang': 'xmlLang',\n  xmlns: 'xmlns',\n  'xml:space': 'xmlSpace',\n  xmlnsxlink: 'xmlnsXlink',\n  'xmlns:xlink': 'xmlnsXlink',\n  xmlspace: 'xmlSpace',\n  y1: 'y1',\n  y2: 'y2',\n  y: 'y',\n  ychannelselector: 'yChannelSelector',\n  z: 'z',\n  zoomandpan: 'zoomAndPan',\n};\n\nexport default possibleStandardNames;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst ariaProperties = {\n  'aria-current': 0, // state\n  'aria-details': 0,\n  'aria-disabled': 0, // state\n  'aria-hidden': 0, // state\n  'aria-invalid': 0, // state\n  'aria-keyshortcuts': 0,\n  'aria-label': 0,\n  'aria-roledescription': 0,\n  // Widget Attributes\n  'aria-autocomplete': 0,\n  'aria-checked': 0,\n  'aria-expanded': 0,\n  'aria-haspopup': 0,\n  'aria-level': 0,\n  'aria-modal': 0,\n  'aria-multiline': 0,\n  'aria-multiselectable': 0,\n  'aria-orientation': 0,\n  'aria-placeholder': 0,\n  'aria-pressed': 0,\n  'aria-readonly': 0,\n  'aria-required': 0,\n  'aria-selected': 0,\n  'aria-sort': 0,\n  'aria-valuemax': 0,\n  'aria-valuemin': 0,\n  'aria-valuenow': 0,\n  'aria-valuetext': 0,\n  // Live Region Attributes\n  'aria-atomic': 0,\n  'aria-busy': 0,\n  'aria-live': 0,\n  'aria-relevant': 0,\n  // Drag-and-Drop Attributes\n  'aria-dropeffect': 0,\n  'aria-grabbed': 0,\n  // Relationship Attributes\n  'aria-activedescendant': 0,\n  'aria-colcount': 0,\n  'aria-colindex': 0,\n  'aria-colspan': 0,\n  'aria-controls': 0,\n  'aria-describedby': 0,\n  'aria-errormessage': 0,\n  'aria-flowto': 0,\n  'aria-labelledby': 0,\n  'aria-owns': 0,\n  'aria-posinset': 0,\n  'aria-rowcount': 0,\n  'aria-rowindex': 0,\n  'aria-rowspan': 0,\n  'aria-setsize': 0,\n};\n\nexport default ariaProperties;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport warning from 'shared/warning';\n\nimport {ATTRIBUTE_NAME_CHAR} from './DOMProperty';\nimport isCustomComponent from './isCustomComponent';\nimport validAriaProperties from './validAriaProperties';\n\nconst warnedProperties = {};\nconst rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\nconst rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction validateProperty(tagName, name) {\n  if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {\n    return true;\n  }\n\n  if (rARIACamel.test(name)) {\n    const ariaName = 'aria-' + name.slice(4).toLowerCase();\n    const correctName = validAriaProperties.hasOwnProperty(ariaName)\n      ? ariaName\n      : null;\n\n    // If this is an aria-* attribute, but is not listed in the known DOM\n    // DOM properties, then it is an invalid aria-* attribute.\n    if (correctName == null) {\n      warning(\n        false,\n        'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.',\n        name,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n    // aria-* attributes should be lowercase; suggest the lowercase version.\n    if (name !== correctName) {\n      warning(\n        false,\n        'Invalid ARIA attribute `%s`. Did you mean `%s`?',\n        name,\n        correctName,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n  }\n\n  if (rARIA.test(name)) {\n    const lowerCasedName = name.toLowerCase();\n    const standardName = validAriaProperties.hasOwnProperty(lowerCasedName)\n      ? lowerCasedName\n      : null;\n\n    // If this is an aria-* attribute, but is not listed in the known DOM\n    // DOM properties, then it is an invalid aria-* attribute.\n    if (standardName == null) {\n      warnedProperties[name] = true;\n      return false;\n    }\n    // aria-* attributes should be lowercase; suggest the lowercase version.\n    if (name !== standardName) {\n      warning(\n        false,\n        'Unknown ARIA attribute `%s`. Did you mean `%s`?',\n        name,\n        standardName,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n  }\n\n  return true;\n}\n\nfunction warnInvalidARIAProps(type, props) {\n  const invalidProps = [];\n\n  for (const key in props) {\n    const isValid = validateProperty(type, key);\n    if (!isValid) {\n      invalidProps.push(key);\n    }\n  }\n\n  const unknownPropString = invalidProps\n    .map(prop => '`' + prop + '`')\n    .join(', ');\n\n  if (invalidProps.length === 1) {\n    warning(\n      false,\n      'Invalid aria prop %s on <%s> tag. ' +\n        'For details, see https://fb.me/invalid-aria-prop',\n      unknownPropString,\n      type,\n    );\n  } else if (invalidProps.length > 1) {\n    warning(\n      false,\n      'Invalid aria props %s on <%s> tag. ' +\n        'For details, see https://fb.me/invalid-aria-prop',\n      unknownPropString,\n      type,\n    );\n  }\n}\n\nexport function validateProperties(type, props) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n  warnInvalidARIAProps(type, props);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport warning from 'shared/warning';\n\nlet didWarnValueNull = false;\n\nexport function validateProperties(type, props) {\n  if (type !== 'input' && type !== 'textarea' && type !== 'select') {\n    return;\n  }\n\n  if (props != null && props.value === null && !didWarnValueNull) {\n    didWarnValueNull = true;\n    if (type === 'select' && props.multiple) {\n      warning(\n        false,\n        '`value` prop on `%s` should not be null. ' +\n          'Consider using an empty array when `multiple` is set to `true` ' +\n          'to clear the component or `undefined` for uncontrolled components.',\n        type,\n      );\n    } else {\n      warning(\n        false,\n        '`value` prop on `%s` should not be null. ' +\n          'Consider using an empty string to clear the component or `undefined` ' +\n          'for uncontrolled components.',\n        type,\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  registrationNameModules,\n  possibleRegistrationNames,\n} from 'react-events/EventPluginRegistry';\nimport warning from 'shared/warning';\n\nimport {\n  ATTRIBUTE_NAME_CHAR,\n  BOOLEAN,\n  RESERVED,\n  shouldRemoveAttributeWithWarning,\n  getPropertyInfo,\n} from './DOMProperty';\nimport isCustomComponent from './isCustomComponent';\nimport possibleStandardNames from './possibleStandardNames';\n\nlet validateProperty = () => {};\n\nif (__DEV__) {\n  const warnedProperties = {};\n  const hasOwnProperty = Object.prototype.hasOwnProperty;\n  const EVENT_NAME_REGEX = /^on./;\n  const INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;\n  const rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\n  const rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\n  validateProperty = function(tagName, name, value, canUseEventSystem) {\n    if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {\n      return true;\n    }\n\n    const lowerCasedName = name.toLowerCase();\n    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {\n      warning(\n        false,\n        'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' +\n          'All React events are normalized to bubble, so onFocusIn and onFocusOut ' +\n          'are not needed/supported by React.',\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    // We can't rely on the event system being injected on the server.\n    if (canUseEventSystem) {\n      if (registrationNameModules.hasOwnProperty(name)) {\n        return true;\n      }\n      const registrationName = possibleRegistrationNames.hasOwnProperty(\n        lowerCasedName,\n      )\n        ? possibleRegistrationNames[lowerCasedName]\n        : null;\n      if (registrationName != null) {\n        warning(\n          false,\n          'Invalid event handler property `%s`. Did you mean `%s`?',\n          name,\n          registrationName,\n        );\n        warnedProperties[name] = true;\n        return true;\n      }\n      if (EVENT_NAME_REGEX.test(name)) {\n        warning(\n          false,\n          'Unknown event handler property `%s`. It will be ignored.',\n          name,\n        );\n        warnedProperties[name] = true;\n        return true;\n      }\n    } else if (EVENT_NAME_REGEX.test(name)) {\n      // If no event plugins have been injected, we are in a server environment.\n      // So we can't tell if the event name is correct for sure, but we can filter\n      // out known bad ones like `onclick`. We can't suggest a specific replacement though.\n      if (INVALID_EVENT_NAME_REGEX.test(name)) {\n        warning(\n          false,\n          'Invalid event handler property `%s`. ' +\n            'React events use the camelCase naming convention, for example `onClick`.',\n          name,\n        );\n      }\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    // Let the ARIA attribute hook validate ARIA attributes\n    if (rARIA.test(name) || rARIACamel.test(name)) {\n      return true;\n    }\n\n    if (lowerCasedName === 'innerhtml') {\n      warning(\n        false,\n        'Directly setting property `innerHTML` is not permitted. ' +\n          'For more information, lookup documentation on `dangerouslySetInnerHTML`.',\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    if (lowerCasedName === 'aria') {\n      warning(\n        false,\n        'The `aria` attribute is reserved for future use in React. ' +\n          'Pass individual `aria-` attributes instead.',\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    if (\n      lowerCasedName === 'is' &&\n      value !== null &&\n      value !== undefined &&\n      typeof value !== 'string'\n    ) {\n      warning(\n        false,\n        'Received a `%s` for a string attribute `is`. If this is expected, cast ' +\n          'the value to a string.',\n        typeof value,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      warning(\n        false,\n        'Received NaN for the `%s` attribute. If this is expected, cast ' +\n          'the value to a string.',\n        name,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    const propertyInfo = getPropertyInfo(name);\n    const isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;\n\n    // Known attributes should match the casing specified in the property config.\n    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      const standardName = possibleStandardNames[lowerCasedName];\n      if (standardName !== name) {\n        warning(\n          false,\n          'Invalid DOM property `%s`. Did you mean `%s`?',\n          name,\n          standardName,\n        );\n        warnedProperties[name] = true;\n        return true;\n      }\n    } else if (!isReserved && name !== lowerCasedName) {\n      // Unknown attributes should have lowercase casing since that's how they\n      // will be cased anyway with server rendering.\n      warning(\n        false,\n        'React does not recognize the `%s` prop on a DOM element. If you ' +\n          'intentionally want it to appear in the DOM as a custom ' +\n          'attribute, spell it as lowercase `%s` instead. ' +\n          'If you accidentally passed it from a parent component, remove ' +\n          'it from the DOM element.',\n        name,\n        lowerCasedName,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    if (\n      typeof value === 'boolean' &&\n      shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)\n    ) {\n      if (value) {\n        warning(\n          false,\n          'Received `%s` for a non-boolean attribute `%s`.\\n\\n' +\n            'If you want to write it to the DOM, pass a string instead: ' +\n            '%s=\"%s\" or %s={value.toString()}.',\n          value,\n          name,\n          name,\n          value,\n          name,\n        );\n      } else {\n        warning(\n          false,\n          'Received `%s` for a non-boolean attribute `%s`.\\n\\n' +\n            'If you want to write it to the DOM, pass a string instead: ' +\n            '%s=\"%s\" or %s={value.toString()}.\\n\\n' +\n            'If you used to conditionally omit it with %s={condition && value}, ' +\n            'pass %s={condition ? value : undefined} instead.',\n          value,\n          name,\n          name,\n          value,\n          name,\n          name,\n          name,\n        );\n      }\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    // Now that we've validated casing, do not validate\n    // data types for reserved props\n    if (isReserved) {\n      return true;\n    }\n\n    // Warn when a known attribute is a bad type\n    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {\n      warnedProperties[name] = true;\n      return false;\n    }\n\n    // Warn when passing the strings 'false' or 'true' into a boolean prop\n    if (\n      (value === 'false' || value === 'true') &&\n      propertyInfo !== null &&\n      propertyInfo.type === BOOLEAN\n    ) {\n      warning(\n        false,\n        'Received the string `%s` for the boolean attribute `%s`. ' +\n          '%s ' +\n          'Did you mean %s={%s}?',\n        value,\n        name,\n        value === 'false'\n          ? 'The browser will interpret it as a truthy value.'\n          : 'Although this works, it will not work as expected if you pass the string \"false\".',\n        name,\n        value,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n\n    return true;\n  };\n}\n\nconst warnUnknownProperties = function(type, props, canUseEventSystem) {\n  const unknownProps = [];\n  for (const key in props) {\n    const isValid = validateProperty(type, key, props[key], canUseEventSystem);\n    if (!isValid) {\n      unknownProps.push(key);\n    }\n  }\n\n  const unknownPropString = unknownProps\n    .map(prop => '`' + prop + '`')\n    .join(', ');\n  if (unknownProps.length === 1) {\n    warning(\n      false,\n      'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' +\n        'or pass a string or number value to keep it in the DOM. ' +\n        'For details, see https://fb.me/react-attribute-behavior',\n      unknownPropString,\n      type,\n    );\n  } else if (unknownProps.length > 1) {\n    warning(\n      false,\n      'Invalid values for props %s on <%s> tag. Either remove them from the element, ' +\n        'or pass a string or number value to keep them in the DOM. ' +\n        'For details, see https://fb.me/react-attribute-behavior',\n      unknownPropString,\n      type,\n    );\n  }\n};\n\nexport function validateProperties(type, props, canUseEventSystem) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n  warnUnknownProperties(type, props, canUseEventSystem);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nimport {getCurrentFiberOwnerNameInDevOrNull} from 'react-reconciler/src/ReactCurrentFiber';\nimport {registrationNameModules} from 'react-events/EventPluginRegistry';\nimport warning from 'shared/warning';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nimport {\n  getValueForAttribute,\n  getValueForProperty,\n  setValueForProperty,\n} from './DOMPropertyOperations';\nimport {\n  initWrapperState as ReactDOMInputInitWrapperState,\n  getHostProps as ReactDOMInputGetHostProps,\n  postMountWrapper as ReactDOMInputPostMountWrapper,\n  updateChecked as ReactDOMInputUpdateChecked,\n  updateWrapper as ReactDOMInputUpdateWrapper,\n  restoreControlledState as ReactDOMInputRestoreControlledState,\n} from './ReactDOMInput';\nimport {\n  getHostProps as ReactDOMOptionGetHostProps,\n  postMountWrapper as ReactDOMOptionPostMountWrapper,\n  validateProps as ReactDOMOptionValidateProps,\n} from './ReactDOMOption';\nimport {\n  initWrapperState as ReactDOMSelectInitWrapperState,\n  getHostProps as ReactDOMSelectGetHostProps,\n  postMountWrapper as ReactDOMSelectPostMountWrapper,\n  restoreControlledState as ReactDOMSelectRestoreControlledState,\n  postUpdateWrapper as ReactDOMSelectPostUpdateWrapper,\n} from './ReactDOMSelect';\nimport {\n  initWrapperState as ReactDOMTextareaInitWrapperState,\n  getHostProps as ReactDOMTextareaGetHostProps,\n  postMountWrapper as ReactDOMTextareaPostMountWrapper,\n  updateWrapper as ReactDOMTextareaUpdateWrapper,\n  restoreControlledState as ReactDOMTextareaRestoreControlledState,\n} from './ReactDOMTextarea';\nimport {track} from './inputValueTracking';\nimport setInnerHTML from './setInnerHTML';\nimport setTextContent from './setTextContent';\nimport {\n  TOP_ERROR,\n  TOP_INVALID,\n  TOP_LOAD,\n  TOP_RESET,\n  TOP_SUBMIT,\n  TOP_TOGGLE,\n} from '../events/DOMTopLevelEventTypes';\nimport {listenTo, trapBubbledEvent} from '../events/ReactBrowserEventEmitter';\nimport {mediaEventTypes} from '../events/DOMTopLevelEventTypes';\nimport {\n  createDangerousStringForStyles,\n  setValueForStyles,\n  validateShorthandPropertyCollisionInDev,\n} from '../shared/CSSPropertyOperations';\nimport {Namespaces, getIntrinsicNamespace} from '../shared/DOMNamespaces';\nimport {\n  getPropertyInfo,\n  shouldIgnoreAttribute,\n  shouldRemoveAttribute,\n} from '../shared/DOMProperty';\nimport assertValidProps from '../shared/assertValidProps';\nimport {DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE} from '../shared/HTMLNodeType';\nimport isCustomComponent from '../shared/isCustomComponent';\nimport possibleStandardNames from '../shared/possibleStandardNames';\nimport {validateProperties as validateARIAProperties} from '../shared/ReactDOMInvalidARIAHook';\nimport {validateProperties as validateInputProperties} from '../shared/ReactDOMNullInputValuePropHook';\nimport {validateProperties as validateUnknownProperties} from '../shared/ReactDOMUnknownPropertyHook';\n\nlet didWarnInvalidHydration = false;\nlet didWarnShadyDOM = false;\n\nconst DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';\nconst SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';\nconst SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\nconst AUTOFOCUS = 'autoFocus';\nconst CHILDREN = 'children';\nconst STYLE = 'style';\nconst HTML = '__html';\n\nconst {html: HTML_NAMESPACE} = Namespaces;\n\nlet warnedUnknownTags;\nlet suppressHydrationWarning;\n\nlet validatePropertiesInDevelopment;\nlet warnForTextDifference;\nlet warnForPropDifference;\nlet warnForExtraAttributes;\nlet warnForInvalidEventListener;\nlet canDiffStyleForHydrationWarning;\n\nlet normalizeMarkupForTextOrAttribute;\nlet normalizeHTML;\n\nif (__DEV__) {\n  warnedUnknownTags = {\n    // Chrome is the only major browser not shipping <time>. But as of July\n    // 2017 it intends to ship it due to widespread usage. We intentionally\n    // *don't* warn for <time> even if it's unrecognized by Chrome because\n    // it soon will be, and many apps have been using it anyway.\n    time: true,\n    // There are working polyfills for <dialog>. Let people use it.\n    dialog: true,\n    // Electron ships a custom <webview> tag to display external web content in\n    // an isolated frame and process.\n    // This tag is not present in non Electron environments such as JSDom which\n    // is often used for testing purposes.\n    // @see https://electronjs.org/docs/api/webview-tag\n    webview: true,\n  };\n\n  validatePropertiesInDevelopment = function(type, props) {\n    validateARIAProperties(type, props);\n    validateInputProperties(type, props);\n    validateUnknownProperties(type, props, /* canUseEventSystem */ true);\n  };\n\n  // IE 11 parses & normalizes the style attribute as opposed to other\n  // browsers. It adds spaces and sorts the properties in some\n  // non-alphabetical order. Handling that would require sorting CSS\n  // properties in the client & server versions or applying\n  // `expectedStyle` to a temporary DOM node to read its `style` attribute\n  // normalized. Since it only affects IE, we're skipping style warnings\n  // in that browser completely in favor of doing all that work.\n  // See https://github.com/facebook/react/issues/11807\n  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;\n\n  // HTML parsing normalizes CR and CRLF to LF.\n  // It also can turn \\u0000 into \\uFFFD inside attributes.\n  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream\n  // If we have a mismatch, it might be caused by that.\n  // We will still patch up in this case but not fire the warning.\n  const NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g;\n  const NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\n\n  normalizeMarkupForTextOrAttribute = function(markup: mixed): string {\n    const markupString =\n      typeof markup === 'string' ? markup : '' + (markup: any);\n    return markupString\n      .replace(NORMALIZE_NEWLINES_REGEX, '\\n')\n      .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');\n  };\n\n  warnForTextDifference = function(\n    serverText: string,\n    clientText: string | number,\n  ) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    const normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);\n    const normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);\n    if (normalizedServerText === normalizedClientText) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    warningWithoutStack(\n      false,\n      'Text content did not match. Server: \"%s\" Client: \"%s\"',\n      normalizedServerText,\n      normalizedClientText,\n    );\n  };\n\n  warnForPropDifference = function(\n    propName: string,\n    serverValue: mixed,\n    clientValue: mixed,\n  ) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    const normalizedClientValue = normalizeMarkupForTextOrAttribute(\n      clientValue,\n    );\n    const normalizedServerValue = normalizeMarkupForTextOrAttribute(\n      serverValue,\n    );\n    if (normalizedServerValue === normalizedClientValue) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    warningWithoutStack(\n      false,\n      'Prop `%s` did not match. Server: %s Client: %s',\n      propName,\n      JSON.stringify(normalizedServerValue),\n      JSON.stringify(normalizedClientValue),\n    );\n  };\n\n  warnForExtraAttributes = function(attributeNames: Set<string>) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    const names = [];\n    attributeNames.forEach(function(name) {\n      names.push(name);\n    });\n    warningWithoutStack(false, 'Extra attributes from the server: %s', names);\n  };\n\n  warnForInvalidEventListener = function(registrationName, listener) {\n    if (listener === false) {\n      warning(\n        false,\n        'Expected `%s` listener to be a function, instead got `false`.\\n\\n' +\n          'If you used to conditionally omit it with %s={condition && value}, ' +\n          'pass %s={condition ? value : undefined} instead.',\n        registrationName,\n        registrationName,\n        registrationName,\n      );\n    } else {\n      warning(\n        false,\n        'Expected `%s` listener to be a function, instead got a value of `%s` type.',\n        registrationName,\n        typeof listener,\n      );\n    }\n  };\n\n  // Parse the HTML and read it back to normalize the HTML string so that it\n  // can be used for comparison.\n  normalizeHTML = function(parent: Element, html: string) {\n    // We could have created a separate document here to avoid\n    // re-initializing custom elements if they exist. But this breaks\n    // how <noscript> is being handled. So we use the same document.\n    // See the discussion in https://github.com/facebook/react/pull/11157.\n    const testElement =\n      parent.namespaceURI === HTML_NAMESPACE\n        ? parent.ownerDocument.createElement(parent.tagName)\n        : parent.ownerDocument.createElementNS(\n            (parent.namespaceURI: any),\n            parent.tagName,\n          );\n    testElement.innerHTML = html;\n    return testElement.innerHTML;\n  };\n}\n\nfunction ensureListeningTo(rootContainerElement, registrationName) {\n  const isDocumentOrFragment =\n    rootContainerElement.nodeType === DOCUMENT_NODE ||\n    rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;\n  const doc = isDocumentOrFragment\n    ? rootContainerElement\n    : rootContainerElement.ownerDocument;\n  listenTo(registrationName, doc);\n}\n\nfunction getOwnerDocumentFromRootContainer(\n  rootContainerElement: Element | Document,\n): Document {\n  return rootContainerElement.nodeType === DOCUMENT_NODE\n    ? (rootContainerElement: any)\n    : rootContainerElement.ownerDocument;\n}\n\nfunction noop() {}\n\nexport function trapClickOnNonInteractiveElement(node: HTMLElement) {\n  // Mobile Safari does not fire properly bubble click events on\n  // non-interactive elements, which means delegated click listeners do not\n  // fire. The workaround for this bug involves attaching an empty click\n  // listener on the target node.\n  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n  // Just set it using the onclick property so that we don't have to manage any\n  // bookkeeping for it. Not sure if we need to clear it when the listener is\n  // removed.\n  // TODO: Only do this for the relevant Safaris maybe?\n  node.onclick = noop;\n}\n\nfunction setInitialDOMProperties(\n  tag: string,\n  domElement: Element,\n  rootContainerElement: Element | Document,\n  nextProps: Object,\n  isCustomComponentTag: boolean,\n): void {\n  for (const propKey in nextProps) {\n    if (!nextProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n    const nextProp = nextProps[propKey];\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n      // Relies on `updateStylesByID` not mutating `styleUpdates`.\n      setValueForStyles(domElement, nextProp);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n      if (nextHtml != null) {\n        setInnerHTML(domElement, nextHtml);\n      }\n    } else if (propKey === CHILDREN) {\n      if (typeof nextProp === 'string') {\n        // Avoid setting initial textContent when the text is empty. In IE11 setting\n        // textContent on a <textarea> will cause the placeholder to not\n        // show within the <textarea> until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        const canSetTextContent = tag !== 'textarea' || nextProp !== '';\n        if (canSetTextContent) {\n          setTextContent(domElement, nextProp);\n        }\n      } else if (typeof nextProp === 'number') {\n        setTextContent(domElement, '' + nextProp);\n      }\n    } else if (\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (propKey === AUTOFOCUS) {\n      // We polyfill it separately on the client during commit.\n      // We could have excluded it in the property list instead of\n      // adding a special case here, but then it wouldn't be emitted\n      // on server rendering (but we *do* want to emit it in SSR).\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n    } else if (nextProp != null) {\n      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);\n    }\n  }\n}\n\nfunction updateDOMProperties(\n  domElement: Element,\n  updatePayload: Array<any>,\n  wasCustomComponentTag: boolean,\n  isCustomComponentTag: boolean,\n): void {\n  // TODO: Handle wasCustomComponentTag\n  for (let i = 0; i < updatePayload.length; i += 2) {\n    const propKey = updatePayload[i];\n    const propValue = updatePayload[i + 1];\n    if (propKey === STYLE) {\n      setValueForStyles(domElement, propValue);\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      setInnerHTML(domElement, propValue);\n    } else if (propKey === CHILDREN) {\n      setTextContent(domElement, propValue);\n    } else {\n      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);\n    }\n  }\n}\n\nexport function createElement(\n  type: string,\n  props: Object,\n  rootContainerElement: Element | Document,\n  parentNamespace: string,\n): Element {\n  debugger\n  let isCustomComponentTag;\n\n  // We create tags in the namespace of their parent container, except HTML\n  // tags get no namespace.\n  const ownerDocument: Document = getOwnerDocumentFromRootContainer(\n    rootContainerElement,\n  );\n  let domElement: Element;\n  let namespaceURI = parentNamespace;\n  if (namespaceURI === HTML_NAMESPACE) {\n    namespaceURI = getIntrinsicNamespace(type);\n  }\n  if (namespaceURI === HTML_NAMESPACE) {\n    if (__DEV__) {\n      isCustomComponentTag = isCustomComponent(type, props);\n      // Should this check be gated by parent namespace? Not sure we want to\n      // allow <SVG> or <mATH>.\n      warning(\n        isCustomComponentTag || type === type.toLowerCase(),\n        '<%s /> is using incorrect casing. ' +\n          'Use PascalCase for React components, ' +\n          'or lowercase for HTML elements.',\n        type,\n      );\n    }\n\n    if (type === 'script') {\n      // Create the script via .innerHTML so its \"parser-inserted\" flag is\n      // set to true and it does not execute\n      const div = ownerDocument.createElement('div');\n      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line\n      // This is guaranteed to yield a script element.\n      const firstChild = ((div.firstChild: any): HTMLScriptElement);\n      domElement = div.removeChild(firstChild);\n    } else if (typeof props.is === 'string') {\n      // $FlowIssue `createElement` should be updated for Web Components\n      domElement = ownerDocument.createElement(type, {is: props.is});\n    } else {\n      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.\n      // See discussion in https://github.com/facebook/react/pull/6896\n      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n      domElement = ownerDocument.createElement(type);\n      // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`\n      // attributes on `select`s needs to be added before `option`s are inserted.\n      // This prevents:\n      // - a bug where the `select` does not scroll to the correct option because singular\n      //  `select` elements automatically pick the first item #13222\n      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239\n      // See https://github.com/facebook/react/issues/13222\n      // and https://github.com/facebook/react/issues/14239\n      if (type === 'select') {\n        const node = ((domElement: any): HTMLSelectElement);\n        if (props.multiple) {\n          node.multiple = true;\n        } else if (props.size) {\n          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where\n          // it is possible that no option is selected.\n          //\n          // This is only necessary when a select in \"single selection mode\".\n          node.size = props.size;\n        }\n      }\n    }\n  } else {\n    domElement = ownerDocument.createElementNS(namespaceURI, type);\n  }\n\n  if (__DEV__) {\n    if (namespaceURI === HTML_NAMESPACE) {\n      if (\n        !isCustomComponentTag &&\n        Object.prototype.toString.call(domElement) ===\n          '[object HTMLUnknownElement]' &&\n        !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)\n      ) {\n        warnedUnknownTags[type] = true;\n        warning(\n          false,\n          'The tag <%s> is unrecognized in this browser. ' +\n            'If you meant to render a React component, start its name with ' +\n            'an uppercase letter.',\n          type,\n        );\n      }\n    }\n  }\n\n  return domElement;\n}\n\nexport function createTextNode(\n  text: string,\n  rootContainerElement: Element | Document,\n): Text {\n  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(\n    text,\n  );\n}\n\nexport function setInitialProperties(\n  domElement: Element,\n  tag: string,\n  rawProps: Object,\n  rootContainerElement: Element | Document,\n): void {\n  const isCustomComponentTag = isCustomComponent(tag, rawProps);\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, rawProps);\n    if (\n      isCustomComponentTag &&\n      !didWarnShadyDOM &&\n      (domElement: any).shadyRoot\n    ) {\n      warning(\n        false,\n        '%s is using shady DOM. Using shady DOM with React can ' +\n          'cause things to break subtly.',\n        getCurrentFiberOwnerNameInDevOrNull() || 'A component',\n      );\n      didWarnShadyDOM = true;\n    }\n  }\n\n  // TODO: Make sure that we check isMounted before firing any of these events.\n  let props: Object;\n  switch (tag) {\n    case 'iframe':\n    case 'object':\n      trapBubbledEvent(TOP_LOAD, domElement);\n      props = rawProps;\n      break;\n    case 'video':\n    case 'audio':\n      // Create listener for each media event\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        trapBubbledEvent(mediaEventTypes[i], domElement);\n      }\n      props = rawProps;\n      break;\n    case 'source':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      props = rawProps;\n      break;\n    case 'img':\n    case 'image':\n    case 'link':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      trapBubbledEvent(TOP_LOAD, domElement);\n      props = rawProps;\n      break;\n    case 'form':\n      trapBubbledEvent(TOP_RESET, domElement);\n      trapBubbledEvent(TOP_SUBMIT, domElement);\n      props = rawProps;\n      break;\n    case 'details':\n      trapBubbledEvent(TOP_TOGGLE, domElement);\n      props = rawProps;\n      break;\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      props = ReactDOMInputGetHostProps(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      props = ReactDOMOptionGetHostProps(domElement, rawProps);\n      break;\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      props = ReactDOMSelectGetHostProps(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      props = ReactDOMTextareaGetHostProps(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    default:\n      props = rawProps;\n  }\n\n  assertValidProps(tag, props);\n\n  setInitialDOMProperties(\n    tag,\n    domElement,\n    rootContainerElement,\n    props,\n    isCustomComponentTag,\n  );\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMInputPostMountWrapper(domElement, rawProps, false);\n      break;\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n    case 'option':\n      ReactDOMOptionPostMountWrapper(domElement, rawProps);\n      break;\n    case 'select':\n      ReactDOMSelectPostMountWrapper(domElement, rawProps);\n      break;\n    default:\n      if (typeof props.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n}\n\n// Calculate the diff between the two objects.\nexport function diffProperties(\n  domElement: Element,\n  tag: string,\n  lastRawProps: Object,\n  nextRawProps: Object,\n  rootContainerElement: Element | Document,\n): null | Array<mixed> {\n  if (__DEV__) {\n    validatePropertiesInDevelopment(tag, nextRawProps);\n  }\n\n  let updatePayload: null | Array<any> = null;\n\n  let lastProps: Object;\n  let nextProps: Object;\n  switch (tag) {\n    case 'input':\n      lastProps = ReactDOMInputGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMInputGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'option':\n      lastProps = ReactDOMOptionGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMOptionGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'select':\n      lastProps = ReactDOMSelectGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMSelectGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    case 'textarea':\n      lastProps = ReactDOMTextareaGetHostProps(domElement, lastRawProps);\n      nextProps = ReactDOMTextareaGetHostProps(domElement, nextRawProps);\n      updatePayload = [];\n      break;\n    default:\n      lastProps = lastRawProps;\n      nextProps = nextRawProps;\n      if (\n        typeof lastProps.onClick !== 'function' &&\n        typeof nextProps.onClick === 'function'\n      ) {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n\n  assertValidProps(tag, nextProps);\n\n  let propKey;\n  let styleName;\n  let styleUpdates = null;\n  for (propKey in lastProps) {\n    if (\n      nextProps.hasOwnProperty(propKey) ||\n      !lastProps.hasOwnProperty(propKey) ||\n      lastProps[propKey] == null\n    ) {\n      continue;\n    }\n    if (propKey === STYLE) {\n      const lastStyle = lastProps[propKey];\n      for (styleName in lastStyle) {\n        if (lastStyle.hasOwnProperty(styleName)) {\n          if (!styleUpdates) {\n            styleUpdates = {};\n          }\n          styleUpdates[styleName] = '';\n        }\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {\n      // Noop. This is handled by the clear text mechanism.\n    } else if (\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (propKey === AUTOFOCUS) {\n      // Noop. It doesn't work on updates anyway.\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      // This is a special case. If any listener updates we need to ensure\n      // that the \"current\" fiber pointer gets updated so we need a commit\n      // to update this element.\n      if (!updatePayload) {\n        updatePayload = [];\n      }\n    } else {\n      // For all other deleted properties we add it to the queue. We use\n      // the whitelist in the commit phase instead.\n      (updatePayload = updatePayload || []).push(propKey, null);\n    }\n  }\n  for (propKey in nextProps) {\n    const nextProp = nextProps[propKey];\n    const lastProp = lastProps != null ? lastProps[propKey] : undefined;\n    if (\n      !nextProps.hasOwnProperty(propKey) ||\n      nextProp === lastProp ||\n      (nextProp == null && lastProp == null)\n    ) {\n      continue;\n    }\n    if (propKey === STYLE) {\n      if (__DEV__) {\n        if (nextProp) {\n          // Freeze the next style object so that we can assume it won't be\n          // mutated. We have already warned for this in the past.\n          Object.freeze(nextProp);\n        }\n      }\n      if (lastProp) {\n        // Unset styles on `lastProp` but not on `nextProp`.\n        for (styleName in lastProp) {\n          if (\n            lastProp.hasOwnProperty(styleName) &&\n            (!nextProp || !nextProp.hasOwnProperty(styleName))\n          ) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n            styleUpdates[styleName] = '';\n          }\n        }\n        // Update styles that changed since `lastProp`.\n        for (styleName in nextProp) {\n          if (\n            nextProp.hasOwnProperty(styleName) &&\n            lastProp[styleName] !== nextProp[styleName]\n          ) {\n            if (!styleUpdates) {\n              styleUpdates = {};\n            }\n            styleUpdates[styleName] = nextProp[styleName];\n          }\n        }\n      } else {\n        // Relies on `updateStylesByID` not mutating `styleUpdates`.\n        if (!styleUpdates) {\n          if (!updatePayload) {\n            updatePayload = [];\n          }\n          updatePayload.push(propKey, styleUpdates);\n        }\n        styleUpdates = nextProp;\n      }\n    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n      const nextHtml = nextProp ? nextProp[HTML] : undefined;\n      const lastHtml = lastProp ? lastProp[HTML] : undefined;\n      if (nextHtml != null) {\n        if (lastHtml !== nextHtml) {\n          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);\n        }\n      } else {\n        // TODO: It might be too late to clear this if we have children\n        // inserted already.\n      }\n    } else if (propKey === CHILDREN) {\n      if (\n        lastProp !== nextProp &&\n        (typeof nextProp === 'string' || typeof nextProp === 'number')\n      ) {\n        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);\n      }\n    } else if (\n      propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n      propKey === SUPPRESS_HYDRATION_WARNING\n    ) {\n      // Noop\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        // We eagerly listen to this even though we haven't committed yet.\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n      if (!updatePayload && lastProp !== nextProp) {\n        // This is a special case. If any listener updates we need to ensure\n        // that the \"current\" props pointer gets updated so we need a commit\n        // to update this element.\n        updatePayload = [];\n      }\n    } else {\n      // For any other property we always add it to the queue and then we\n      // filter it out using the whitelist during the commit.\n      (updatePayload = updatePayload || []).push(propKey, nextProp);\n    }\n  }\n  if (styleUpdates) {\n    if (__DEV__) {\n      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);\n    }\n    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);\n  }\n  return updatePayload;\n}\n\n// Apply the diff.\nexport function updateProperties(\n  domElement: Element,\n  updatePayload: Array<any>,\n  tag: string,\n  lastRawProps: Object,\n  nextRawProps: Object,\n): void {\n  // Update checked *before* name.\n  // In the middle of an update, it is possible to have multiple checked.\n  // When a checked radio tries to change name, browser makes another radio's checked false.\n  if (\n    tag === 'input' &&\n    nextRawProps.type === 'radio' &&\n    nextRawProps.name != null\n  ) {\n    ReactDOMInputUpdateChecked(domElement, nextRawProps);\n  }\n\n  const wasCustomComponentTag = isCustomComponent(tag, lastRawProps);\n  const isCustomComponentTag = isCustomComponent(tag, nextRawProps);\n  // Apply the diff.\n  updateDOMProperties(\n    domElement,\n    updatePayload,\n    wasCustomComponentTag,\n    isCustomComponentTag,\n  );\n\n  // TODO: Ensure that an update gets scheduled if any of the special props\n  // changed.\n  switch (tag) {\n    case 'input':\n      // Update the wrapper around inputs *after* updating props. This has to\n      // happen after `updateDOMProperties`. Otherwise HTML5 input validations\n      // raise warnings and prevent the new value from being assigned.\n      ReactDOMInputUpdateWrapper(domElement, nextRawProps);\n      break;\n    case 'textarea':\n      ReactDOMTextareaUpdateWrapper(domElement, nextRawProps);\n      break;\n    case 'select':\n      // <select> value update needs to occur after <option> children\n      // reconciliation\n      ReactDOMSelectPostUpdateWrapper(domElement, nextRawProps);\n      break;\n  }\n}\n\nfunction getPossibleStandardName(propName: string): string | null {\n  if (__DEV__) {\n    const lowerCasedName = propName.toLowerCase();\n    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {\n      return null;\n    }\n    return possibleStandardNames[lowerCasedName] || null;\n  }\n  return null;\n}\n\nexport function diffHydratedProperties(\n  domElement: Element,\n  tag: string,\n  rawProps: Object,\n  parentNamespace: string,\n  rootContainerElement: Element | Document,\n): null | Array<mixed> {\n  let isCustomComponentTag;\n  let extraAttributeNames: Set<string>;\n\n  if (__DEV__) {\n    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING] === true;\n    isCustomComponentTag = isCustomComponent(tag, rawProps);\n    validatePropertiesInDevelopment(tag, rawProps);\n    if (\n      isCustomComponentTag &&\n      !didWarnShadyDOM &&\n      (domElement: any).shadyRoot\n    ) {\n      warning(\n        false,\n        '%s is using shady DOM. Using shady DOM with React can ' +\n          'cause things to break subtly.',\n        getCurrentFiberOwnerNameInDevOrNull() || 'A component',\n      );\n      didWarnShadyDOM = true;\n    }\n  }\n\n  // TODO: Make sure that we check isMounted before firing any of these events.\n  switch (tag) {\n    case 'iframe':\n    case 'object':\n      trapBubbledEvent(TOP_LOAD, domElement);\n      break;\n    case 'video':\n    case 'audio':\n      // Create listener for each media event\n      for (let i = 0; i < mediaEventTypes.length; i++) {\n        trapBubbledEvent(mediaEventTypes[i], domElement);\n      }\n      break;\n    case 'source':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      break;\n    case 'img':\n    case 'image':\n    case 'link':\n      trapBubbledEvent(TOP_ERROR, domElement);\n      trapBubbledEvent(TOP_LOAD, domElement);\n      break;\n    case 'form':\n      trapBubbledEvent(TOP_RESET, domElement);\n      trapBubbledEvent(TOP_SUBMIT, domElement);\n      break;\n    case 'details':\n      trapBubbledEvent(TOP_TOGGLE, domElement);\n      break;\n    case 'input':\n      ReactDOMInputInitWrapperState(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'option':\n      ReactDOMOptionValidateProps(domElement, rawProps);\n      break;\n    case 'select':\n      ReactDOMSelectInitWrapperState(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n    case 'textarea':\n      ReactDOMTextareaInitWrapperState(domElement, rawProps);\n      trapBubbledEvent(TOP_INVALID, domElement);\n      // For controlled components we always need to ensure we're listening\n      // to onChange. Even if there is no listener.\n      ensureListeningTo(rootContainerElement, 'onChange');\n      break;\n  }\n\n  assertValidProps(tag, rawProps);\n\n  if (__DEV__) {\n    extraAttributeNames = new Set();\n    const attributes = domElement.attributes;\n    for (let i = 0; i < attributes.length; i++) {\n      const name = attributes[i].name.toLowerCase();\n      switch (name) {\n        // Built-in SSR attribute is whitelisted\n        case 'data-reactroot':\n          break;\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        case 'value':\n          break;\n        case 'checked':\n          break;\n        case 'selected':\n          break;\n        default:\n          // Intentionally use the original name.\n          // See discussion in https://github.com/facebook/react/pull/10676.\n          extraAttributeNames.add(attributes[i].name);\n      }\n    }\n  }\n\n  let updatePayload = null;\n  for (const propKey in rawProps) {\n    if (!rawProps.hasOwnProperty(propKey)) {\n      continue;\n    }\n    const nextProp = rawProps[propKey];\n    if (propKey === CHILDREN) {\n      // For text content children we compare against textContent. This\n      // might match additional HTML that is hidden when we read it using\n      // textContent. E.g. \"foo\" will match \"f<span>oo</span>\" but that still\n      // satisfies our requirement. Our requirement is not to produce perfect\n      // HTML and attributes. Ideally we should preserve structure but it's\n      // ok not to if the visible content is still enough to indicate what\n      // even listeners these nodes might be wired up to.\n      // TODO: Warn if there is more than a single textNode as a child.\n      // TODO: Should we use domElement.firstChild.nodeValue to compare?\n      if (typeof nextProp === 'string') {\n        if (domElement.textContent !== nextProp) {\n          if (__DEV__ && !suppressHydrationWarning) {\n            warnForTextDifference(domElement.textContent, nextProp);\n          }\n          updatePayload = [CHILDREN, nextProp];\n        }\n      } else if (typeof nextProp === 'number') {\n        if (domElement.textContent !== '' + nextProp) {\n          if (__DEV__ && !suppressHydrationWarning) {\n            warnForTextDifference(domElement.textContent, nextProp);\n          }\n          updatePayload = [CHILDREN, '' + nextProp];\n        }\n      }\n    } else if (registrationNameModules.hasOwnProperty(propKey)) {\n      if (nextProp != null) {\n        if (__DEV__ && typeof nextProp !== 'function') {\n          warnForInvalidEventListener(propKey, nextProp);\n        }\n        ensureListeningTo(rootContainerElement, propKey);\n      }\n    } else if (\n      __DEV__ &&\n      // Convince Flow we've calculated it (it's DEV-only in this method.)\n      typeof isCustomComponentTag === 'boolean'\n    ) {\n      // Validate that the properties correspond to their expected values.\n      let serverValue;\n      const propertyInfo = getPropertyInfo(propKey);\n      if (suppressHydrationWarning) {\n        // Don't bother comparing. We're ignoring all these warnings.\n      } else if (\n        propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\n        propKey === SUPPRESS_HYDRATION_WARNING ||\n        // Controlled attributes are not validated\n        // TODO: Only ignore them on controlled tags.\n        propKey === 'value' ||\n        propKey === 'checked' ||\n        propKey === 'selected'\n      ) {\n        // Noop\n      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {\n        const serverHTML = domElement.innerHTML;\n        const nextHtml = nextProp ? nextProp[HTML] : undefined;\n        const expectedHTML = normalizeHTML(\n          domElement,\n          nextHtml != null ? nextHtml : '',\n        );\n        if (expectedHTML !== serverHTML) {\n          warnForPropDifference(propKey, serverHTML, expectedHTML);\n        }\n      } else if (propKey === STYLE) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey);\n\n        if (canDiffStyleForHydrationWarning) {\n          const expectedStyle = createDangerousStringForStyles(nextProp);\n          serverValue = domElement.getAttribute('style');\n          if (expectedStyle !== serverValue) {\n            warnForPropDifference(propKey, serverValue, expectedStyle);\n          }\n        }\n      } else if (isCustomComponentTag) {\n        // $FlowFixMe - Should be inferred as not undefined.\n        extraAttributeNames.delete(propKey.toLowerCase());\n        serverValue = getValueForAttribute(domElement, propKey, nextProp);\n\n        if (nextProp !== serverValue) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      } else if (\n        !shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) &&\n        !shouldRemoveAttribute(\n          propKey,\n          nextProp,\n          propertyInfo,\n          isCustomComponentTag,\n        )\n      ) {\n        let isMismatchDueToBadCasing = false;\n        if (propertyInfo !== null) {\n          // $FlowFixMe - Should be inferred as not undefined.\n          extraAttributeNames.delete(propertyInfo.attributeName);\n          serverValue = getValueForProperty(\n            domElement,\n            propKey,\n            nextProp,\n            propertyInfo,\n          );\n        } else {\n          let ownNamespace = parentNamespace;\n          if (ownNamespace === HTML_NAMESPACE) {\n            ownNamespace = getIntrinsicNamespace(tag);\n          }\n          if (ownNamespace === HTML_NAMESPACE) {\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey.toLowerCase());\n          } else {\n            const standardName = getPossibleStandardName(propKey);\n            if (standardName !== null && standardName !== propKey) {\n              // If an SVG prop is supplied with bad casing, it will\n              // be successfully parsed from HTML, but will produce a mismatch\n              // (and would be incorrectly rendered on the client).\n              // However, we already warn about bad casing elsewhere.\n              // So we'll skip the misleading extra mismatch warning in this case.\n              isMismatchDueToBadCasing = true;\n              // $FlowFixMe - Should be inferred as not undefined.\n              extraAttributeNames.delete(standardName);\n            }\n            // $FlowFixMe - Should be inferred as not undefined.\n            extraAttributeNames.delete(propKey);\n          }\n          serverValue = getValueForAttribute(domElement, propKey, nextProp);\n        }\n\n        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {\n          warnForPropDifference(propKey, serverValue, nextProp);\n        }\n      }\n    }\n  }\n\n  if (__DEV__) {\n    // $FlowFixMe - Should be inferred as not undefined.\n    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {\n      // $FlowFixMe - Should be inferred as not undefined.\n      warnForExtraAttributes(extraAttributeNames);\n    }\n  }\n\n  switch (tag) {\n    case 'input':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMInputPostMountWrapper(domElement, rawProps, true);\n      break;\n    case 'textarea':\n      // TODO: Make sure we check if this is still unmounted or do any clean\n      // up necessary since we never stop tracking anymore.\n      track((domElement: any));\n      ReactDOMTextareaPostMountWrapper(domElement, rawProps);\n      break;\n    case 'select':\n    case 'option':\n      // For input and textarea we current always set the value property at\n      // post mount to force it to diverge from attributes. However, for\n      // option and select we don't quite do the same thing and select\n      // is not resilient to the DOM state changing so we don't do that here.\n      // TODO: Consider not doing this for input and textarea.\n      break;\n    default:\n      if (typeof rawProps.onClick === 'function') {\n        // TODO: This cast may not be sound for SVG, MathML or custom elements.\n        trapClickOnNonInteractiveElement(((domElement: any): HTMLElement));\n      }\n      break;\n  }\n\n  return updatePayload;\n}\n\nexport function diffHydratedText(textNode: Text, text: string): boolean {\n  const isDifferent = textNode.nodeValue !== text;\n  return isDifferent;\n}\n\nexport function warnForUnmatchedText(textNode: Text, text: string) {\n  if (__DEV__) {\n    warnForTextDifference(textNode.nodeValue, text);\n  }\n}\n\nexport function warnForDeletedHydratableElement(\n  parentNode: Element | Document,\n  child: Element,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    warningWithoutStack(\n      false,\n      'Did not expect server HTML to contain a <%s> in <%s>.',\n      child.nodeName.toLowerCase(),\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForDeletedHydratableText(\n  parentNode: Element | Document,\n  child: Text,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    warningWithoutStack(\n      false,\n      'Did not expect server HTML to contain the text node \"%s\" in <%s>.',\n      child.nodeValue,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForInsertedHydratedElement(\n  parentNode: Element | Document,\n  tag: string,\n  props: Object,\n) {\n  if (__DEV__) {\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    warningWithoutStack(\n      false,\n      'Expected server HTML to contain a matching <%s> in <%s>.',\n      tag,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function warnForInsertedHydratedText(\n  parentNode: Element | Document,\n  text: string,\n) {\n  if (__DEV__) {\n    if (text === '') {\n      // We expect to insert empty text nodes since they're not represented in\n      // the HTML.\n      // TODO: Remove this special case if we can just avoid inserting empty\n      // text nodes.\n      return;\n    }\n    if (didWarnInvalidHydration) {\n      return;\n    }\n    didWarnInvalidHydration = true;\n    warningWithoutStack(\n      false,\n      'Expected server HTML to contain a matching text node for \"%s\" in <%s>.',\n      text,\n      parentNode.nodeName.toLowerCase(),\n    );\n  }\n}\n\nexport function restoreControlledState(\n  domElement: Element,\n  tag: string,\n  props: Object,\n): void {\n  switch (tag) {\n    case 'input':\n      ReactDOMInputRestoreControlledState(domElement, props);\n      return;\n    case 'textarea':\n      ReactDOMTextareaRestoreControlledState(domElement, props);\n      return;\n    case 'select':\n      ReactDOMSelectRestoreControlledState(domElement, props);\n      return;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport warningWithoutStack from 'shared/warningWithoutStack';\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nimport {getCurrentFiberStackInDev} from 'react-reconciler/src/ReactCurrentFiber';\n\nlet validateDOMNesting = () => {};\nlet updatedAncestorInfo = () => {};\n\nif (__DEV__) {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  const specialTags = [\n    'address',\n    'applet',\n    'area',\n    'article',\n    'aside',\n    'base',\n    'basefont',\n    'bgsound',\n    'blockquote',\n    'body',\n    'br',\n    'button',\n    'caption',\n    'center',\n    'col',\n    'colgroup',\n    'dd',\n    'details',\n    'dir',\n    'div',\n    'dl',\n    'dt',\n    'embed',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'frame',\n    'frameset',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'head',\n    'header',\n    'hgroup',\n    'hr',\n    'html',\n    'iframe',\n    'img',\n    'input',\n    'isindex',\n    'li',\n    'link',\n    'listing',\n    'main',\n    'marquee',\n    'menu',\n    'menuitem',\n    'meta',\n    'nav',\n    'noembed',\n    'noframes',\n    'noscript',\n    'object',\n    'ol',\n    'p',\n    'param',\n    'plaintext',\n    'pre',\n    'script',\n    'section',\n    'select',\n    'source',\n    'style',\n    'summary',\n    'table',\n    'tbody',\n    'td',\n    'template',\n    'textarea',\n    'tfoot',\n    'th',\n    'thead',\n    'title',\n    'tr',\n    'track',\n    'ul',\n    'wbr',\n    'xmp',\n  ];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  const inScopeTags = [\n    'applet',\n    'caption',\n    'html',\n    'table',\n    'td',\n    'th',\n    'marquee',\n    'object',\n    'template',\n\n    // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n    // TODO: Distinguish by namespace here -- for <title>, including it here\n    // errs on the side of fewer warnings\n    'foreignObject',\n    'desc',\n    'title',\n  ];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n  const buttonScopeTags = inScopeTags.concat(['button']);\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n  const impliedEndTags = [\n    'dd',\n    'dt',\n    'li',\n    'option',\n    'optgroup',\n    'p',\n    'rp',\n    'rt',\n  ];\n\n  const emptyAncestorInfo = {\n    current: null,\n\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null,\n  };\n\n  updatedAncestorInfo = function(oldInfo, tag) {\n    let ancestorInfo = {...(oldInfo || emptyAncestorInfo)};\n    let info = {tag};\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    }\n\n    // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    if (\n      specialTags.indexOf(tag) !== -1 &&\n      tag !== 'address' &&\n      tag !== 'div' &&\n      tag !== 'p'\n    ) {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n\n  /**\n   * Returns whether\n   */\n  const isTagValidWithParent = function(tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n      case 'option':\n        return tag === '#text';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n      case 'tr':\n        return (\n          tag === 'th' ||\n          tag === 'td' ||\n          tag === 'style' ||\n          tag === 'script' ||\n          tag === 'template'\n        );\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return (\n          tag === 'tr' ||\n          tag === 'style' ||\n          tag === 'script' ||\n          tag === 'template'\n        );\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n      case 'table':\n        return (\n          tag === 'caption' ||\n          tag === 'colgroup' ||\n          tag === 'tbody' ||\n          tag === 'tfoot' ||\n          tag === 'thead' ||\n          tag === 'style' ||\n          tag === 'script' ||\n          tag === 'template'\n        );\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n      case 'head':\n        return (\n          tag === 'base' ||\n          tag === 'basefont' ||\n          tag === 'bgsound' ||\n          tag === 'link' ||\n          tag === 'meta' ||\n          tag === 'title' ||\n          tag === 'noscript' ||\n          tag === 'noframes' ||\n          tag === 'style' ||\n          tag === 'script' ||\n          tag === 'template'\n        );\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n      case 'html':\n        return tag === 'head' || tag === 'body';\n      case '#document':\n        return tag === 'html';\n    }\n\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return (\n          parentTag !== 'h1' &&\n          parentTag !== 'h2' &&\n          parentTag !== 'h3' &&\n          parentTag !== 'h4' &&\n          parentTag !== 'h5' &&\n          parentTag !== 'h6'\n        );\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns whether\n   */\n  const findInvalidAncestorForTag = function(tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n      case 'pre':\n      case 'listing':\n      case 'table':\n      case 'hr':\n      case 'xmp':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  const didWarn = {};\n\n  validateDOMNesting = function(childTag, childText, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    const parentInfo = ancestorInfo.current;\n    const parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      warningWithoutStack(\n        childTag == null,\n        'validateDOMNesting: when childText is passed, childTag should be null',\n      );\n      childTag = '#text';\n    }\n\n    const invalidParent = isTagValidWithParent(childTag, parentTag)\n      ? null\n      : parentInfo;\n    const invalidAncestor = invalidParent\n      ? null\n      : findInvalidAncestorForTag(childTag, ancestorInfo);\n    const invalidParentOrAncestor = invalidParent || invalidAncestor;\n    if (!invalidParentOrAncestor) {\n      return;\n    }\n\n    const ancestorTag = invalidParentOrAncestor.tag;\n    const addendum = getCurrentFiberStackInDev();\n\n    const warnKey =\n      !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;\n    if (didWarn[warnKey]) {\n      return;\n    }\n    didWarn[warnKey] = true;\n\n    let tagDisplayName = childTag;\n    let whitespaceInfo = '';\n    if (childTag === '#text') {\n      if (/\\S/.test(childText)) {\n        tagDisplayName = 'Text nodes';\n      } else {\n        tagDisplayName = 'Whitespace text nodes';\n        whitespaceInfo =\n          \" Make sure you don't have any extra whitespace between tags on \" +\n          'each line of your source code.';\n      }\n    } else {\n      tagDisplayName = '<' + childTag + '>';\n    }\n\n    if (invalidParent) {\n      let info = '';\n      if (ancestorTag === 'table' && childTag === 'tr') {\n        info +=\n          ' Add a <tbody> to your code to match the DOM tree generated by ' +\n          'the browser.';\n      }\n      warningWithoutStack(\n        false,\n        'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s',\n        tagDisplayName,\n        ancestorTag,\n        whitespaceInfo,\n        info,\n        addendum,\n      );\n    } else {\n      warningWithoutStack(\n        false,\n        'validateDOMNesting(...): %s cannot appear as a descendant of ' +\n          '<%s>.%s',\n        tagDisplayName,\n        ancestorTag,\n        addendum,\n      );\n    }\n  };\n}\n\nexport {updatedAncestorInfo, validateDOMNesting};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\n// Renderers that don't support persistence\n// can re-export everything from this module.\n\nfunction shim(...args: any) {\n  invariant(\n    false,\n    'The current renderer does not support persistence. ' +\n      'This error is likely caused by a bug in React. ' +\n      'Please file an issue.',\n  );\n}\n\n// Persistence (when unsupported)\nexport const supportsPersistence = false;\nexport const cloneInstance = shim;\nexport const createContainerChildSet = shim;\nexport const appendChildToContainerChildSet = shim;\nexport const finalizeContainerChildren = shim;\nexport const replaceContainerChildren = shim;\nexport const cloneHiddenInstance = shim;\nexport const cloneUnhiddenInstance = shim;\nexport const createHiddenTextInstance = shim;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {precacheFiberNode, updateFiberProps} from './ReactDOMComponentTree';\nimport {\n  createElement,\n  createTextNode,\n  setInitialProperties,\n  diffProperties,\n  updateProperties,\n  diffHydratedProperties,\n  diffHydratedText,\n  trapClickOnNonInteractiveElement,\n  warnForUnmatchedText,\n  warnForDeletedHydratableElement,\n  warnForDeletedHydratableText,\n  warnForInsertedHydratedElement,\n  warnForInsertedHydratedText,\n} from './ReactDOMComponent';\nimport {getSelectionInformation, restoreSelection} from './ReactInputSelection';\nimport setTextContent from './setTextContent';\nimport {validateDOMNesting, updatedAncestorInfo} from './validateDOMNesting';\nimport {\n  isEnabled as ReactBrowserEventEmitterIsEnabled,\n  setEnabled as ReactBrowserEventEmitterSetEnabled,\n} from '../events/ReactBrowserEventEmitter';\nimport {getChildNamespace} from '../shared/DOMNamespaces';\nimport {\n  ELEMENT_NODE,\n  TEXT_NODE,\n  COMMENT_NODE,\n  DOCUMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n} from '../shared/HTMLNodeType';\nimport dangerousStyleValue from '../shared/dangerousStyleValue';\n\nimport type {DOMContainer} from './ReactDOM';\n\nexport type Type = string;\nexport type Props = {\n  autoFocus?: boolean,\n  children?: mixed,\n  hidden?: boolean,\n  suppressHydrationWarning?: boolean,\n  dangerouslySetInnerHTML?: mixed,\n  style?: {\n    display?: string,\n  },\n};\nexport type Container = Element | Document;\nexport type Instance = Element;\nexport type TextInstance = Text;\nexport type SuspenseInstance = Comment;\nexport type HydratableInstance = Instance | TextInstance | SuspenseInstance;\nexport type PublicInstance = Element | Text;\ntype HostContextDev = {\n  namespace: string,\n  ancestorInfo: mixed,\n};\ntype HostContextProd = string;\nexport type HostContext = HostContextDev | HostContextProd;\nexport type UpdatePayload = Array<mixed>;\nexport type ChildSet = void; // Unused\nexport type TimeoutHandle = TimeoutID;\nexport type NoTimeout = -1;\n\nimport {\n  unstable_scheduleCallback as scheduleDeferredCallback,\n  unstable_cancelCallback as cancelDeferredCallback,\n} from 'scheduler';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\nexport {\n  unstable_now as now,\n  unstable_scheduleCallback as scheduleDeferredCallback,\n  unstable_shouldYield as shouldYield,\n  unstable_cancelCallback as cancelDeferredCallback,\n} from 'scheduler';\n\nlet SUPPRESS_HYDRATION_WARNING;\nif (__DEV__) {\n  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';\n}\n\nconst SUSPENSE_START_DATA = '$';\nconst SUSPENSE_END_DATA = '/$';\n\nconst STYLE = 'style';\n\nlet eventsEnabled: ?boolean = null;\nlet selectionInformation: ?mixed = null;\n\nfunction shouldAutoFocusHostComponent(type: string, props: Props): boolean {\n  switch (type) {\n    case 'button':\n    case 'input':\n    case 'select':\n    case 'textarea':\n      return !!props.autoFocus;\n  }\n  return false;\n}\n\nexport * from 'shared/HostConfigWithNoPersistence';\n\nexport function getRootHostContext(\n  rootContainerInstance: Container,\n): HostContext {\n  let type;\n  let namespace;\n  const nodeType = rootContainerInstance.nodeType;\n  switch (nodeType) {\n    case DOCUMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE: {\n      type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';\n      let root = (rootContainerInstance: any).documentElement;\n      namespace = root ? root.namespaceURI : getChildNamespace(null, '');\n      break;\n    }\n    default: {\n      const container: any =\n        nodeType === COMMENT_NODE\n          ? rootContainerInstance.parentNode\n          : rootContainerInstance;\n      const ownNamespace = container.namespaceURI || null;\n      type = container.tagName;\n      namespace = getChildNamespace(ownNamespace, type);\n      break;\n    }\n  }\n  if (__DEV__) {\n    const validatedTag = type.toLowerCase();\n    const ancestorInfo = updatedAncestorInfo(null, validatedTag);\n    return {namespace, ancestorInfo};\n  }\n  return namespace;\n}\n\nexport function getChildHostContext(\n  parentHostContext: HostContext,\n  type: string,\n  rootContainerInstance: Container,\n): HostContext {\n  if (__DEV__) {\n    const parentHostContextDev = ((parentHostContext: any): HostContextDev);\n    const namespace = getChildNamespace(parentHostContextDev.namespace, type);\n    const ancestorInfo = updatedAncestorInfo(\n      parentHostContextDev.ancestorInfo,\n      type,\n    );\n    return {namespace, ancestorInfo};\n  }\n  const parentNamespace = ((parentHostContext: any): HostContextProd);\n  return getChildNamespace(parentNamespace, type);\n}\n\nexport function getPublicInstance(instance: Instance): * {\n  return instance;\n}\n\nexport function prepareForCommit(containerInfo: Container): void {\n  eventsEnabled = ReactBrowserEventEmitterIsEnabled();\n  selectionInformation = getSelectionInformation();\n  ReactBrowserEventEmitterSetEnabled(false);\n}\n\nexport function resetAfterCommit(containerInfo: Container): void {\n  restoreSelection(selectionInformation);\n  selectionInformation = null;\n  ReactBrowserEventEmitterSetEnabled(eventsEnabled);\n  eventsEnabled = null;\n}\n\nexport function createInstance(\n  type: string,\n  props: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n  internalInstanceHandle: Object,\n): Instance {\n  let parentNamespace: string;\n  if (__DEV__) {\n    // TODO: take namespace into account when validating.\n    const hostContextDev = ((hostContext: any): HostContextDev);\n    validateDOMNesting(type, null, hostContextDev.ancestorInfo);\n    if (\n      typeof props.children === 'string' ||\n      typeof props.children === 'number'\n    ) {\n      const string = '' + props.children;\n      const ownAncestorInfo = updatedAncestorInfo(\n        hostContextDev.ancestorInfo,\n        type,\n      );\n      validateDOMNesting(null, string, ownAncestorInfo);\n    }\n    parentNamespace = hostContextDev.namespace;\n  } else {\n    parentNamespace = ((hostContext: any): HostContextProd);\n  }\n  const domElement: Instance = createElement(\n    type,\n    props,\n    rootContainerInstance,\n    parentNamespace,\n  );\n  precacheFiberNode(internalInstanceHandle, domElement);\n  updateFiberProps(domElement, props);\n  return domElement;\n}\n\nexport function appendInitialChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n): void {\n  parentInstance.appendChild(child);\n}\n\nexport function finalizeInitialChildren(\n  domElement: Instance,\n  type: string,\n  props: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  setInitialProperties(domElement, type, props, rootContainerInstance);\n  return shouldAutoFocusHostComponent(type, props);\n}\n\nexport function prepareUpdate(\n  domElement: Instance,\n  type: string,\n  oldProps: Props,\n  newProps: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): null | Array<mixed> {\n  if (__DEV__) {\n    const hostContextDev = ((hostContext: any): HostContextDev);\n    if (\n      typeof newProps.children !== typeof oldProps.children &&\n      (typeof newProps.children === 'string' ||\n        typeof newProps.children === 'number')\n    ) {\n      const string = '' + newProps.children;\n      const ownAncestorInfo = updatedAncestorInfo(\n        hostContextDev.ancestorInfo,\n        type,\n      );\n      validateDOMNesting(null, string, ownAncestorInfo);\n    }\n  }\n  return diffProperties(\n    domElement,\n    type,\n    oldProps,\n    newProps,\n    rootContainerInstance,\n  );\n}\n\nexport function shouldSetTextContent(type: string, props: Props): boolean {\n  return (\n    type === 'textarea' ||\n    type === 'option' ||\n    type === 'noscript' ||\n    typeof props.children === 'string' ||\n    typeof props.children === 'number' ||\n    (typeof props.dangerouslySetInnerHTML === 'object' &&\n      props.dangerouslySetInnerHTML !== null &&\n      props.dangerouslySetInnerHTML.__html != null)\n  );\n}\n\nexport function shouldDeprioritizeSubtree(type: string, props: Props): boolean {\n  return !!props.hidden;\n}\n\nexport function createTextInstance(\n  text: string,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n  internalInstanceHandle: Object,\n): TextInstance {\n  if (__DEV__) {\n    const hostContextDev = ((hostContext: any): HostContextDev);\n    validateDOMNesting(null, text, hostContextDev.ancestorInfo);\n  }\n  const textNode: TextInstance = createTextNode(text, rootContainerInstance);\n  precacheFiberNode(internalInstanceHandle, textNode);\n  return textNode;\n}\n\nexport const isPrimaryRenderer = true;\n// This initialization code may run even on server environments\n// if a component just imports ReactDOM (e.g. for findDOMNode).\n// Some environments might not have setTimeout or clearTimeout.\nexport const scheduleTimeout =\n  typeof setTimeout === 'function' ? setTimeout : (undefined: any);\nexport const cancelTimeout =\n  typeof clearTimeout === 'function' ? clearTimeout : (undefined: any);\nexport const noTimeout = -1;\nexport const schedulePassiveEffects = scheduleDeferredCallback;\nexport const cancelPassiveEffects = cancelDeferredCallback;\n\n// -------------------\n//     Mutation\n// -------------------\n\nexport const supportsMutation = true;\n\nexport function commitMount(\n  domElement: Instance,\n  type: string,\n  newProps: Props,\n  internalInstanceHandle: Object,\n): void {\n  // Despite the naming that might imply otherwise, this method only\n  // fires if there is an `Update` effect scheduled during mounting.\n  // This happens if `finalizeInitialChildren` returns `true` (which it\n  // does to implement the `autoFocus` attribute on the client). But\n  // there are also other cases when this might happen (such as patching\n  // up text content during hydration mismatch). So we'll check this again.\n  if (shouldAutoFocusHostComponent(type, newProps)) {\n    ((domElement: any):\n      | HTMLButtonElement\n      | HTMLInputElement\n      | HTMLSelectElement\n      | HTMLTextAreaElement).focus();\n  }\n}\n\nexport function commitUpdate(\n  domElement: Instance,\n  updatePayload: Array<mixed>,\n  type: string,\n  oldProps: Props,\n  newProps: Props,\n  internalInstanceHandle: Object,\n): void {\n  // Update the props handle so that we know which props are the ones with\n  // with current event handlers.\n  updateFiberProps(domElement, newProps);\n  // Apply the diff to the DOM node.\n  updateProperties(domElement, updatePayload, type, oldProps, newProps);\n}\n\nexport function resetTextContent(domElement: Instance): void {\n  setTextContent(domElement, '');\n}\n\nexport function commitTextUpdate(\n  textInstance: TextInstance,\n  oldText: string,\n  newText: string,\n): void {\n  textInstance.nodeValue = newText;\n}\n\nexport function appendChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n): void {\n  parentInstance.appendChild(child);\n}\n\nexport function appendChildToContainer(\n  container: DOMContainer,\n  child: Instance | TextInstance,\n): void {\n  let parentNode;\n  if (container.nodeType === COMMENT_NODE) {\n    parentNode = (container.parentNode: any);\n    parentNode.insertBefore(child, container);\n  } else {\n    parentNode = container;\n    parentNode.appendChild(child);\n  }\n  // This container might be used for a portal.\n  // If something inside a portal is clicked, that click should bubble\n  // through the React tree. However, on Mobile Safari the click would\n  // never bubble through the *DOM* tree unless an ancestor with onclick\n  // event exists. So we wouldn't see it and dispatch it.\n  // This is why we ensure that non React root containers have inline onclick\n  // defined.\n  // https://github.com/facebook/react/issues/11918\n  const reactRootContainer = container._reactRootContainer;\n  if (\n    (reactRootContainer === null || reactRootContainer === undefined) &&\n    parentNode.onclick === null\n  ) {\n    // TODO: This cast may not be sound for SVG, MathML or custom elements.\n    trapClickOnNonInteractiveElement(((parentNode: any): HTMLElement));\n  }\n}\n\nexport function insertBefore(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n  beforeChild: Instance | TextInstance | SuspenseInstance,\n): void {\n  parentInstance.insertBefore(child, beforeChild);\n}\n\nexport function insertInContainerBefore(\n  container: Container,\n  child: Instance | TextInstance,\n  beforeChild: Instance | TextInstance | SuspenseInstance,\n): void {\n  if (container.nodeType === COMMENT_NODE) {\n    (container.parentNode: any).insertBefore(child, beforeChild);\n  } else {\n    container.insertBefore(child, beforeChild);\n  }\n}\n\nexport function removeChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance | SuspenseInstance,\n): void {\n  parentInstance.removeChild(child);\n}\n\nexport function removeChildFromContainer(\n  container: Container,\n  child: Instance | TextInstance | SuspenseInstance,\n): void {\n  if (container.nodeType === COMMENT_NODE) {\n    (container.parentNode: any).removeChild(child);\n  } else {\n    container.removeChild(child);\n  }\n}\n\nexport function clearSuspenseBoundary(\n  parentInstance: Instance,\n  suspenseInstance: SuspenseInstance,\n): void {\n  let node = suspenseInstance;\n  // Delete all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n  let depth = 0;\n  do {\n    let nextNode = node.nextSibling;\n    parentInstance.removeChild(node);\n    if (nextNode && nextNode.nodeType === COMMENT_NODE) {\n      let data = ((nextNode: any).data: string);\n      if (data === SUSPENSE_END_DATA) {\n        if (depth === 0) {\n          parentInstance.removeChild(nextNode);\n          return;\n        } else {\n          depth--;\n        }\n      } else if (data === SUSPENSE_START_DATA) {\n        depth++;\n      }\n    }\n    node = nextNode;\n  } while (node);\n  // TODO: Warn, we didn't find the end comment boundary.\n}\n\nexport function clearSuspenseBoundaryFromContainer(\n  container: Container,\n  suspenseInstance: SuspenseInstance,\n): void {\n  if (container.nodeType === COMMENT_NODE) {\n    clearSuspenseBoundary((container.parentNode: any), suspenseInstance);\n  } else if (container.nodeType === ELEMENT_NODE) {\n    clearSuspenseBoundary((container: any), suspenseInstance);\n  } else {\n    // Document nodes should never contain suspense boundaries.\n  }\n}\n\nexport function hideInstance(instance: Instance): void {\n  // TODO: Does this work for all element types? What about MathML? Should we\n  // pass host context to this method?\n  instance = ((instance: any): HTMLElement);\n  instance.style.display = 'none';\n}\n\nexport function hideTextInstance(textInstance: TextInstance): void {\n  textInstance.nodeValue = '';\n}\n\nexport function unhideInstance(instance: Instance, props: Props): void {\n  instance = ((instance: any): HTMLElement);\n  const styleProp = props[STYLE];\n  const display =\n    styleProp !== undefined &&\n    styleProp !== null &&\n    styleProp.hasOwnProperty('display')\n      ? styleProp.display\n      : null;\n  instance.style.display = dangerousStyleValue('display', display);\n}\n\nexport function unhideTextInstance(\n  textInstance: TextInstance,\n  text: string,\n): void {\n  textInstance.nodeValue = text;\n}\n\n// -------------------\n//     Hydration\n// -------------------\n\nexport const supportsHydration = true;\n\nexport function canHydrateInstance(\n  instance: HydratableInstance,\n  type: string,\n  props: Props,\n): null | Instance {\n  if (\n    instance.nodeType !== ELEMENT_NODE ||\n    type.toLowerCase() !== instance.nodeName.toLowerCase()\n  ) {\n    return null;\n  }\n  // This has now been refined to an element node.\n  return ((instance: any): Instance);\n}\n\nexport function canHydrateTextInstance(\n  instance: HydratableInstance,\n  text: string,\n): null | TextInstance {\n  if (text === '' || instance.nodeType !== TEXT_NODE) {\n    // Empty strings are not parsed by HTML so there won't be a correct match here.\n    return null;\n  }\n  // This has now been refined to a text node.\n  return ((instance: any): TextInstance);\n}\n\nexport function canHydrateSuspenseInstance(\n  instance: HydratableInstance,\n): null | SuspenseInstance {\n  if (instance.nodeType !== COMMENT_NODE) {\n    // Empty strings are not parsed by HTML so there won't be a correct match here.\n    return null;\n  }\n  // This has now been refined to a suspense node.\n  return ((instance: any): SuspenseInstance);\n}\n\nexport function getNextHydratableSibling(\n  instance: HydratableInstance,\n): null | HydratableInstance {\n  let node = instance.nextSibling;\n  // Skip non-hydratable nodes.\n  while (\n    node &&\n    node.nodeType !== ELEMENT_NODE &&\n    node.nodeType !== TEXT_NODE &&\n    (!enableSuspenseServerRenderer ||\n      node.nodeType !== COMMENT_NODE ||\n      (node: any).data !== SUSPENSE_START_DATA)\n  ) {\n    node = node.nextSibling;\n  }\n  return (node: any);\n}\n\nexport function getFirstHydratableChild(\n  parentInstance: Container | Instance,\n): null | HydratableInstance {\n  let next = parentInstance.firstChild;\n  // Skip non-hydratable nodes.\n  while (\n    next &&\n    next.nodeType !== ELEMENT_NODE &&\n    next.nodeType !== TEXT_NODE &&\n    (!enableSuspenseServerRenderer ||\n      next.nodeType !== COMMENT_NODE ||\n      (next: any).data !== SUSPENSE_START_DATA)\n  ) {\n    next = next.nextSibling;\n  }\n  return (next: any);\n}\n\nexport function hydrateInstance(\n  instance: Instance,\n  type: string,\n  props: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n  internalInstanceHandle: Object,\n): null | Array<mixed> {\n  precacheFiberNode(internalInstanceHandle, instance);\n  // TODO: Possibly defer this until the commit phase where all the events\n  // get attached.\n  updateFiberProps(instance, props);\n  let parentNamespace: string;\n  if (__DEV__) {\n    const hostContextDev = ((hostContext: any): HostContextDev);\n    parentNamespace = hostContextDev.namespace;\n  } else {\n    parentNamespace = ((hostContext: any): HostContextProd);\n  }\n  return diffHydratedProperties(\n    instance,\n    type,\n    props,\n    parentNamespace,\n    rootContainerInstance,\n  );\n}\n\nexport function hydrateTextInstance(\n  textInstance: TextInstance,\n  text: string,\n  internalInstanceHandle: Object,\n): boolean {\n  precacheFiberNode(internalInstanceHandle, textInstance);\n  return diffHydratedText(textInstance, text);\n}\n\nexport function getNextHydratableInstanceAfterSuspenseInstance(\n  suspenseInstance: SuspenseInstance,\n): null | HydratableInstance {\n  let node = suspenseInstance.nextSibling;\n  // Skip past all nodes within this suspense boundary.\n  // There might be nested nodes so we need to keep track of how\n  // deep we are and only break out when we're back on top.\n  let depth = 0;\n  while (node) {\n    if (node.nodeType === COMMENT_NODE) {\n      let data = ((node: any).data: string);\n      if (data === SUSPENSE_END_DATA) {\n        if (depth === 0) {\n          return getNextHydratableSibling((node: any));\n        } else {\n          depth--;\n        }\n      } else if (data === SUSPENSE_START_DATA) {\n        depth++;\n      }\n    }\n    node = node.nextSibling;\n  }\n  // TODO: Warn, we didn't find the end comment boundary.\n  return null;\n}\n\nexport function didNotMatchHydratedContainerTextInstance(\n  parentContainer: Container,\n  textInstance: TextInstance,\n  text: string,\n) {\n  if (__DEV__) {\n    warnForUnmatchedText(textInstance, text);\n  }\n}\n\nexport function didNotMatchHydratedTextInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n  textInstance: TextInstance,\n  text: string,\n) {\n  if (__DEV__ && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    warnForUnmatchedText(textInstance, text);\n  }\n}\n\nexport function didNotHydrateContainerInstance(\n  parentContainer: Container,\n  instance: HydratableInstance,\n) {\n  if (__DEV__) {\n    if (instance.nodeType === ELEMENT_NODE) {\n      warnForDeletedHydratableElement(parentContainer, (instance: any));\n    } else if (instance.nodeType === COMMENT_NODE) {\n      // TODO: warnForDeletedHydratableSuspenseBoundary\n    } else {\n      warnForDeletedHydratableText(parentContainer, (instance: any));\n    }\n  }\n}\n\nexport function didNotHydrateInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n  instance: HydratableInstance,\n) {\n  if (__DEV__ && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    if (instance.nodeType === ELEMENT_NODE) {\n      warnForDeletedHydratableElement(parentInstance, (instance: any));\n    } else if (instance.nodeType === COMMENT_NODE) {\n      // TODO: warnForDeletedHydratableSuspenseBoundary\n    } else {\n      warnForDeletedHydratableText(parentInstance, (instance: any));\n    }\n  }\n}\n\nexport function didNotFindHydratableContainerInstance(\n  parentContainer: Container,\n  type: string,\n  props: Props,\n) {\n  if (__DEV__) {\n    warnForInsertedHydratedElement(parentContainer, type, props);\n  }\n}\n\nexport function didNotFindHydratableContainerTextInstance(\n  parentContainer: Container,\n  text: string,\n) {\n  if (__DEV__) {\n    warnForInsertedHydratedText(parentContainer, text);\n  }\n}\n\nexport function didNotFindHydratableContainerSuspenseInstance(\n  parentContainer: Container,\n) {\n  if (__DEV__) {\n    // TODO: warnForInsertedHydratedSupsense(parentContainer);\n  }\n}\n\nexport function didNotFindHydratableInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n  type: string,\n  props: Props,\n) {\n  if (__DEV__ && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    warnForInsertedHydratedElement(parentInstance, type, props);\n  }\n}\n\nexport function didNotFindHydratableTextInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n  text: string,\n) {\n  if (__DEV__ && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    warnForInsertedHydratedText(parentInstance, text);\n  }\n}\n\nexport function didNotFindHydratableSuspenseInstance(\n  parentType: string,\n  parentProps: Props,\n  parentInstance: Instance,\n) {\n  if (__DEV__ && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {\n    // TODO: warnForInsertedHydratedSuspense(parentInstance);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\n\nimport {enableUserTimingAPI} from 'shared/ReactFeatureFlags';\nimport getComponentName from 'shared/getComponentName';\nimport {\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  Fragment,\n  ContextProvider,\n  ContextConsumer,\n  Mode,\n  SuspenseComponent,\n  DehydratedSuspenseComponent,\n} from 'shared/ReactWorkTags';\n\ntype MeasurementPhase =\n  | 'componentWillMount'\n  | 'componentWillUnmount'\n  | 'componentWillReceiveProps'\n  | 'shouldComponentUpdate'\n  | 'componentWillUpdate'\n  | 'componentDidUpdate'\n  | 'componentDidMount'\n  | 'getChildContext'\n  | 'getSnapshotBeforeUpdate';\n\n// Prefix measurements so that it's possible to filter them.\n// Longer prefixes are hard to read in DevTools.\nconst reactEmoji = '\\u269B';\nconst warningEmoji = '\\u26D4';\nconst supportsUserTiming =\n  typeof performance !== 'undefined' &&\n  typeof performance.mark === 'function' &&\n  typeof performance.clearMarks === 'function' &&\n  typeof performance.measure === 'function' &&\n  typeof performance.clearMeasures === 'function';\n\n// Keep track of current fiber so that we know the path to unwind on pause.\n// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?\nlet currentFiber: Fiber | null = null;\n// If we're in the middle of user code, which fiber and method is it?\n// Reusing `currentFiber` would be confusing for this because user code fiber\n// can change during commit phase too, but we don't need to unwind it (since\n// lifecycles in the commit phase don't resemble a tree).\nlet currentPhase: MeasurementPhase | null = null;\nlet currentPhaseFiber: Fiber | null = null;\n// Did lifecycle hook schedule an update? This is often a performance problem,\n// so we will keep track of it, and include it in the report.\n// Track commits caused by cascading updates.\nlet isCommitting: boolean = false;\nlet hasScheduledUpdateInCurrentCommit: boolean = false;\nlet hasScheduledUpdateInCurrentPhase: boolean = false;\nlet commitCountInCurrentWorkLoop: number = 0;\nlet effectCountInCurrentCommit: number = 0;\nlet isWaitingForCallback: boolean = false;\n// During commits, we only show a measurement once per method name\n// to avoid stretch the commit phase with measurement overhead.\nconst labelsInCurrentCommit: Set<string> = new Set();\n\nconst formatMarkName = (markName: string) => {\n  return `${reactEmoji} ${markName}`;\n};\n\nconst formatLabel = (label: string, warning: string | null) => {\n  const prefix = warning ? `${warningEmoji} ` : `${reactEmoji} `;\n  const suffix = warning ? ` Warning: ${warning}` : '';\n  return `${prefix}${label}${suffix}`;\n};\n\nconst beginMark = (markName: string) => {\n  performance.mark(formatMarkName(markName));\n};\n\nconst clearMark = (markName: string) => {\n  performance.clearMarks(formatMarkName(markName));\n};\n\nconst endMark = (label: string, markName: string, warning: string | null) => {\n  const formattedMarkName = formatMarkName(markName);\n  const formattedLabel = formatLabel(label, warning);\n  try {\n    performance.measure(formattedLabel, formattedMarkName);\n  } catch (err) {\n    // If previous mark was missing for some reason, this will throw.\n    // This could only happen if React crashed in an unexpected place earlier.\n    // Don't pile on with more errors.\n  }\n  // Clear marks immediately to avoid growing buffer.\n  performance.clearMarks(formattedMarkName);\n  performance.clearMeasures(formattedLabel);\n};\n\nconst getFiberMarkName = (label: string, debugID: number) => {\n  return `${label} (#${debugID})`;\n};\n\nconst getFiberLabel = (\n  componentName: string,\n  isMounted: boolean,\n  phase: MeasurementPhase | null,\n) => {\n  if (phase === null) {\n    // These are composite component total time measurements.\n    return `${componentName} [${isMounted ? 'update' : 'mount'}]`;\n  } else {\n    // Composite component methods.\n    return `${componentName}.${phase}`;\n  }\n};\n\nconst beginFiberMark = (\n  fiber: Fiber,\n  phase: MeasurementPhase | null,\n): boolean => {\n  const componentName = getComponentName(fiber.type) || 'Unknown';\n  const debugID = ((fiber._debugID: any): number);\n  const isMounted = fiber.alternate !== null;\n  const label = getFiberLabel(componentName, isMounted, phase);\n\n  if (isCommitting && labelsInCurrentCommit.has(label)) {\n    // During the commit phase, we don't show duplicate labels because\n    // there is a fixed overhead for every measurement, and we don't\n    // want to stretch the commit phase beyond necessary.\n    return false;\n  }\n  labelsInCurrentCommit.add(label);\n\n  const markName = getFiberMarkName(label, debugID);\n  beginMark(markName);\n  return true;\n};\n\nconst clearFiberMark = (fiber: Fiber, phase: MeasurementPhase | null) => {\n  const componentName = getComponentName(fiber.type) || 'Unknown';\n  const debugID = ((fiber._debugID: any): number);\n  const isMounted = fiber.alternate !== null;\n  const label = getFiberLabel(componentName, isMounted, phase);\n  const markName = getFiberMarkName(label, debugID);\n  clearMark(markName);\n};\n\nconst endFiberMark = (\n  fiber: Fiber,\n  phase: MeasurementPhase | null,\n  warning: string | null,\n) => {\n  const componentName = getComponentName(fiber.type) || 'Unknown';\n  const debugID = ((fiber._debugID: any): number);\n  const isMounted = fiber.alternate !== null;\n  const label = getFiberLabel(componentName, isMounted, phase);\n  const markName = getFiberMarkName(label, debugID);\n  endMark(label, markName, warning);\n};\n\nconst shouldIgnoreFiber = (fiber: Fiber): boolean => {\n  // Host components should be skipped in the timeline.\n  // We could check typeof fiber.type, but does this work with RN?\n  switch (fiber.tag) {\n    case HostRoot:\n    case HostComponent:\n    case HostText:\n    case HostPortal:\n    case Fragment:\n    case ContextProvider:\n    case ContextConsumer:\n    case Mode:\n      return true;\n    default:\n      return false;\n  }\n};\n\nconst clearPendingPhaseMeasurement = () => {\n  if (currentPhase !== null && currentPhaseFiber !== null) {\n    clearFiberMark(currentPhaseFiber, currentPhase);\n  }\n  currentPhaseFiber = null;\n  currentPhase = null;\n  hasScheduledUpdateInCurrentPhase = false;\n};\n\nconst pauseTimers = () => {\n  // Stops all currently active measurements so that they can be resumed\n  // if we continue in a later deferred loop from the same unit of work.\n  let fiber = currentFiber;\n  while (fiber) {\n    if (fiber._debugIsCurrentlyTiming) {\n      endFiberMark(fiber, null, null);\n    }\n    fiber = fiber.return;\n  }\n};\n\nconst resumeTimersRecursively = (fiber: Fiber) => {\n  if (fiber.return !== null) {\n    resumeTimersRecursively(fiber.return);\n  }\n  if (fiber._debugIsCurrentlyTiming) {\n    beginFiberMark(fiber, null);\n  }\n};\n\nconst resumeTimers = () => {\n  // Resumes all measurements that were active during the last deferred loop.\n  if (currentFiber !== null) {\n    resumeTimersRecursively(currentFiber);\n  }\n};\n\nexport function recordEffect(): void {\n  if (enableUserTimingAPI) {\n    effectCountInCurrentCommit++;\n  }\n}\n\nexport function recordScheduleUpdate(): void {\n  if (enableUserTimingAPI) {\n    if (isCommitting) {\n      hasScheduledUpdateInCurrentCommit = true;\n    }\n    if (\n      currentPhase !== null &&\n      currentPhase !== 'componentWillMount' &&\n      currentPhase !== 'componentWillReceiveProps'\n    ) {\n      hasScheduledUpdateInCurrentPhase = true;\n    }\n  }\n}\n\nexport function startRequestCallbackTimer(): void {\n  if (enableUserTimingAPI) {\n    if (supportsUserTiming && !isWaitingForCallback) {\n      isWaitingForCallback = true;\n      beginMark('(Waiting for async callback...)');\n    }\n  }\n}\n\nexport function stopRequestCallbackTimer(\n  didExpire: boolean,\n  expirationTime: number,\n): void {\n  if (enableUserTimingAPI) {\n    if (supportsUserTiming) {\n      isWaitingForCallback = false;\n      const warning = didExpire ? 'React was blocked by main thread' : null;\n      endMark(\n        `(Waiting for async callback... will force flush in ${expirationTime} ms)`,\n        '(Waiting for async callback...)',\n        warning,\n      );\n    }\n  }\n}\n\nexport function startWorkTimer(fiber: Fiber): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n      return;\n    }\n    // If we pause, this is the fiber to unwind from.\n    currentFiber = fiber;\n    if (!beginFiberMark(fiber, null)) {\n      return;\n    }\n    fiber._debugIsCurrentlyTiming = true;\n  }\n}\n\nexport function cancelWorkTimer(fiber: Fiber): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n      return;\n    }\n    // Remember we shouldn't complete measurement for this fiber.\n    // Otherwise flamechart will be deep even for small updates.\n    fiber._debugIsCurrentlyTiming = false;\n    clearFiberMark(fiber, null);\n  }\n}\n\nexport function stopWorkTimer(fiber: Fiber): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n      return;\n    }\n    // If we pause, its parent is the fiber to unwind from.\n    currentFiber = fiber.return;\n    if (!fiber._debugIsCurrentlyTiming) {\n      return;\n    }\n    fiber._debugIsCurrentlyTiming = false;\n    endFiberMark(fiber, null, null);\n  }\n}\n\nexport function stopFailedWorkTimer(fiber: Fiber): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {\n      return;\n    }\n    // If we pause, its parent is the fiber to unwind from.\n    currentFiber = fiber.return;\n    if (!fiber._debugIsCurrentlyTiming) {\n      return;\n    }\n    fiber._debugIsCurrentlyTiming = false;\n    const warning =\n      fiber.tag === SuspenseComponent ||\n      fiber.tag === DehydratedSuspenseComponent\n        ? 'Rendering was suspended'\n        : 'An error was thrown inside this error boundary';\n    endFiberMark(fiber, null, warning);\n  }\n}\n\nexport function startPhaseTimer(fiber: Fiber, phase: MeasurementPhase): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    clearPendingPhaseMeasurement();\n    if (!beginFiberMark(fiber, phase)) {\n      return;\n    }\n    currentPhaseFiber = fiber;\n    currentPhase = phase;\n  }\n}\n\nexport function stopPhaseTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    if (currentPhase !== null && currentPhaseFiber !== null) {\n      const warning = hasScheduledUpdateInCurrentPhase\n        ? 'Scheduled a cascading update'\n        : null;\n      endFiberMark(currentPhaseFiber, currentPhase, warning);\n    }\n    currentPhase = null;\n    currentPhaseFiber = null;\n  }\n}\n\nexport function startWorkLoopTimer(nextUnitOfWork: Fiber | null): void {\n  if (enableUserTimingAPI) {\n    currentFiber = nextUnitOfWork;\n    if (!supportsUserTiming) {\n      return;\n    }\n    commitCountInCurrentWorkLoop = 0;\n    // This is top level call.\n    // Any other measurements are performed within.\n    beginMark('(React Tree Reconciliation)');\n    // Resume any measurements that were in progress during the last loop.\n    resumeTimers();\n  }\n}\n\nexport function stopWorkLoopTimer(\n  interruptedBy: Fiber | null,\n  didCompleteRoot: boolean,\n): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    let warning = null;\n    if (interruptedBy !== null) {\n      if (interruptedBy.tag === HostRoot) {\n        warning = 'A top-level update interrupted the previous render';\n      } else {\n        const componentName = getComponentName(interruptedBy.type) || 'Unknown';\n        warning = `An update to ${componentName} interrupted the previous render`;\n      }\n    } else if (commitCountInCurrentWorkLoop > 1) {\n      warning = 'There were cascading updates';\n    }\n    commitCountInCurrentWorkLoop = 0;\n    let label = didCompleteRoot\n      ? '(React Tree Reconciliation: Completed Root)'\n      : '(React Tree Reconciliation: Yielded)';\n    // Pause any measurements until the next loop.\n    pauseTimers();\n    endMark(label, '(React Tree Reconciliation)', warning);\n  }\n}\n\nexport function startCommitTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    isCommitting = true;\n    hasScheduledUpdateInCurrentCommit = false;\n    labelsInCurrentCommit.clear();\n    beginMark('(Committing Changes)');\n  }\n}\n\nexport function stopCommitTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n\n    let warning = null;\n    if (hasScheduledUpdateInCurrentCommit) {\n      warning = 'Lifecycle hook scheduled a cascading update';\n    } else if (commitCountInCurrentWorkLoop > 0) {\n      warning = 'Caused by a cascading update in earlier commit';\n    }\n    hasScheduledUpdateInCurrentCommit = false;\n    commitCountInCurrentWorkLoop++;\n    isCommitting = false;\n    labelsInCurrentCommit.clear();\n\n    endMark('(Committing Changes)', '(Committing Changes)', warning);\n  }\n}\n\nexport function startCommitSnapshotEffectsTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    effectCountInCurrentCommit = 0;\n    beginMark('(Committing Snapshot Effects)');\n  }\n}\n\nexport function stopCommitSnapshotEffectsTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    const count = effectCountInCurrentCommit;\n    effectCountInCurrentCommit = 0;\n    endMark(\n      `(Committing Snapshot Effects: ${count} Total)`,\n      '(Committing Snapshot Effects)',\n      null,\n    );\n  }\n}\n\nexport function startCommitHostEffectsTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    effectCountInCurrentCommit = 0;\n    beginMark('(Committing Host Effects)');\n  }\n}\n\nexport function stopCommitHostEffectsTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    const count = effectCountInCurrentCommit;\n    effectCountInCurrentCommit = 0;\n    endMark(\n      `(Committing Host Effects: ${count} Total)`,\n      '(Committing Host Effects)',\n      null,\n    );\n  }\n}\n\nexport function startCommitLifeCyclesTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    effectCountInCurrentCommit = 0;\n    beginMark('(Calling Lifecycle Methods)');\n  }\n}\n\nexport function stopCommitLifeCyclesTimer(): void {\n  if (enableUserTimingAPI) {\n    if (!supportsUserTiming) {\n      return;\n    }\n    const count = effectCountInCurrentCommit;\n    effectCountInCurrentCommit = 0;\n    endMark(\n      `(Calling Lifecycle Methods: ${count} Total)`,\n      '(Calling Lifecycle Methods)',\n      null,\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\n\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nexport type StackCursor<T> = {\n  current: T,\n};\n\nconst valueStack: Array<any> = [];\n\nlet fiberStack: Array<Fiber | null>;\n\nif (__DEV__) {\n  fiberStack = [];\n}\n\nlet index = -1;\n\nfunction createCursor<T>(defaultValue: T): StackCursor<T> {\n  return {\n    current: defaultValue,\n  };\n}\n\nfunction isEmpty(): boolean {\n  return index === -1;\n}\n\nfunction pop<T>(cursor: StackCursor<T>, fiber: Fiber): void {\n  if (index < 0) {\n    if (__DEV__) {\n      warningWithoutStack(false, 'Unexpected pop.');\n    }\n    return;\n  }\n\n  if (__DEV__) {\n    if (fiber !== fiberStack[index]) {\n      warningWithoutStack(false, 'Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n\n  valueStack[index] = null;\n\n  if (__DEV__) {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push<T>(cursor: StackCursor<T>, value: T, fiber: Fiber): void {\n  index++;\n\n  valueStack[index] = cursor.current;\n\n  if (__DEV__) {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nfunction checkThatStackIsEmpty() {\n  if (__DEV__) {\n    if (index !== -1) {\n      warningWithoutStack(\n        false,\n        'Expected an empty stack. Something was not reset properly.',\n      );\n    }\n  }\n}\n\nfunction resetStackAfterFatalErrorInDev() {\n  if (__DEV__) {\n    index = -1;\n    valueStack.length = 0;\n    fiberStack.length = 0;\n  }\n}\n\nexport {\n  createCursor,\n  isEmpty,\n  pop,\n  push,\n  // DEV only:\n  checkThatStackIsEmpty,\n  resetStackAfterFatalErrorInDev,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {StackCursor} from './ReactFiberStack';\n\nimport {isFiberMounted} from 'react-reconciler/reflection';\nimport {ClassComponent, HostRoot} from 'shared/ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport checkPropTypes from 'prop-types/checkPropTypes';\n\nimport {setCurrentPhase, getCurrentFiberStackInDev} from './ReactCurrentFiber';\nimport {startPhaseTimer, stopPhaseTimer} from './ReactDebugFiberPerf';\nimport {createCursor, push, pop} from './ReactFiberStack';\n\nlet warnedAboutMissingGetChildContext;\n\nif (__DEV__) {\n  warnedAboutMissingGetChildContext = {};\n}\n\nexport const emptyContextObject = {};\nif (__DEV__) {\n  Object.freeze(emptyContextObject);\n}\n\n// A cursor to the current merged context object on the stack.\nlet contextStackCursor: StackCursor<Object> = createCursor(emptyContextObject);\n// A cursor to a boolean indicating whether the context has changed.\nlet didPerformWorkStackCursor: StackCursor<boolean> = createCursor(false);\n// Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\nlet previousContext: Object = emptyContextObject;\n\nfunction getUnmaskedContext(\n  workInProgress: Fiber,\n  Component: Function,\n  didPushOwnContextIfProvider: boolean,\n): Object {\n  if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n    // If the fiber is a context provider itself, when we read its context\n    // we may have already pushed its own child context on the stack. A context\n    // provider should not \"see\" its own child context. Therefore we read the\n    // previous (parent) context instead for a context provider.\n    return previousContext;\n  }\n  return contextStackCursor.current;\n}\n\nfunction cacheContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n  maskedContext: Object,\n): void {\n  const instance = workInProgress.stateNode;\n  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n}\n\nfunction getMaskedContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n): Object {\n  const type = workInProgress.type;\n  const contextTypes = type.contextTypes;\n  if (!contextTypes) {\n    return emptyContextObject;\n  }\n\n  // Avoid recreating masked context unless unmasked context has changed.\n  // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n  // This may trigger infinite loops if componentWillReceiveProps calls setState.\n  const instance = workInProgress.stateNode;\n  if (\n    instance &&\n    instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext\n  ) {\n    return instance.__reactInternalMemoizedMaskedChildContext;\n  }\n\n  const context = {};\n  for (let key in contextTypes) {\n    context[key] = unmaskedContext[key];\n  }\n\n  if (__DEV__) {\n    const name = getComponentName(type) || 'Unknown';\n    checkPropTypes(\n      contextTypes,\n      context,\n      'context',\n      name,\n      getCurrentFiberStackInDev,\n    );\n  }\n\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // Context is created before the class component is instantiated so check for instance.\n  if (instance) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return context;\n}\n\nfunction hasContextChanged(): boolean {\n  return didPerformWorkStackCursor.current;\n}\n\nfunction isContextProvider(type: Function): boolean {\n  const childContextTypes = type.childContextTypes;\n  return childContextTypes !== null && childContextTypes !== undefined;\n}\n\nfunction popContext(fiber: Fiber): void {\n  pop(didPerformWorkStackCursor, fiber);\n  pop(contextStackCursor, fiber);\n}\n\nfunction popTopLevelContextObject(fiber: Fiber): void {\n  pop(didPerformWorkStackCursor, fiber);\n  pop(contextStackCursor, fiber);\n}\n\nfunction pushTopLevelContextObject(\n  fiber: Fiber,\n  context: Object,\n  didChange: boolean,\n): void {\n  invariant(\n    contextStackCursor.current === emptyContextObject,\n    'Unexpected context found on stack. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n\n  push(contextStackCursor, context, fiber);\n  push(didPerformWorkStackCursor, didChange, fiber);\n}\n\nfunction processChildContext(\n  fiber: Fiber,\n  type: any,\n  parentContext: Object,\n): Object {\n  const instance = fiber.stateNode;\n  const childContextTypes = type.childContextTypes;\n\n  // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n  // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n  if (typeof instance.getChildContext !== 'function') {\n    if (__DEV__) {\n      const componentName = getComponentName(type) || 'Unknown';\n\n      if (!warnedAboutMissingGetChildContext[componentName]) {\n        warnedAboutMissingGetChildContext[componentName] = true;\n        warningWithoutStack(\n          false,\n          '%s.childContextTypes is specified but there is no getChildContext() method ' +\n            'on the instance. You can either define getChildContext() on %s or remove ' +\n            'childContextTypes from it.',\n          componentName,\n          componentName,\n        );\n      }\n    }\n    return parentContext;\n  }\n\n  let childContext;\n  if (__DEV__) {\n    setCurrentPhase('getChildContext');\n  }\n  startPhaseTimer(fiber, 'getChildContext');\n  childContext = instance.getChildContext();\n  stopPhaseTimer();\n  if (__DEV__) {\n    setCurrentPhase(null);\n  }\n  for (let contextKey in childContext) {\n    invariant(\n      contextKey in childContextTypes,\n      '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.',\n      getComponentName(type) || 'Unknown',\n      contextKey,\n    );\n  }\n  if (__DEV__) {\n    const name = getComponentName(type) || 'Unknown';\n    checkPropTypes(\n      childContextTypes,\n      childContext,\n      'child context',\n      name,\n      // In practice, there is one case in which we won't get a stack. It's when\n      // somebody calls unstable_renderSubtreeIntoContainer() and we process\n      // context from the parent component instance. The stack will be missing\n      // because it's outside of the reconciliation, and so the pointer has not\n      // been set. This is rare and doesn't matter. We'll also remove that API.\n      getCurrentFiberStackInDev,\n    );\n  }\n\n  return {...parentContext, ...childContext};\n}\n\nfunction pushContextProvider(workInProgress: Fiber): boolean {\n  const instance = workInProgress.stateNode;\n  // We push the context as early as possible to ensure stack integrity.\n  // If the instance does not exist yet, we will push null at first,\n  // and replace it on the stack later when invalidating the context.\n  const memoizedMergedChildContext =\n    (instance && instance.__reactInternalMemoizedMergedChildContext) ||\n    emptyContextObject;\n\n  // Remember the parent context so we can merge with it later.\n  // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n  previousContext = contextStackCursor.current;\n  push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n  push(\n    didPerformWorkStackCursor,\n    didPerformWorkStackCursor.current,\n    workInProgress,\n  );\n\n  return true;\n}\n\nfunction invalidateContextProvider(\n  workInProgress: Fiber,\n  type: any,\n  didChange: boolean,\n): void {\n  const instance = workInProgress.stateNode;\n  invariant(\n    instance,\n    'Expected to have an instance by this point. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n\n  if (didChange) {\n    // Merge parent and own context.\n    // Skip this if we're not updating due to sCU.\n    // This avoids unnecessarily recomputing memoized values.\n    const mergedContext = processChildContext(\n      workInProgress,\n      type,\n      previousContext,\n    );\n    instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n\n    // Replace the old (or empty) context with the new one.\n    // It is important to unwind the context in the reverse order.\n    pop(didPerformWorkStackCursor, workInProgress);\n    pop(contextStackCursor, workInProgress);\n    // Now push the new context and mark that it has changed.\n    push(contextStackCursor, mergedContext, workInProgress);\n    push(didPerformWorkStackCursor, didChange, workInProgress);\n  } else {\n    pop(didPerformWorkStackCursor, workInProgress);\n    push(didPerformWorkStackCursor, didChange, workInProgress);\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber: Fiber): Object {\n  // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n  // makes sense elsewhere\n  invariant(\n    isFiberMounted(fiber) && fiber.tag === ClassComponent,\n    'Expected subtree parent to be a mounted class component. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n\n  let node = fiber;\n  do {\n    switch (node.tag) {\n      case HostRoot:\n        return node.stateNode.context;\n      case ClassComponent: {\n        const Component = node.type;\n        if (isContextProvider(Component)) {\n          return node.stateNode.__reactInternalMemoizedMergedChildContext;\n        }\n        break;\n      }\n    }\n    node = node.return;\n  } while (node !== null);\n  invariant(\n    false,\n    'Found unexpected detached subtree parent. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nexport {\n  getUnmaskedContext,\n  cacheContext,\n  getMaskedContext,\n  hasContextChanged,\n  popContext,\n  popTopLevelContextObject,\n  pushTopLevelContextObject,\n  processChildContext,\n  isContextProvider,\n  pushContextProvider,\n  invalidateContextProvider,\n  findCurrentUnmaskedContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\n\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\ndeclare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n\nlet onCommitFiberRoot = null;\nlet onCommitFiberUnmount = null;\nlet hasLoggedError = false;\n\nfunction catchErrors(fn) {\n  return function(arg) {\n    try {\n      return fn(arg);\n    } catch (err) {\n      if (__DEV__ && !hasLoggedError) {\n        hasLoggedError = true;\n        warningWithoutStack(\n          false,\n          'React DevTools encountered an error: %s',\n          err,\n        );\n      }\n    }\n  };\n}\n\nexport const isDevToolsPresent =\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\nexport function injectInternals(internals: Object): boolean {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      warningWithoutStack(\n        false,\n        'The installed version of React DevTools is too old and will not work ' +\n          'with the current version of React. Please update React DevTools. ' +\n          'https://fb.me/react-devtools',\n      );\n    }\n    // DevTools exists, even though it doesn't support Fiber.\n    return true;\n  }\n  try {\n    const rendererID = hook.inject(internals);\n    // We have successfully injected, so now it is safe to set up hooks.\n    onCommitFiberRoot = catchErrors(root =>\n      hook.onCommitFiberRoot(rendererID, root),\n    );\n    onCommitFiberUnmount = catchErrors(fiber =>\n      hook.onCommitFiberUnmount(rendererID, fiber),\n    );\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      warningWithoutStack(\n        false,\n        'React DevTools encountered an error: %s.',\n        err,\n      );\n    }\n  }\n  // DevTools exists\n  return true;\n}\n\nexport function onCommitRoot(root: FiberRoot) {\n  if (typeof onCommitFiberRoot === 'function') {\n    onCommitFiberRoot(root);\n  }\n}\n\nexport function onCommitUnmount(fiber: Fiber) {\n  if (typeof onCommitFiberUnmount === 'function') {\n    onCommitFiberUnmount(fiber);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\nexport default 1073741823;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport MAX_SIGNED_31_BIT_INT from './maxSigned31BitInt';\n\nexport type ExpirationTime = number;\n\nexport const NoWork = 0;\nexport const Never = 1;\nexport const Sync = MAX_SIGNED_31_BIT_INT;\n\nconst UNIT_SIZE = 10;\nconst MAGIC_NUMBER_OFFSET = MAX_SIGNED_31_BIT_INT - 1;\n\n// 1 unit of expiration time represents 10ms.\nexport function msToExpirationTime(ms: number): ExpirationTime {\n  // Always add an offset so that we don't clash with the magic number for NoWork.\n  return MAGIC_NUMBER_OFFSET - ((ms / UNIT_SIZE) | 0);\n}\n\nexport function expirationTimeToMs(expirationTime: ExpirationTime): number {\n  return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;\n}\n\nfunction ceiling(num: number, precision: number): number {\n  return (((num / precision) | 0) + 1) * precision;\n}\n\nfunction computeExpirationBucket(\n  currentTime,\n  expirationInMs,\n  bucketSizeMs,\n): ExpirationTime {\n  return (\n    MAGIC_NUMBER_OFFSET -\n    ceiling(\n      MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE,\n      bucketSizeMs / UNIT_SIZE,\n    )\n  );\n}\n\nexport const LOW_PRIORITY_EXPIRATION = 5000;\nexport const LOW_PRIORITY_BATCH_SIZE = 250;\n\nexport function computeAsyncExpiration(\n  currentTime: ExpirationTime,\n): ExpirationTime {\n  return computeExpirationBucket(\n    currentTime,\n    LOW_PRIORITY_EXPIRATION,\n    LOW_PRIORITY_BATCH_SIZE,\n  );\n}\n\n// We intentionally set a higher expiration time for interactive updates in\n// dev than in production.\n//\n// If the main thread is being blocked so long that you hit the expiration,\n// it's a problem that could be solved with better scheduling.\n//\n// People will be more likely to notice this and fix it with the long\n// expiration time in development.\n//\n// In production we opt for better UX at the risk of masking scheduling\n// problems, by expiring fast.\nexport const HIGH_PRIORITY_EXPIRATION = __DEV__ ? 500 : 150;\nexport const HIGH_PRIORITY_BATCH_SIZE = 100;\n\nexport function computeInteractiveExpiration(currentTime: ExpirationTime) {\n  return computeExpirationBucket(\n    currentTime,\n    HIGH_PRIORITY_EXPIRATION,\n    HIGH_PRIORITY_BATCH_SIZE,\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type TypeOfMode = number;\n\nexport const NoContext = 0b000;\nexport const ConcurrentMode = 0b001;\nexport const StrictMode = 0b010;\nexport const ProfileMode = 0b100;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement, Source} from 'shared/ReactElementType';\nimport type {ReactFragment, ReactPortal, RefObject} from 'shared/ReactTypes';\nimport type {WorkTag} from 'shared/ReactWorkTags';\nimport type {TypeOfMode} from './ReactTypeOfMode';\nimport type {SideEffectTag} from 'shared/ReactSideEffectTags';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {UpdateQueue} from './ReactUpdateQueue';\nimport type {ContextDependencyList} from './ReactFiberNewContext';\nimport type {HookType} from './ReactFiberHooks';\n\nimport invariant from 'shared/invariant';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport {enableProfilerTimer} from 'shared/ReactFeatureFlags';\nimport {NoEffect} from 'shared/ReactSideEffectTags';\nimport {\n  IndeterminateComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  FunctionComponent,\n  MemoComponent,\n  LazyComponent,\n} from 'shared/ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\n\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook';\nimport {NoWork} from './ReactFiberExpirationTime';\nimport {\n  NoContext,\n  ConcurrentMode,\n  ProfileMode,\n  StrictMode,\n} from './ReactTypeOfMode';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_CONTEXT_TYPE,\n  REACT_CONCURRENT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nlet hasBadMapPolyfill;\n\nif (__DEV__) {\n  hasBadMapPolyfill = false;\n  try {\n    const nonExtensibleObject = Object.preventExtensions({});\n    const testMap = new Map([[nonExtensibleObject, null]]);\n    const testSet = new Set([nonExtensibleObject]);\n    // This is necessary for Rollup to not consider these unused.\n    // https://github.com/rollup/rollup/issues/1771\n    // TODO: we can remove these if Rollup fixes the bug.\n    testMap.set(0, 0);\n    testSet.add(0);\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\n// A Fiber is work on a Component that needs to be done or was done. There can\n// be more than one per component.\nexport type Fiber = {|\n  // These first fields are conceptually members of an Instance. This used to\n  // be split into a separate type and intersected with the other Fiber fields,\n  // but until Flow fixes its intersection bugs, we've merged them into a\n  // single type.\n\n  // An Instance is shared between all versions of a component. We can easily\n  // break this out into a separate object to avoid copying so much to the\n  // alternate versions of the tree. We put this on a single object for now to\n  // minimize the number of objects created during the initial render.\n\n  // Tag identifying the type of fiber.\n  tag: WorkTag,\n\n  // Unique identifier of this child.\n  key: null | string,\n\n  // The value of element.type which is used to preserve the identity during\n  // reconciliation of this child.\n  elementType: any,\n\n  // The resolved function/class/ associated with this fiber.\n  type: any,\n\n  // The local state associated with this fiber.\n  stateNode: any,\n\n  // Conceptual aliases\n  // parent : Instance -> return The parent happens to be the same as the\n  // return fiber since we've merged the fiber and instance.\n\n  // Remaining fields belong to Fiber\n\n  // The Fiber to return to after finishing processing this one.\n  // This is effectively the parent, but there can be multiple parents (two)\n  // so this is only the parent of the thing we're currently processing.\n  // It is conceptually the same as the return address of a stack frame.\n  return: Fiber | null,\n\n  // Singly Linked List Tree Structure.\n  child: Fiber | null,\n  sibling: Fiber | null,\n  index: number,\n\n  // The ref last used to attach this node.\n  // I'll avoid adding an owner field for prod and model that as functions.\n  ref: null | (((handle: mixed) => void) & {_stringRef: ?string}) | RefObject,\n\n  // Input is the data coming into process this fiber. Arguments. Props.\n  pendingProps: any, // This type will be more specific once we overload the tag.\n  memoizedProps: any, // The props used to create the output.\n\n  // A queue of state updates and callbacks.\n  updateQueue: UpdateQueue<any> | null,\n\n  // The state used to create the output\n  memoizedState: any,\n\n  // A linked-list of contexts that this fiber depends on\n  contextDependencies: ContextDependencyList | null,\n\n  // Bitfield that describes properties about the fiber and its subtree. E.g.\n  // the ConcurrentMode flag indicates whether the subtree should be async-by-\n  // default. When a fiber is created, it inherits the mode of its\n  // parent. Additional flags can be set at creation time, but after that the\n  // value should remain unchanged throughout the fiber's lifetime, particularly\n  // before its child fibers are created.\n  mode: TypeOfMode,\n\n  // Effect\n  effectTag: SideEffectTag,\n\n  // Singly linked list fast path to the next fiber with side-effects.\n  nextEffect: Fiber | null,\n\n  // The first and last fiber with side-effect within this subtree. This allows\n  // us to reuse a slice of the linked list when we reuse the work done within\n  // this fiber.\n  firstEffect: Fiber | null,\n  lastEffect: Fiber | null,\n\n  // Represents a time in the future by which this work should be completed.\n  // Does not include work found in its subtree.\n  expirationTime: ExpirationTime,\n\n  // This is used to quickly determine if a subtree has no pending changes.\n  childExpirationTime: ExpirationTime,\n\n  // This is a pooled version of a Fiber. Every fiber that gets updated will\n  // eventually have a pair. There are cases when we can clean up pairs to save\n  // memory if we need to.\n  alternate: Fiber | null,\n\n  // Time spent rendering this Fiber and its descendants for the current update.\n  // This tells us how well the tree makes use of sCU for memoization.\n  // It is reset to 0 each time we render and only updated when we don't bailout.\n  // This field is only set when the enableProfilerTimer flag is enabled.\n  actualDuration?: number,\n\n  // If the Fiber is currently active in the \"render\" phase,\n  // This marks the time at which the work began.\n  // This field is only set when the enableProfilerTimer flag is enabled.\n  actualStartTime?: number,\n\n  // Duration of the most recent render time for this Fiber.\n  // This value is not updated when we bailout for memoization purposes.\n  // This field is only set when the enableProfilerTimer flag is enabled.\n  selfBaseDuration?: number,\n\n  // Sum of base times for all descedents of this Fiber.\n  // This value bubbles up during the \"complete\" phase.\n  // This field is only set when the enableProfilerTimer flag is enabled.\n  treeBaseDuration?: number,\n\n  // Conceptual aliases\n  // workInProgress : Fiber ->  alternate The alternate used for reuse happens\n  // to be the same as work in progress.\n  // __DEV__ only\n  _debugID?: number,\n  _debugSource?: Source | null,\n  _debugOwner?: Fiber | null,\n  _debugIsCurrentlyTiming?: boolean,\n\n  // Used to verify that the order of hooks does not change between renders.\n  _debugHookTypes?: Array<HookType> | null,\n|};\n\nlet debugCounter;\n\nif (__DEV__) {\n  debugCounter = 1;\n}\n\nfunction FiberNode(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null;\n\n  // Fiber\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n\n  this.ref = null;\n\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.contextDependencies = null;\n\n  this.mode = mode;\n\n  // Effects\n  this.effectTag = NoEffect;\n  this.nextEffect = null;\n\n  this.firstEffect = null;\n  this.lastEffect = null;\n\n  this.expirationTime = NoWork;\n  this.childExpirationTime = NoWork;\n\n  this.alternate = null;\n\n  if (enableProfilerTimer) {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN;\n\n    // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  if (__DEV__) {\n    this._debugID = debugCounter++;\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugIsCurrentlyTiming = false;\n    this._debugHookTypes = null;\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n      Object.preventExtensions(this);\n    }\n  }\n}\n\n// This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\nconst createFiber = function(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n): Fiber {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function isSimpleFunctionComponent(type: any) {\n  return (\n    typeof type === 'function' &&\n    !shouldConstruct(type) &&\n    type.defaultProps === undefined\n  );\n}\n\nexport function resolveLazyComponentTag(Component: Function): WorkTag {\n  if (typeof Component === 'function') {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    const $$typeof = Component.$$typeof;\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n  }\n  return IndeterminateComponent;\n}\n\n// This is used to create an alternate fiber to do work on.\nexport function createWorkInProgress(\n  current: Fiber,\n  pendingProps: any,\n  expirationTime: ExpirationTime,\n): Fiber {\n  let workInProgress = current.alternate;\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(\n      current.tag,\n      pendingProps,\n      current.key,\n      current.mode,\n    );\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    if (__DEV__) {\n      // DEV-only fields\n      workInProgress._debugID = current._debugID;\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps;\n\n    // We already have an alternate.\n    // Reset the effect tag.\n    workInProgress.effectTag = NoEffect;\n\n    // The effect list is no longer valid.\n    workInProgress.nextEffect = null;\n    workInProgress.firstEffect = null;\n    workInProgress.lastEffect = null;\n\n    if (enableProfilerTimer) {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  }\n\n  workInProgress.childExpirationTime = current.childExpirationTime;\n  workInProgress.expirationTime = current.expirationTime;\n\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.contextDependencies = current.contextDependencies;\n\n  // These will be overridden during the parent's reconciliation\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  if (enableProfilerTimer) {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  return workInProgress;\n}\n\nexport function createHostRootFiber(isConcurrent: boolean): Fiber {\n  let mode = isConcurrent ? ConcurrentMode | StrictMode : NoContext;\n\n  if (enableProfilerTimer && isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\n\nexport function createFiberFromTypeAndProps(\n  type: any, // React$ElementType\n  key: null | string,\n  pendingProps: any,\n  owner: null | Fiber,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n): Fiber {\n  let fiber;\n\n  let fiberTag = IndeterminateComponent;\n  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n  let resolvedType = type;\n  if (typeof type === 'function') {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(\n          pendingProps.children,\n          mode,\n          expirationTime,\n          key,\n        );\n      case REACT_CONCURRENT_MODE_TYPE:\n        return createFiberFromMode(\n          pendingProps,\n          mode | ConcurrentMode | StrictMode,\n          expirationTime,\n          key,\n        );\n      case REACT_STRICT_MODE_TYPE:\n        return createFiberFromMode(\n          pendingProps,\n          mode | StrictMode,\n          expirationTime,\n          key,\n        );\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, expirationTime, key);\n      default: {\n        if (typeof type === 'object' && type !== null) {\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n              fiberTag = ContextProvider;\n              break getTag;\n            case REACT_CONTEXT_TYPE:\n              // This is a consumer\n              fiberTag = ContextConsumer;\n              break getTag;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = ForwardRef;\n              break getTag;\n            case REACT_MEMO_TYPE:\n              fiberTag = MemoComponent;\n              break getTag;\n            case REACT_LAZY_TYPE:\n              fiberTag = LazyComponent;\n              resolvedType = null;\n              break getTag;\n          }\n        }\n        let info = '';\n        if (__DEV__) {\n          if (\n            type === undefined ||\n            (typeof type === 'object' &&\n              type !== null &&\n              Object.keys(type).length === 0)\n          ) {\n            info +=\n              ' You likely forgot to export your component from the file ' +\n              \"it's defined in, or you might have mixed up default and \" +\n              'named imports.';\n          }\n          const ownerName = owner ? getComponentName(owner.type) : null;\n          if (ownerName) {\n            info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n          }\n        }\n        invariant(\n          false,\n          'Element type is invalid: expected a string (for built-in ' +\n            'components) or a class/function (for composite components) ' +\n            'but got: %s.%s',\n          type == null ? type : typeof type,\n          info,\n        );\n      }\n    }\n  }\n\n  fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.expirationTime = expirationTime;\n\n  return fiber;\n}\n\nexport function createFiberFromElement(\n  element: ReactElement,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n): Fiber {\n  let owner = null;\n  if (__DEV__) {\n    owner = element._owner;\n  }\n  const type = element.type;\n  const key = element.key;\n  const pendingProps = element.props;\n  const fiber = createFiberFromTypeAndProps(\n    type,\n    key,\n    pendingProps,\n    owner,\n    mode,\n    expirationTime,\n  );\n  if (__DEV__) {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n  return fiber;\n}\n\nexport function createFiberFromFragment(\n  elements: ReactFragment,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(Fragment, elements, key, mode);\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(\n  pendingProps: any,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n  key: null | string,\n): Fiber {\n  if (__DEV__) {\n    if (\n      typeof pendingProps.id !== 'string' ||\n      typeof pendingProps.onRender !== 'function'\n    ) {\n      warningWithoutStack(\n        false,\n        'Profiler must specify an \"id\" string and \"onRender\" function as props',\n      );\n    }\n  }\n\n  const fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  // TODO: The Profiler fiber shouldn't have a type. It has a tag.\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.type = REACT_PROFILER_TYPE;\n  fiber.expirationTime = expirationTime;\n\n  return fiber;\n}\n\nfunction createFiberFromMode(\n  pendingProps: any,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(Mode, pendingProps, key, mode);\n\n  // TODO: The Mode fiber shouldn't have a type. It has a tag.\n  const type =\n    (mode & ConcurrentMode) === NoContext\n      ? REACT_STRICT_MODE_TYPE\n      : REACT_CONCURRENT_MODE_TYPE;\n  fiber.elementType = type;\n  fiber.type = type;\n\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nexport function createFiberFromSuspense(\n  pendingProps: any,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n\n  // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.\n  const type = REACT_SUSPENSE_TYPE;\n  fiber.elementType = type;\n  fiber.type = type;\n\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nexport function createFiberFromText(\n  content: string,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n): Fiber {\n  const fiber = createFiber(HostText, content, null, mode);\n  fiber.expirationTime = expirationTime;\n  return fiber;\n}\n\nexport function createFiberFromHostInstanceForDeletion(): Fiber {\n  const fiber = createFiber(HostComponent, null, null, NoContext);\n  // TODO: These should not need a type.\n  fiber.elementType = 'DELETED';\n  fiber.type = 'DELETED';\n  return fiber;\n}\n\nexport function createFiberFromPortal(\n  portal: ReactPortal,\n  mode: TypeOfMode,\n  expirationTime: ExpirationTime,\n): Fiber {\n  const pendingProps = portal.children !== null ? portal.children : [];\n  const fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.expirationTime = expirationTime;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null, // Used by persistent updates\n    implementation: portal.implementation,\n  };\n  return fiber;\n}\n\n// Used for stashing WIP properties to replay failed work in DEV.\nexport function assignFiberPropertiesInDEV(\n  target: Fiber | null,\n  source: Fiber,\n): Fiber {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoContext);\n  }\n\n  // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.contextDependencies = source.contextDependencies;\n  target.mode = source.mode;\n  target.effectTag = source.effectTag;\n  target.nextEffect = source.nextEffect;\n  target.firstEffect = source.firstEffect;\n  target.lastEffect = source.lastEffect;\n  target.expirationTime = source.expirationTime;\n  target.childExpirationTime = source.childExpirationTime;\n  target.alternate = source.alternate;\n  if (enableProfilerTimer) {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n  target._debugID = source._debugID;\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {TimeoutHandle, NoTimeout} from './ReactFiberHostConfig';\nimport type {Thenable} from './ReactFiberScheduler';\nimport type {Interaction} from 'scheduler/src/Tracing';\n\nimport {noTimeout} from './ReactFiberHostConfig';\nimport {createHostRootFiber} from './ReactFiber';\nimport {NoWork} from './ReactFiberExpirationTime';\nimport {enableSchedulerTracing} from 'shared/ReactFeatureFlags';\nimport {unstable_getThreadID} from 'scheduler/tracing';\n\n// TODO: This should be lifted into the renderer.\nexport type Batch = {\n  _defer: boolean,\n  _expirationTime: ExpirationTime,\n  _onComplete: () => mixed,\n  _next: Batch | null,\n};\n\nexport type PendingInteractionMap = Map<ExpirationTime, Set<Interaction>>;\n\ntype BaseFiberRootProperties = {|\n  // Any additional information from the host associated with this root.\n  containerInfo: any,\n  // Used only by persistent updates.\n  pendingChildren: any,\n  // The currently active root fiber. This is the mutable root of the tree.\n  current: Fiber,\n\n  // The following priority levels are used to distinguish between 1)\n  // uncommitted work, 2) uncommitted work that is suspended, and 3) uncommitted\n  // work that may be unsuspended. We choose not to track each individual\n  // pending level, trading granularity for performance.\n  //\n  // The earliest and latest priority levels that are suspended from committing.\n  earliestSuspendedTime: ExpirationTime,\n  latestSuspendedTime: ExpirationTime,\n  // The earliest and latest priority levels that are not known to be suspended.\n  earliestPendingTime: ExpirationTime,\n  latestPendingTime: ExpirationTime,\n  // The latest priority level that was pinged by a resolved promise and can\n  // be retried.\n  latestPingedTime: ExpirationTime,\n\n  pingCache:\n    | WeakMap<Thenable, Set<ExpirationTime>>\n    | Map<Thenable, Set<ExpirationTime>>\n    | null,\n\n  // If an error is thrown, and there are no more updates in the queue, we try\n  // rendering from the root one more time, synchronously, before handling\n  // the error.\n  didError: boolean,\n\n  pendingCommitExpirationTime: ExpirationTime,\n  // A finished work-in-progress HostRoot that's ready to be committed.\n  finishedWork: Fiber | null,\n  // Timeout handle returned by setTimeout. Used to cancel a pending timeout, if\n  // it's superseded by a new one.\n  timeoutHandle: TimeoutHandle | NoTimeout,\n  // Top context object, used by renderSubtreeIntoContainer\n  context: Object | null,\n  pendingContext: Object | null,\n  // Determines if we should attempt to hydrate on the initial mount\n  +hydrate: boolean,\n  // Remaining expiration time on this root.\n  // TODO: Lift this into the renderer\n  nextExpirationTimeToWorkOn: ExpirationTime,\n  expirationTime: ExpirationTime,\n  // List of top-level batches. This list indicates whether a commit should be\n  // deferred. Also contains completion callbacks.\n  // TODO: Lift this into the renderer\n  firstBatch: Batch | null,\n  // Linked-list of roots\n  nextScheduledRoot: FiberRoot | null,\n|};\n\n// The following attributes are only used by interaction tracing builds.\n// They enable interactions to be associated with their async work,\n// And expose interaction metadata to the React DevTools Profiler plugin.\n// Note that these attributes are only defined when the enableSchedulerTracing flag is enabled.\ntype ProfilingOnlyFiberRootProperties = {|\n  interactionThreadID: number,\n  memoizedInteractions: Set<Interaction>,\n  pendingInteractionMap: PendingInteractionMap,\n|};\n\n// Exported FiberRoot type includes all properties,\n// To avoid requiring potentially error-prone :any casts throughout the project.\n// Profiling properties are only safe to access in profiling builds (when enableSchedulerTracing is true).\n// The types are defined separately within this file to ensure they stay in sync.\n// (We don't have to use an inline :any cast when enableSchedulerTracing is disabled.)\nexport type FiberRoot = {\n  ...BaseFiberRootProperties,\n  ...ProfilingOnlyFiberRootProperties,\n};\n\nexport function createFiberRoot(\n  containerInfo: any,\n  isConcurrent: boolean,\n  hydrate: boolean,\n): FiberRoot {\n  // Cyclic construction. This cheats the type system right now because\n  // stateNode is any.\n  const uninitializedFiber = createHostRootFiber(isConcurrent);\n\n  let root;\n  if (enableSchedulerTracing) {\n    root = ({\n      current: uninitializedFiber,\n      containerInfo: containerInfo,\n      pendingChildren: null,\n\n      earliestPendingTime: NoWork,\n      latestPendingTime: NoWork,\n      earliestSuspendedTime: NoWork,\n      latestSuspendedTime: NoWork,\n      latestPingedTime: NoWork,\n\n      pingCache: null,\n\n      didError: false,\n\n      pendingCommitExpirationTime: NoWork,\n      finishedWork: null,\n      timeoutHandle: noTimeout,\n      context: null,\n      pendingContext: null,\n      hydrate,\n      nextExpirationTimeToWorkOn: NoWork,\n      expirationTime: NoWork,\n      firstBatch: null,\n      nextScheduledRoot: null,\n\n      interactionThreadID: unstable_getThreadID(),\n      memoizedInteractions: new Set(),\n      pendingInteractionMap: new Map(),\n    }: FiberRoot);\n  } else {\n    root = ({\n      current: uninitializedFiber,\n      containerInfo: containerInfo,\n      pendingChildren: null,\n\n      pingCache: null,\n\n      earliestPendingTime: NoWork,\n      latestPendingTime: NoWork,\n      earliestSuspendedTime: NoWork,\n      latestSuspendedTime: NoWork,\n      latestPingedTime: NoWork,\n\n      didError: false,\n\n      pendingCommitExpirationTime: NoWork,\n      finishedWork: null,\n      timeoutHandle: noTimeout,\n      context: null,\n      pendingContext: null,\n      hydrate,\n      nextExpirationTimeToWorkOn: NoWork,\n      expirationTime: NoWork,\n      firstBatch: null,\n      nextScheduledRoot: null,\n    }: BaseFiberRootProperties);\n  }\n\n  uninitializedFiber.stateNode = root;\n\n  // The reason for the way the Flow types are structured in this file,\n  // Is to avoid needing :any casts everywhere interaction tracing fields are used.\n  // Unfortunately that requires an :any cast for non-interaction tracing capable builds.\n  // $FlowFixMe Remove this :any cast and replace it with something better.\n  return ((root: any): FiberRoot);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\n\nimport {getStackByFiberInDevAndProd} from './ReactCurrentFiber';\n\nimport getComponentName from 'shared/getComponentName';\nimport {StrictMode} from './ReactTypeOfMode';\nimport lowPriorityWarning from 'shared/lowPriorityWarning';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\ntype LIFECYCLE =\n  | 'UNSAFE_componentWillMount'\n  | 'UNSAFE_componentWillReceiveProps'\n  | 'UNSAFE_componentWillUpdate';\ntype LifecycleToComponentsMap = {[lifecycle: LIFECYCLE]: Array<Fiber>};\ntype FiberToLifecycleMap = Map<Fiber, LifecycleToComponentsMap>;\ntype FiberArray = Array<Fiber>;\ntype FiberToFiberComponentsMap = Map<Fiber, FiberArray>;\n\nconst ReactStrictModeWarnings = {\n  discardPendingWarnings(): void {},\n  flushPendingDeprecationWarnings(): void {},\n  flushPendingUnsafeLifecycleWarnings(): void {},\n  recordDeprecationWarnings(fiber: Fiber, instance: any): void {},\n  recordUnsafeLifecycleWarnings(fiber: Fiber, instance: any): void {},\n  recordLegacyContextWarning(fiber: Fiber, instance: any): void {},\n  flushLegacyContextWarning(): void {},\n};\n\nif (__DEV__) {\n  const LIFECYCLE_SUGGESTIONS = {\n    UNSAFE_componentWillMount: 'componentDidMount',\n    UNSAFE_componentWillReceiveProps: 'static getDerivedStateFromProps',\n    UNSAFE_componentWillUpdate: 'componentDidUpdate',\n  };\n\n  let pendingComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingComponentWillUpdateWarnings: Array<Fiber> = [];\n  let pendingUnsafeLifecycleWarnings: FiberToLifecycleMap = new Map();\n  let pendingLegacyContextWarning: FiberToFiberComponentsMap = new Map();\n\n  // Tracks components we have already warned about.\n  const didWarnAboutDeprecatedLifecycles = new Set();\n  const didWarnAboutUnsafeLifecycles = new Set();\n  const didWarnAboutLegacyContext = new Set();\n\n  const setToSortedString = set => {\n    const array = [];\n    set.forEach(value => {\n      array.push(value);\n    });\n    return array.sort().join(', ');\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = () => {\n    pendingComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUnsafeLifecycleWarnings = new Map();\n    pendingLegacyContextWarning = new Map();\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = () => {\n    ((pendingUnsafeLifecycleWarnings: any): FiberToLifecycleMap).forEach(\n      (lifecycleWarningsMap, strictRoot) => {\n        const lifecyclesWarningMessages = [];\n\n        Object.keys(lifecycleWarningsMap).forEach(lifecycle => {\n          const lifecycleWarnings = lifecycleWarningsMap[lifecycle];\n          if (lifecycleWarnings.length > 0) {\n            const componentNames = new Set();\n            lifecycleWarnings.forEach(fiber => {\n              componentNames.add(getComponentName(fiber.type) || 'Component');\n              didWarnAboutUnsafeLifecycles.add(fiber.type);\n            });\n\n            const formatted = lifecycle.replace('UNSAFE_', '');\n            const suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];\n            const sortedComponentNames = setToSortedString(componentNames);\n\n            lifecyclesWarningMessages.push(\n              `${formatted}: Please update the following components to use ` +\n                `${suggestion} instead: ${sortedComponentNames}`,\n            );\n          }\n        });\n\n        if (lifecyclesWarningMessages.length > 0) {\n          const strictRootComponentStack = getStackByFiberInDevAndProd(\n            strictRoot,\n          );\n\n          warningWithoutStack(\n            false,\n            'Unsafe lifecycle methods were found within a strict-mode tree:%s' +\n              '\\n\\n%s' +\n              '\\n\\nLearn more about this warning here:' +\n              '\\nhttps://fb.me/react-strict-mode-warnings',\n            strictRootComponentStack,\n            lifecyclesWarningMessages.join('\\n\\n'),\n          );\n        }\n      },\n    );\n\n    pendingUnsafeLifecycleWarnings = new Map();\n  };\n\n  const findStrictRoot = (fiber: Fiber): Fiber | null => {\n    let maybeStrictRoot = null;\n\n    let node = fiber;\n    while (node !== null) {\n      if (node.mode & StrictMode) {\n        maybeStrictRoot = node;\n      }\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  ReactStrictModeWarnings.flushPendingDeprecationWarnings = () => {\n    if (pendingComponentWillMountWarnings.length > 0) {\n      const uniqueNames = new Set();\n      pendingComponentWillMountWarnings.forEach(fiber => {\n        uniqueNames.add(getComponentName(fiber.type) || 'Component');\n        didWarnAboutDeprecatedLifecycles.add(fiber.type);\n      });\n\n      const sortedNames = setToSortedString(uniqueNames);\n\n      lowPriorityWarning(\n        false,\n        'componentWillMount is deprecated and will be removed in the next major version. ' +\n          'Use componentDidMount instead. As a temporary workaround, ' +\n          'you can rename to UNSAFE_componentWillMount.' +\n          '\\n\\nPlease update the following components: %s' +\n          '\\n\\nLearn more about this warning here:' +\n          '\\nhttps://fb.me/react-async-component-lifecycle-hooks',\n        sortedNames,\n      );\n\n      pendingComponentWillMountWarnings = [];\n    }\n\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      const uniqueNames = new Set();\n      pendingComponentWillReceivePropsWarnings.forEach(fiber => {\n        uniqueNames.add(getComponentName(fiber.type) || 'Component');\n        didWarnAboutDeprecatedLifecycles.add(fiber.type);\n      });\n\n      const sortedNames = setToSortedString(uniqueNames);\n\n      lowPriorityWarning(\n        false,\n        'componentWillReceiveProps is deprecated and will be removed in the next major version. ' +\n          'Use static getDerivedStateFromProps instead.' +\n          '\\n\\nPlease update the following components: %s' +\n          '\\n\\nLearn more about this warning here:' +\n          '\\nhttps://fb.me/react-async-component-lifecycle-hooks',\n        sortedNames,\n      );\n\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      const uniqueNames = new Set();\n      pendingComponentWillUpdateWarnings.forEach(fiber => {\n        uniqueNames.add(getComponentName(fiber.type) || 'Component');\n        didWarnAboutDeprecatedLifecycles.add(fiber.type);\n      });\n\n      const sortedNames = setToSortedString(uniqueNames);\n\n      lowPriorityWarning(\n        false,\n        'componentWillUpdate is deprecated and will be removed in the next major version. ' +\n          'Use componentDidUpdate instead. As a temporary workaround, ' +\n          'you can rename to UNSAFE_componentWillUpdate.' +\n          '\\n\\nPlease update the following components: %s' +\n          '\\n\\nLearn more about this warning here:' +\n          '\\nhttps://fb.me/react-async-component-lifecycle-hooks',\n        sortedNames,\n      );\n\n      pendingComponentWillUpdateWarnings = [];\n    }\n  };\n\n  ReactStrictModeWarnings.recordDeprecationWarnings = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    // Don't warn about react-lifecycles-compat polyfilled components.\n    if (\n      typeof instance.componentWillMount === 'function' &&\n      instance.componentWillMount.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n    if (\n      typeof instance.componentWillReceiveProps === 'function' &&\n      instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n    if (\n      typeof instance.componentWillUpdate === 'function' &&\n      instance.componentWillUpdate.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    const strictRoot = findStrictRoot(fiber);\n    if (strictRoot === null) {\n      warningWithoutStack(\n        false,\n        'Expected to find a StrictMode component in a strict mode tree. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n      return;\n    }\n\n    // Dedup strategy: Warn once per component.\n    // This is difficult to track any other way since component names\n    // are often vague and are likely to collide between 3rd party libraries.\n    // An expand property is probably okay to use here since it's DEV-only,\n    // and will only be set in the event of serious warnings.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    let warningsForRoot;\n    if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {\n      warningsForRoot = {\n        UNSAFE_componentWillMount: [],\n        UNSAFE_componentWillReceiveProps: [],\n        UNSAFE_componentWillUpdate: [],\n      };\n\n      pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);\n    } else {\n      warningsForRoot = pendingUnsafeLifecycleWarnings.get(strictRoot);\n    }\n\n    const unsafeLifecycles = [];\n    if (\n      (typeof instance.componentWillMount === 'function' &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true) ||\n      typeof instance.UNSAFE_componentWillMount === 'function'\n    ) {\n      unsafeLifecycles.push('UNSAFE_componentWillMount');\n    }\n    if (\n      (typeof instance.componentWillReceiveProps === 'function' &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !==\n          true) ||\n      typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n    ) {\n      unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');\n    }\n    if (\n      (typeof instance.componentWillUpdate === 'function' &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true) ||\n      typeof instance.UNSAFE_componentWillUpdate === 'function'\n    ) {\n      unsafeLifecycles.push('UNSAFE_componentWillUpdate');\n    }\n\n    if (unsafeLifecycles.length > 0) {\n      unsafeLifecycles.forEach(lifecycle => {\n        ((warningsForRoot: any): LifecycleToComponentsMap)[lifecycle].push(\n          fiber,\n        );\n      });\n    }\n  };\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    const strictRoot = findStrictRoot(fiber);\n    if (strictRoot === null) {\n      warningWithoutStack(\n        false,\n        'Expected to find a StrictMode component in a strict mode tree. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n      return;\n    }\n\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    let warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (\n      fiber.type.contextTypes != null ||\n      fiber.type.childContextTypes != null ||\n      (instance !== null && typeof instance.getChildContext === 'function')\n    ) {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = () => {\n    ((pendingLegacyContextWarning: any): FiberToFiberComponentsMap).forEach(\n      (fiberArray: FiberArray, strictRoot) => {\n        const uniqueNames = new Set();\n        fiberArray.forEach(fiber => {\n          uniqueNames.add(getComponentName(fiber.type) || 'Component');\n          didWarnAboutLegacyContext.add(fiber.type);\n        });\n\n        const sortedNames = setToSortedString(uniqueNames);\n        const strictRootComponentStack = getStackByFiberInDevAndProd(\n          strictRoot,\n        );\n\n        warningWithoutStack(\n          false,\n          'Legacy context API has been detected within a strict-mode tree: %s' +\n            '\\n\\nPlease update the following components: %s' +\n            '\\n\\nLearn more about this warning here:' +\n            '\\nhttps://fb.me/react-strict-mode-warnings',\n          strictRootComponentStack,\n          sortedNames,\n        );\n      },\n    );\n  };\n}\n\nexport default ReactStrictModeWarnings;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\n\nimport {NoWork} from './ReactFiberExpirationTime';\n\n// TODO: Offscreen updates should never suspend. However, a promise that\n// suspended inside an offscreen subtree should be able to ping at the priority\n// of the outer render.\n\nexport function markPendingPriorityLevel(\n  root: FiberRoot,\n  expirationTime: ExpirationTime,\n): void {\n  // If there's a gap between completing a failed root and retrying it,\n  // additional updates may be scheduled. Clear `didError`, in case the update\n  // is sufficient to fix the error.\n  root.didError = false;\n\n  // Update the latest and earliest pending times\n  const earliestPendingTime = root.earliestPendingTime;\n  if (earliestPendingTime === NoWork) {\n    // No other pending updates.\n    root.earliestPendingTime = root.latestPendingTime = expirationTime;\n  } else {\n    if (earliestPendingTime < expirationTime) {\n      // This is the earliest pending update.\n      root.earliestPendingTime = expirationTime;\n    } else {\n      const latestPendingTime = root.latestPendingTime;\n      if (latestPendingTime > expirationTime) {\n        // This is the latest pending update\n        root.latestPendingTime = expirationTime;\n      }\n    }\n  }\n  findNextExpirationTimeToWorkOn(expirationTime, root);\n}\n\nexport function markCommittedPriorityLevels(\n  root: FiberRoot,\n  earliestRemainingTime: ExpirationTime,\n): void {\n  root.didError = false;\n\n  if (earliestRemainingTime === NoWork) {\n    // Fast path. There's no remaining work. Clear everything.\n    root.earliestPendingTime = NoWork;\n    root.latestPendingTime = NoWork;\n    root.earliestSuspendedTime = NoWork;\n    root.latestSuspendedTime = NoWork;\n    root.latestPingedTime = NoWork;\n    findNextExpirationTimeToWorkOn(NoWork, root);\n    return;\n  }\n\n  if (earliestRemainingTime < root.latestPingedTime) {\n    root.latestPingedTime = NoWork;\n  }\n\n  // Let's see if the previous latest known pending level was just flushed.\n  const latestPendingTime = root.latestPendingTime;\n  if (latestPendingTime !== NoWork) {\n    if (latestPendingTime > earliestRemainingTime) {\n      // We've flushed all the known pending levels.\n      root.earliestPendingTime = root.latestPendingTime = NoWork;\n    } else {\n      const earliestPendingTime = root.earliestPendingTime;\n      if (earliestPendingTime > earliestRemainingTime) {\n        // We've flushed the earliest known pending level. Set this to the\n        // latest pending time.\n        root.earliestPendingTime = root.latestPendingTime;\n      }\n    }\n  }\n\n  // Now let's handle the earliest remaining level in the whole tree. We need to\n  // decide whether to treat it as a pending level or as suspended. Check\n  // it falls within the range of known suspended levels.\n\n  const earliestSuspendedTime = root.earliestSuspendedTime;\n  if (earliestSuspendedTime === NoWork) {\n    // There's no suspended work. Treat the earliest remaining level as a\n    // pending level.\n    markPendingPriorityLevel(root, earliestRemainingTime);\n    findNextExpirationTimeToWorkOn(NoWork, root);\n    return;\n  }\n\n  const latestSuspendedTime = root.latestSuspendedTime;\n  if (earliestRemainingTime < latestSuspendedTime) {\n    // The earliest remaining level is later than all the suspended work. That\n    // means we've flushed all the suspended work.\n    root.earliestSuspendedTime = NoWork;\n    root.latestSuspendedTime = NoWork;\n    root.latestPingedTime = NoWork;\n\n    // There's no suspended work. Treat the earliest remaining level as a\n    // pending level.\n    markPendingPriorityLevel(root, earliestRemainingTime);\n    findNextExpirationTimeToWorkOn(NoWork, root);\n    return;\n  }\n\n  if (earliestRemainingTime > earliestSuspendedTime) {\n    // The earliest remaining time is earlier than all the suspended work.\n    // Treat it as a pending update.\n    markPendingPriorityLevel(root, earliestRemainingTime);\n    findNextExpirationTimeToWorkOn(NoWork, root);\n    return;\n  }\n\n  // The earliest remaining time falls within the range of known suspended\n  // levels. We should treat this as suspended work.\n  findNextExpirationTimeToWorkOn(NoWork, root);\n}\n\nexport function hasLowerPriorityWork(\n  root: FiberRoot,\n  erroredExpirationTime: ExpirationTime,\n): boolean {\n  const latestPendingTime = root.latestPendingTime;\n  const latestSuspendedTime = root.latestSuspendedTime;\n  const latestPingedTime = root.latestPingedTime;\n  return (\n    (latestPendingTime !== NoWork &&\n      latestPendingTime < erroredExpirationTime) ||\n    (latestSuspendedTime !== NoWork &&\n      latestSuspendedTime < erroredExpirationTime) ||\n    (latestPingedTime !== NoWork && latestPingedTime < erroredExpirationTime)\n  );\n}\n\nexport function isPriorityLevelSuspended(\n  root: FiberRoot,\n  expirationTime: ExpirationTime,\n): boolean {\n  const earliestSuspendedTime = root.earliestSuspendedTime;\n  const latestSuspendedTime = root.latestSuspendedTime;\n  return (\n    earliestSuspendedTime !== NoWork &&\n    expirationTime <= earliestSuspendedTime &&\n    expirationTime >= latestSuspendedTime\n  );\n}\n\nexport function markSuspendedPriorityLevel(\n  root: FiberRoot,\n  suspendedTime: ExpirationTime,\n): void {\n  root.didError = false;\n  clearPing(root, suspendedTime);\n\n  // First, check the known pending levels and update them if needed.\n  const earliestPendingTime = root.earliestPendingTime;\n  const latestPendingTime = root.latestPendingTime;\n  if (earliestPendingTime === suspendedTime) {\n    if (latestPendingTime === suspendedTime) {\n      // Both known pending levels were suspended. Clear them.\n      root.earliestPendingTime = root.latestPendingTime = NoWork;\n    } else {\n      // The earliest pending level was suspended. Clear by setting it to the\n      // latest pending level.\n      root.earliestPendingTime = latestPendingTime;\n    }\n  } else if (latestPendingTime === suspendedTime) {\n    // The latest pending level was suspended. Clear by setting it to the\n    // latest pending level.\n    root.latestPendingTime = earliestPendingTime;\n  }\n\n  // Finally, update the known suspended levels.\n  const earliestSuspendedTime = root.earliestSuspendedTime;\n  const latestSuspendedTime = root.latestSuspendedTime;\n  if (earliestSuspendedTime === NoWork) {\n    // No other suspended levels.\n    root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;\n  } else {\n    if (earliestSuspendedTime < suspendedTime) {\n      // This is the earliest suspended level.\n      root.earliestSuspendedTime = suspendedTime;\n    } else if (latestSuspendedTime > suspendedTime) {\n      // This is the latest suspended level\n      root.latestSuspendedTime = suspendedTime;\n    }\n  }\n\n  findNextExpirationTimeToWorkOn(suspendedTime, root);\n}\n\nexport function markPingedPriorityLevel(\n  root: FiberRoot,\n  pingedTime: ExpirationTime,\n): void {\n  root.didError = false;\n\n  // TODO: When we add back resuming, we need to ensure the progressed work\n  // is thrown out and not reused during the restarted render. One way to\n  // invalidate the progressed work is to restart at expirationTime + 1.\n  const latestPingedTime = root.latestPingedTime;\n  if (latestPingedTime === NoWork || latestPingedTime > pingedTime) {\n    root.latestPingedTime = pingedTime;\n  }\n  findNextExpirationTimeToWorkOn(pingedTime, root);\n}\n\nfunction clearPing(root, completedTime) {\n  const latestPingedTime = root.latestPingedTime;\n  if (latestPingedTime >= completedTime) {\n    root.latestPingedTime = NoWork;\n  }\n}\n\nexport function findEarliestOutstandingPriorityLevel(\n  root: FiberRoot,\n  renderExpirationTime: ExpirationTime,\n): ExpirationTime {\n  let earliestExpirationTime = renderExpirationTime;\n\n  const earliestPendingTime = root.earliestPendingTime;\n  const earliestSuspendedTime = root.earliestSuspendedTime;\n  if (earliestPendingTime > earliestExpirationTime) {\n    earliestExpirationTime = earliestPendingTime;\n  }\n  if (earliestSuspendedTime > earliestExpirationTime) {\n    earliestExpirationTime = earliestSuspendedTime;\n  }\n  return earliestExpirationTime;\n}\n\nexport function didExpireAtExpirationTime(\n  root: FiberRoot,\n  currentTime: ExpirationTime,\n): void {\n  const expirationTime = root.expirationTime;\n  if (expirationTime !== NoWork && currentTime <= expirationTime) {\n    // The root has expired. Flush all work up to the current time.\n    root.nextExpirationTimeToWorkOn = currentTime;\n  }\n}\n\nfunction findNextExpirationTimeToWorkOn(completedExpirationTime, root) {\n  const earliestSuspendedTime = root.earliestSuspendedTime;\n  const latestSuspendedTime = root.latestSuspendedTime;\n  const earliestPendingTime = root.earliestPendingTime;\n  const latestPingedTime = root.latestPingedTime;\n\n  // Work on the earliest pending time. Failing that, work on the latest\n  // pinged time.\n  let nextExpirationTimeToWorkOn =\n    earliestPendingTime !== NoWork ? earliestPendingTime : latestPingedTime;\n\n  // If there is no pending or pinged work, check if there's suspended work\n  // that's lower priority than what we just completed.\n  if (\n    nextExpirationTimeToWorkOn === NoWork &&\n    (completedExpirationTime === NoWork ||\n      latestSuspendedTime < completedExpirationTime)\n  ) {\n    // The lowest priority suspended work is the work most likely to be\n    // committed next. Let's start rendering it again, so that if it times out,\n    // it's ready to commit.\n    nextExpirationTimeToWorkOn = latestSuspendedTime;\n  }\n\n  let expirationTime = nextExpirationTimeToWorkOn;\n  if (expirationTime !== NoWork && earliestSuspendedTime > expirationTime) {\n    // Expire using the earliest known expiration time.\n    expirationTime = earliestSuspendedTime;\n  }\n\n  root.nextExpirationTimeToWorkOn = nextExpirationTimeToWorkOn;\n  root.expirationTime = expirationTime;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent, Thenable} from 'shared/ReactLazyComponent';\n\nimport {Resolved, Rejected, Pending} from 'shared/ReactLazyComponent';\nimport warning from 'shared/warning';\n\nexport function resolveDefaultProps(Component: any, baseProps: Object): Object {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    const props = Object.assign({}, baseProps);\n    const defaultProps = Component.defaultProps;\n    for (let propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n    return props;\n  }\n  return baseProps;\n}\n\nexport function readLazyComponentType<T>(lazyComponent: LazyComponent<T>): T {\n  const status = lazyComponent._status;\n  const result = lazyComponent._result;\n  switch (status) {\n    case Resolved: {\n      const Component: T = result;\n      return Component;\n    }\n    case Rejected: {\n      const error: mixed = result;\n      throw error;\n    }\n    case Pending: {\n      const thenable: Thenable<T, mixed> = result;\n      throw thenable;\n    }\n    default: {\n      lazyComponent._status = Pending;\n      const ctor = lazyComponent._ctor;\n      const thenable = ctor();\n      thenable.then(\n        moduleObject => {\n          if (lazyComponent._status === Pending) {\n            const defaultExport = moduleObject.default;\n            if (__DEV__) {\n              if (defaultExport === undefined) {\n                warning(\n                  false,\n                  'lazy: Expected the result of a dynamic import() call. ' +\n                    'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n                    \"const MyComponent = lazy(() => import('./MyComponent'))\",\n                  moduleObject,\n                );\n              }\n            }\n            lazyComponent._status = Resolved;\n            lazyComponent._result = defaultExport;\n          }\n        },\n        error => {\n          if (lazyComponent._status === Pending) {\n            lazyComponent._status = Rejected;\n            lazyComponent._result = error;\n          }\n        },\n      );\n      // Handle synchronous thenables.\n      switch (lazyComponent._status) {\n        case Resolved:\n          return lazyComponent._result;\n        case Rejected:\n          throw lazyComponent._result;\n      }\n      lazyComponent._result = thenable;\n      throw thenable;\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\n\nimport React from 'react';\nimport {Update, Snapshot} from 'shared/ReactSideEffectTags';\nimport {\n  debugRenderPhaseSideEffects,\n  debugRenderPhaseSideEffectsForStrictMode,\n  warnAboutDeprecatedLifecycles,\n} from 'shared/ReactFeatureFlags';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings';\nimport {isMounted} from 'react-reconciler/reflection';\nimport {get as getInstance, set as setInstance} from 'shared/ReactInstanceMap';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport {REACT_CONTEXT_TYPE, REACT_PROVIDER_TYPE} from 'shared/ReactSymbols';\n\nimport {startPhaseTimer, stopPhaseTimer} from './ReactDebugFiberPerf';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent';\nimport {StrictMode} from './ReactTypeOfMode';\n\nimport {\n  enqueueUpdate,\n  processUpdateQueue,\n  checkHasForceUpdateAfterProcessing,\n  resetHasForceUpdateBeforeProcessing,\n  createUpdate,\n  ReplaceState,\n  ForceUpdate,\n} from './ReactUpdateQueue';\nimport {NoWork} from './ReactFiberExpirationTime';\nimport {\n  cacheContext,\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged,\n  emptyContextObject,\n} from './ReactFiberContext';\nimport {readContext} from './ReactFiberNewContext';\nimport {\n  requestCurrentTime,\n  computeExpirationForFiber,\n  scheduleWork,\n  flushPassiveEffects,\n} from './ReactFiberScheduler';\n\nconst fakeInternalInstance = {};\nconst isArray = Array.isArray;\n\n// React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\nexport const emptyRefsObject = new React.Component().refs;\n\nlet didWarnAboutStateAssignmentForComponent;\nlet didWarnAboutUninitializedState;\nlet didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nlet didWarnAboutLegacyLifecyclesAndDerivedState;\nlet didWarnAboutUndefinedDerivedState;\nlet warnOnUndefinedDerivedState;\nlet warnOnInvalidCallback;\nlet didWarnAboutDirectlyAssigningPropsToState;\nlet didWarnAboutContextTypeAndContextTypes;\nlet didWarnAboutInvalidateContextType;\n\nif (__DEV__) {\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n\n  const didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function(callback: mixed, callerName: string) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n    const key = `${callerName}_${(callback: any)}`;\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n      warningWithoutStack(\n        false,\n        '%s(...): Expected the last optional `callback` argument to be a ' +\n          'function. Instead received: %s.',\n        callerName,\n        callback,\n      );\n    }\n  };\n\n  warnOnUndefinedDerivedState = function(type, partialState) {\n    if (partialState === undefined) {\n      const componentName = getComponentName(type) || 'Component';\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n        warningWithoutStack(\n          false,\n          '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' +\n            'You have returned undefined.',\n          componentName,\n        );\n      }\n    }\n  };\n\n  // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n    enumerable: false,\n    value: function() {\n      invariant(\n        false,\n        '_processChildContext is not available in React 16+. This likely ' +\n          'means you have multiple copies of React and are attempting to nest ' +\n          'a React 15 tree inside a React 16 tree using ' +\n          \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" +\n          'to make sure you have only one copy of React (and ideally, switch ' +\n          'to ReactDOM.createPortal).',\n      );\n    },\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nexport function applyDerivedStateFromProps(\n  workInProgress: Fiber,\n  ctor: any,\n  getDerivedStateFromProps: (props: any, state: any) => any,\n  nextProps: any,\n) {\n  const prevState = workInProgress.memoizedState;\n\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffects ||\n      (debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode)\n    ) {\n      // Invoke the function an extra time to help detect side-effects.\n      getDerivedStateFromProps(nextProps, prevState);\n    }\n  }\n\n  const partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  if (__DEV__) {\n    warnOnUndefinedDerivedState(ctor, partialState);\n  }\n  // Merge the partial state and the previous state.\n  const memoizedState =\n    partialState === null || partialState === undefined\n      ? prevState\n      : Object.assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState;\n\n  // Once the update queue is empty, persist the derived state onto the\n  // base state.\n  const updateQueue = workInProgress.updateQueue;\n  if (updateQueue !== null && workInProgress.expirationTime === NoWork) {\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nconst classComponentUpdater = {\n  isMounted,\n  enqueueSetState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const currentTime = requestCurrentTime();\n    const expirationTime = computeExpirationForFiber(currentTime, fiber);\n\n    const update = createUpdate(expirationTime);\n    update.payload = payload;\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n      update.callback = callback;\n    }\n\n    flushPassiveEffects();\n    enqueueUpdate(fiber, update);\n    scheduleWork(fiber, expirationTime);\n  },\n  enqueueReplaceState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const currentTime = requestCurrentTime();\n    const expirationTime = computeExpirationForFiber(currentTime, fiber);\n\n    const update = createUpdate(expirationTime);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'replaceState');\n      }\n      update.callback = callback;\n    }\n\n    flushPassiveEffects();\n    enqueueUpdate(fiber, update);\n    scheduleWork(fiber, expirationTime);\n  },\n  enqueueForceUpdate(inst, callback) {\n    const fiber = getInstance(inst);\n    const currentTime = requestCurrentTime();\n    const expirationTime = computeExpirationForFiber(currentTime, fiber);\n\n    const update = createUpdate(expirationTime);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'forceUpdate');\n      }\n      update.callback = callback;\n    }\n\n    flushPassiveEffects();\n    enqueueUpdate(fiber, update);\n    scheduleWork(fiber, expirationTime);\n  },\n};\n\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext,\n) {\n  const instance = workInProgress.stateNode;\n  if (typeof instance.shouldComponentUpdate === 'function') {\n    startPhaseTimer(workInProgress, 'shouldComponentUpdate');\n    const shouldUpdate = instance.shouldComponentUpdate(\n      newProps,\n      newState,\n      nextContext,\n    );\n    stopPhaseTimer();\n\n    if (__DEV__) {\n      warningWithoutStack(\n        shouldUpdate !== undefined,\n        '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n          'boolean value. Make sure to return true or false.',\n        getComponentName(ctor) || 'Component',\n      );\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return (\n      !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n    );\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress: Fiber, ctor: any, newProps: any) {\n  const instance = workInProgress.stateNode;\n  if (__DEV__) {\n    const name = getComponentName(ctor) || 'Component';\n    const renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        warningWithoutStack(\n          false,\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: did you accidentally return an object from the constructor?',\n          name,\n        );\n      } else {\n        warningWithoutStack(\n          false,\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: you may have forgotten to define `render`.',\n          name,\n        );\n      }\n    }\n\n    const noGetInitialStateOnES6 =\n      !instance.getInitialState ||\n      instance.getInitialState.isReactClassApproved ||\n      instance.state;\n    warningWithoutStack(\n      noGetInitialStateOnES6,\n      'getInitialState was defined on %s, a plain JavaScript class. ' +\n        'This is only supported for classes created using React.createClass. ' +\n        'Did you mean to define a state property instead?',\n      name,\n    );\n    const noGetDefaultPropsOnES6 =\n      !instance.getDefaultProps ||\n      instance.getDefaultProps.isReactClassApproved;\n    warningWithoutStack(\n      noGetDefaultPropsOnES6,\n      'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n        'This is only supported for classes created using React.createClass. ' +\n        'Use a static property to define defaultProps instead.',\n      name,\n    );\n    const noInstancePropTypes = !instance.propTypes;\n    warningWithoutStack(\n      noInstancePropTypes,\n      'propTypes was defined as an instance property on %s. Use a static ' +\n        'property to define propTypes instead.',\n      name,\n    );\n    const noInstanceContextType = !instance.contextType;\n    warningWithoutStack(\n      noInstanceContextType,\n      'contextType was defined as an instance property on %s. Use a static ' +\n        'property to define contextType instead.',\n      name,\n    );\n    const noInstanceContextTypes = !instance.contextTypes;\n    warningWithoutStack(\n      noInstanceContextTypes,\n      'contextTypes was defined as an instance property on %s. Use a static ' +\n        'property to define contextTypes instead.',\n      name,\n    );\n\n    if (\n      ctor.contextType &&\n      ctor.contextTypes &&\n      !didWarnAboutContextTypeAndContextTypes.has(ctor)\n    ) {\n      didWarnAboutContextTypeAndContextTypes.add(ctor);\n      warningWithoutStack(\n        false,\n        '%s declares both contextTypes and contextType static properties. ' +\n          'The legacy contextTypes property will be ignored.',\n        name,\n      );\n    }\n\n    const noComponentShouldUpdate =\n      typeof instance.componentShouldUpdate !== 'function';\n    warningWithoutStack(\n      noComponentShouldUpdate,\n      '%s has a method called ' +\n        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n        'The name is phrased as a question because the function is ' +\n        'expected to return a value.',\n      name,\n    );\n    if (\n      ctor.prototype &&\n      ctor.prototype.isPureReactComponent &&\n      typeof instance.shouldComponentUpdate !== 'undefined'\n    ) {\n      warningWithoutStack(\n        false,\n        '%s has a method called shouldComponentUpdate(). ' +\n          'shouldComponentUpdate should not be used when extending React.PureComponent. ' +\n          'Please extend React.Component if shouldComponentUpdate is used.',\n        getComponentName(ctor) || 'A pure component',\n      );\n    }\n    const noComponentDidUnmount =\n      typeof instance.componentDidUnmount !== 'function';\n    warningWithoutStack(\n      noComponentDidUnmount,\n      '%s has a method called ' +\n        'componentDidUnmount(). But there is no such lifecycle method. ' +\n        'Did you mean componentWillUnmount()?',\n      name,\n    );\n    const noComponentDidReceiveProps =\n      typeof instance.componentDidReceiveProps !== 'function';\n    warningWithoutStack(\n      noComponentDidReceiveProps,\n      '%s has a method called ' +\n        'componentDidReceiveProps(). But there is no such lifecycle method. ' +\n        'If you meant to update the state in response to changing props, ' +\n        'use componentWillReceiveProps(). If you meant to fetch data or ' +\n        'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',\n      name,\n    );\n    const noComponentWillRecieveProps =\n      typeof instance.componentWillRecieveProps !== 'function';\n    warningWithoutStack(\n      noComponentWillRecieveProps,\n      '%s has a method called ' +\n        'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n      name,\n    );\n    const noUnsafeComponentWillRecieveProps =\n      typeof instance.UNSAFE_componentWillRecieveProps !== 'function';\n    warningWithoutStack(\n      noUnsafeComponentWillRecieveProps,\n      '%s has a method called ' +\n        'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',\n      name,\n    );\n    const hasMutatedProps = instance.props !== newProps;\n    warningWithoutStack(\n      instance.props === undefined || !hasMutatedProps,\n      '%s(...): When calling super() in `%s`, make sure to pass ' +\n        \"up the same props that your component's constructor was passed.\",\n      name,\n      name,\n    );\n    const noInstanceDefaultProps = !instance.defaultProps;\n    warningWithoutStack(\n      noInstanceDefaultProps,\n      'Setting defaultProps as an instance property on %s is not supported and will be ignored.' +\n        ' Instead, define defaultProps as a static property on %s.',\n      name,\n      name,\n    );\n\n    if (\n      typeof instance.getSnapshotBeforeUpdate === 'function' &&\n      typeof instance.componentDidUpdate !== 'function' &&\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\n    ) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n      warningWithoutStack(\n        false,\n        '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' +\n          'This component defines getSnapshotBeforeUpdate() only.',\n        getComponentName(ctor),\n      );\n    }\n\n    const noInstanceGetDerivedStateFromProps =\n      typeof instance.getDerivedStateFromProps !== 'function';\n    warningWithoutStack(\n      noInstanceGetDerivedStateFromProps,\n      '%s: getDerivedStateFromProps() is defined as an instance method ' +\n        'and will be ignored. Instead, declare it as a static method.',\n      name,\n    );\n    const noInstanceGetDerivedStateFromCatch =\n      typeof instance.getDerivedStateFromError !== 'function';\n    warningWithoutStack(\n      noInstanceGetDerivedStateFromCatch,\n      '%s: getDerivedStateFromError() is defined as an instance method ' +\n        'and will be ignored. Instead, declare it as a static method.',\n      name,\n    );\n    const noStaticGetSnapshotBeforeUpdate =\n      typeof ctor.getSnapshotBeforeUpdate !== 'function';\n    warningWithoutStack(\n      noStaticGetSnapshotBeforeUpdate,\n      '%s: getSnapshotBeforeUpdate() is defined as a static method ' +\n        'and will be ignored. Instead, declare it as an instance method.',\n      name,\n    );\n    const state = instance.state;\n    if (state && (typeof state !== 'object' || isArray(state))) {\n      warningWithoutStack(\n        false,\n        '%s.state: must be set to an object or null',\n        name,\n      );\n    }\n    if (typeof instance.getChildContext === 'function') {\n      warningWithoutStack(\n        typeof ctor.childContextTypes === 'object',\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n          'use getChildContext().',\n        name,\n      );\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress: Fiber, instance: any): void {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance;\n  // The instance needs access to the fiber so that it can schedule updates\n  setInstance(instance, workInProgress);\n  if (__DEV__) {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  props: any,\n  renderExpirationTime: ExpirationTime,\n): any {\n  let isLegacyContextConsumer = false;\n  let unmaskedContext = emptyContextObject;\n  let context = null;\n  const contextType = ctor.contextType;\n\n  if (__DEV__) {\n    if ('contextType' in ctor) {\n      let isValid =\n        // Allow null for conditional declaration\n        contextType === null ||\n        (contextType !== undefined &&\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\n          contextType._context === undefined); // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n\n        let addendum = '';\n        if (contextType === undefined) {\n          addendum =\n            ' However, it is set to undefined. ' +\n            'This can be caused by a typo or by mixing up named and default imports. ' +\n            'This can also happen due to a circular dependency, so ' +\n            'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum =\n            ' However, it is set to an object with keys {' +\n            Object.keys(contextType).join(', ') +\n            '}.';\n        }\n        warningWithoutStack(\n          false,\n          '%s defines an invalid contextType. ' +\n            'contextType should point to the Context object returned by React.createContext().%s',\n          getComponentName(ctor) || 'Component',\n          addendum,\n        );\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext((contextType: any));\n  } else {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    const contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer =\n      contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer\n      ? getMaskedContext(workInProgress, unmaskedContext)\n      : emptyContextObject;\n  }\n\n  // Instantiate twice to help detect side-effects.\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffects ||\n      (debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode)\n    ) {\n      new ctor(props, context); // eslint-disable-line no-new\n    }\n  }\n\n  const instance = new ctor(props, context);\n  const state = (workInProgress.memoizedState =\n    instance.state !== null && instance.state !== undefined\n      ? instance.state\n      : null);\n  adoptClassInstance(workInProgress, instance);\n\n  if (__DEV__) {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n      const componentName = getComponentName(ctor) || 'Component';\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n        warningWithoutStack(\n          false,\n          '`%s` uses `getDerivedStateFromProps` but its initial state is ' +\n            '%s. This is not recommended. Instead, define the initial state by ' +\n            'assigning an object to `this.state` in the constructor of `%s`. ' +\n            'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',\n          componentName,\n          instance.state === null ? 'null' : 'undefined',\n          componentName,\n        );\n      }\n    }\n\n    // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n    if (\n      typeof ctor.getDerivedStateFromProps === 'function' ||\n      typeof instance.getSnapshotBeforeUpdate === 'function'\n    ) {\n      let foundWillMountName = null;\n      let foundWillReceivePropsName = null;\n      let foundWillUpdateName = null;\n      if (\n        typeof instance.componentWillMount === 'function' &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n      if (\n        typeof instance.componentWillReceiveProps === 'function' &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n      ) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (\n        typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n      ) {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n      if (\n        typeof instance.componentWillUpdate === 'function' &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\n      ) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n      if (\n        foundWillMountName !== null ||\n        foundWillReceivePropsName !== null ||\n        foundWillUpdateName !== null\n      ) {\n        const componentName = getComponentName(ctor) || 'Component';\n        const newApiName =\n          typeof ctor.getDerivedStateFromProps === 'function'\n            ? 'getDerivedStateFromProps()'\n            : 'getSnapshotBeforeUpdate()';\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(componentName);\n          warningWithoutStack(\n            false,\n            'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n              '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' +\n              'The above lifecycles should be removed. Learn more about this warning here:\\n' +\n              'https://fb.me/react-async-component-lifecycle-hooks',\n            componentName,\n            newApiName,\n            foundWillMountName !== null ? `\\n  ${foundWillMountName}` : '',\n            foundWillReceivePropsName !== null\n              ? `\\n  ${foundWillReceivePropsName}`\n              : '',\n            foundWillUpdateName !== null ? `\\n  ${foundWillUpdateName}` : '',\n          );\n        }\n      }\n    }\n  }\n\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  startPhaseTimer(workInProgress, 'componentWillMount');\n  const oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  stopPhaseTimer();\n\n  if (oldState !== instance.state) {\n    if (__DEV__) {\n      warningWithoutStack(\n        false,\n        '%s.componentWillMount(): Assigning directly to this.state is ' +\n          \"deprecated (except inside a component's \" +\n          'constructor). Use setState instead.',\n        getComponentName(workInProgress.type) || 'Component',\n      );\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext,\n) {\n  const oldState = instance.state;\n  startPhaseTimer(workInProgress, 'componentWillReceiveProps');\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n  stopPhaseTimer();\n\n  if (instance.state !== oldState) {\n    if (__DEV__) {\n      const componentName =\n        getComponentName(workInProgress.type) || 'Component';\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n        warningWithoutStack(\n          false,\n          '%s.componentWillReceiveProps(): Assigning directly to ' +\n            \"this.state is deprecated (except inside a component's \" +\n            'constructor). Use setState instead.',\n          componentName,\n        );\n      }\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\n// Invokes the mount life-cycles on a previously never rendered instance.\nfunction mountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderExpirationTime: ExpirationTime,\n): void {\n  if (__DEV__) {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  const instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n\n  const contextType = ctor.contextType;\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else {\n    const unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  if (__DEV__) {\n    if (instance.state === newProps) {\n      const componentName = getComponentName(ctor) || 'Component';\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n        warningWithoutStack(\n          false,\n          '%s: It is not recommended to assign props directly to state ' +\n            \"because updates to props won't be reflected in state. \" +\n            'In most cases, it is better to use props directly.',\n          componentName,\n        );\n      }\n    }\n\n    if (workInProgress.mode & StrictMode) {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\n        workInProgress,\n        instance,\n      );\n\n      ReactStrictModeWarnings.recordLegacyContextWarning(\n        workInProgress,\n        instance,\n      );\n    }\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.recordDeprecationWarnings(\n        workInProgress,\n        instance,\n      );\n    }\n  }\n\n  let updateQueue = workInProgress.updateQueue;\n  if (updateQueue !== null) {\n    processUpdateQueue(\n      workInProgress,\n      updateQueue,\n      newProps,\n      instance,\n      renderExpirationTime,\n    );\n    instance.state = workInProgress.memoizedState;\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    instance.state = workInProgress.memoizedState;\n  }\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    typeof ctor.getDerivedStateFromProps !== 'function' &&\n    typeof instance.getSnapshotBeforeUpdate !== 'function' &&\n    (typeof instance.UNSAFE_componentWillMount === 'function' ||\n      typeof instance.componentWillMount === 'function')\n  ) {\n    callComponentWillMount(workInProgress, instance);\n    // If we had additional state updates during this life-cycle, let's\n    // process them now.\n    updateQueue = workInProgress.updateQueue;\n    if (updateQueue !== null) {\n      processUpdateQueue(\n        workInProgress,\n        updateQueue,\n        newProps,\n        instance,\n        renderExpirationTime,\n      );\n      instance.state = workInProgress.memoizedState;\n    }\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    workInProgress.effectTag |= Update;\n  }\n}\n\nfunction resumeMountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderExpirationTime: ExpirationTime,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  const oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    const nextLegacyUnmaskedContext = getUnmaskedContext(\n      workInProgress,\n      ctor,\n      true,\n    );\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  let updateQueue = workInProgress.updateQueue;\n  if (updateQueue !== null) {\n    processUpdateQueue(\n      workInProgress,\n      updateQueue,\n      newProps,\n      instance,\n      renderExpirationTime,\n    );\n    newState = workInProgress.memoizedState;\n  }\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.effectTag |= Update;\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillMount === 'function' ||\n        typeof instance.componentWillMount === 'function')\n    ) {\n      startPhaseTimer(workInProgress, 'componentWillMount');\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n      stopPhaseTimer();\n    }\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.effectTag |= Update;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      workInProgress.effectTag |= Update;\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\n// Invokes the update life-cycles and returns false if it shouldn't rerender.\nfunction updateClassInstance(\n  current: Fiber,\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderExpirationTime: ExpirationTime,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  const oldProps = workInProgress.memoizedProps;\n  instance.props =\n    workInProgress.type === workInProgress.elementType\n      ? oldProps\n      : resolveDefaultProps(workInProgress.type, oldProps);\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    const nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  let updateQueue = workInProgress.updateQueue;\n  if (updateQueue !== null) {\n    processUpdateQueue(\n      workInProgress,\n      updateQueue,\n      newProps,\n      instance,\n      renderExpirationTime,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        oldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.effectTag |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        oldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.effectTag |= Snapshot;\n      }\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillUpdate === 'function' ||\n        typeof instance.componentWillUpdate === 'function')\n    ) {\n      startPhaseTimer(workInProgress, 'componentWillUpdate');\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n      stopPhaseTimer();\n    }\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.effectTag |= Update;\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.effectTag |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        oldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.effectTag |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        oldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.effectTag |= Snapshot;\n      }\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\nexport {\n  adoptClassInstance,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {ReactPortal} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\n\nimport getComponentName from 'shared/getComponentName';\nimport {Placement, Deletion} from 'shared/ReactSideEffectTags';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n} from 'shared/ReactSymbols';\nimport {\n  FunctionComponent,\n  ClassComponent,\n  HostText,\n  HostPortal,\n  Fragment,\n} from 'shared/ReactWorkTags';\nimport invariant from 'shared/invariant';\nimport warning from 'shared/warning';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nimport {\n  createWorkInProgress,\n  createFiberFromElement,\n  createFiberFromFragment,\n  createFiberFromText,\n  createFiberFromPortal,\n} from './ReactFiber';\nimport {emptyRefsObject} from './ReactFiberClassComponent';\nimport {\n  getCurrentFiberStackInDev,\n  getStackByFiberInDevAndProd,\n} from './ReactCurrentFiber';\nimport {StrictMode} from './ReactTypeOfMode';\n\nlet didWarnAboutMaps;\nlet didWarnAboutGenerators;\nlet didWarnAboutStringRefInStrictMode;\nlet ownerHasKeyUseWarning;\nlet ownerHasFunctionTypeWarning;\nlet warnForMissingKey = (child: mixed) => {};\n\nif (__DEV__) {\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefInStrictMode = {};\n\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = (child: mixed) => {\n    if (child === null || typeof child !== 'object') {\n      return;\n    }\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n    invariant(\n      typeof child._store === 'object',\n      'React Component in warnForMissingKey should have a _store. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n    child._store.validated = true;\n\n    const currentComponentErrorInfo =\n      'Each child in a list should have a unique ' +\n      '\"key\" prop. See https://fb.me/react-warning-keys for ' +\n      'more information.' +\n      getCurrentFiberStackInDev();\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n    warning(\n      false,\n      'Each child in a list should have a unique ' +\n        '\"key\" prop. See https://fb.me/react-warning-keys for ' +\n        'more information.',\n    );\n  };\n}\n\nconst isArray = Array.isArray;\n\nfunction coerceRef(\n  returnFiber: Fiber,\n  current: Fiber | null,\n  element: ReactElement,\n) {\n  let mixedRef = element.ref;\n  if (\n    mixedRef !== null &&\n    typeof mixedRef !== 'function' &&\n    typeof mixedRef !== 'object'\n  ) {\n    if (__DEV__) {\n      if (returnFiber.mode & StrictMode) {\n        const componentName = getComponentName(returnFiber.type) || 'Component';\n        if (!didWarnAboutStringRefInStrictMode[componentName]) {\n          warningWithoutStack(\n            false,\n            'A string ref, \"%s\", has been found within a strict mode tree. ' +\n              'String refs are a source of potential bugs and should be avoided. ' +\n              'We recommend using createRef() instead.' +\n              '\\n%s' +\n              '\\n\\nLearn more about using refs safely here:' +\n              '\\nhttps://fb.me/react-strict-mode-string-ref',\n            mixedRef,\n            getStackByFiberInDevAndProd(returnFiber),\n          );\n          didWarnAboutStringRefInStrictMode[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      const owner: ?Fiber = (element._owner: any);\n      let inst;\n      if (owner) {\n        const ownerFiber = ((owner: any): Fiber);\n        invariant(\n          ownerFiber.tag === ClassComponent,\n          'Function components cannot have refs. ' +\n            'Did you mean to use React.forwardRef()?',\n        );\n        inst = ownerFiber.stateNode;\n      }\n      invariant(\n        inst,\n        'Missing owner for string ref %s. This error is likely caused by a ' +\n          'bug in React. Please file an issue.',\n        mixedRef,\n      );\n      const stringRef = '' + mixedRef;\n      // Check if previous string ref matches new string ref\n      if (\n        current !== null &&\n        current.ref !== null &&\n        typeof current.ref === 'function' &&\n        current.ref._stringRef === stringRef\n      ) {\n        return current.ref;\n      }\n      const ref = function(value) {\n        let refs = inst.refs;\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = inst.refs = {};\n        }\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      invariant(\n        typeof mixedRef === 'string',\n        'Expected ref to be a function, a string, an object returned by React.createRef(), or null.',\n      );\n      invariant(\n        element._owner,\n        'Element ref was specified as a string (%s) but no owner was set. This could happen for one of' +\n          ' the following reasons:\\n' +\n          '1. You may be adding a ref to a function component\\n' +\n          \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" +\n          '3. You have multiple copies of React loaded\\n' +\n          'See https://fb.me/react-refs-must-have-owner for more information.',\n        mixedRef,\n      );\n    }\n  }\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber: Fiber, newChild: Object) {\n  if (returnFiber.type !== 'textarea') {\n    let addendum = '';\n    if (__DEV__) {\n      addendum =\n        ' If you meant to render a collection of children, use an array ' +\n        'instead.' +\n        getCurrentFiberStackInDev();\n    }\n    invariant(\n      false,\n      'Objects are not valid as a React child (found: %s).%s',\n      Object.prototype.toString.call(newChild) === '[object Object]'\n        ? 'object with keys {' + Object.keys(newChild).join(', ') + '}'\n        : newChild,\n      addendum,\n    );\n  }\n}\n\nfunction warnOnFunctionType() {\n  const currentComponentErrorInfo =\n    'Functions are not valid as a React child. This may happen if ' +\n    'you return a Component instead of <Component /> from render. ' +\n    'Or maybe you meant to call this function rather than return it.' +\n    getCurrentFiberStackInDev();\n\n  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;\n\n  warning(\n    false,\n    'Functions are not valid as a React child. This may happen if ' +\n      'you return a Component instead of <Component /> from render. ' +\n      'Or maybe you meant to call this function rather than return it.',\n  );\n}\n\n// This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber: Fiber, childToDelete: Fiber): void {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n    // Deletions are added in reversed order so we add it to the front.\n    // At this point, the return fiber's effect list is empty except for\n    // deletions, so we can just append the deletion to the list. The remaining\n    // effects aren't added until the complete phase. Once we implement\n    // resuming, this may not be true.\n    const last = returnFiber.lastEffect;\n    if (last !== null) {\n      last.nextEffect = childToDelete;\n      returnFiber.lastEffect = childToDelete;\n    } else {\n      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n    }\n    childToDelete.nextEffect = null;\n    childToDelete.effectTag = Deletion;\n  }\n\n  function deleteRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n  ): null {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    }\n\n    // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n    let childToDelete = currentFirstChild;\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n    return null;\n  }\n\n  function mapRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber,\n  ): Map<string | number, Fiber> {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    const existingChildren: Map<string | number, Fiber> = new Map();\n\n    let existingChild = currentFirstChild;\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n      existingChild = existingChild.sibling;\n    }\n    return existingChildren;\n  }\n\n  function useFiber(\n    fiber: Fiber,\n    pendingProps: mixed,\n    expirationTime: ExpirationTime,\n  ): Fiber {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    const clone = createWorkInProgress(fiber, pendingProps, expirationTime);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(\n    newFiber: Fiber,\n    lastPlacedIndex: number,\n    newIndex: number,\n  ): number {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return lastPlacedIndex;\n    }\n    const current = newFiber.alternate;\n    if (current !== null) {\n      const oldIndex = current.index;\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.effectTag = Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.effectTag = Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber: Fiber): Fiber {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.effectTag = Placement;\n    }\n    return newFiber;\n  }\n\n  function updateTextNode(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    textContent: string,\n    expirationTime: ExpirationTime,\n  ) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      const created = createFiberFromText(\n        textContent,\n        returnFiber.mode,\n        expirationTime,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, textContent, expirationTime);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    element: ReactElement,\n    expirationTime: ExpirationTime,\n  ): Fiber {\n    if (current !== null && current.elementType === element.type) {\n      // Move based on index\n      const existing = useFiber(current, element.props, expirationTime);\n      existing.ref = coerceRef(returnFiber, current, element);\n      existing.return = returnFiber;\n      if (__DEV__) {\n        existing._debugSource = element._source;\n        existing._debugOwner = element._owner;\n      }\n      return existing;\n    } else {\n      // Insert\n      const created = createFiberFromElement(\n        element,\n        returnFiber.mode,\n        expirationTime,\n      );\n      created.ref = coerceRef(returnFiber, current, element);\n      created.return = returnFiber;\n      return created;\n    }\n  }\n\n  function updatePortal(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    portal: ReactPortal,\n    expirationTime: ExpirationTime,\n  ): Fiber {\n    if (\n      current === null ||\n      current.tag !== HostPortal ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    ) {\n      // Insert\n      const created = createFiberFromPortal(\n        portal,\n        returnFiber.mode,\n        expirationTime,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, portal.children || [], expirationTime);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    fragment: Iterable<*>,\n    expirationTime: ExpirationTime,\n    key: null | string,\n  ): Fiber {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      const created = createFiberFromFragment(\n        fragment,\n        returnFiber.mode,\n        expirationTime,\n        key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, fragment, expirationTime);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(\n    returnFiber: Fiber,\n    newChild: any,\n    expirationTime: ExpirationTime,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      const created = createFiberFromText(\n        '' + newChild,\n        returnFiber.mode,\n        expirationTime,\n      );\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const created = createFiberFromElement(\n            newChild,\n            returnFiber.mode,\n            expirationTime,\n          );\n          created.ref = coerceRef(returnFiber, null, newChild);\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_PORTAL_TYPE: {\n          const created = createFiberFromPortal(\n            newChild,\n            returnFiber.mode,\n            expirationTime,\n          );\n          created.return = returnFiber;\n          return created;\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const created = createFiberFromFragment(\n          newChild,\n          returnFiber.mode,\n          expirationTime,\n          null,\n        );\n        created.return = returnFiber;\n        return created;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(\n    returnFiber: Fiber,\n    oldFiber: Fiber | null,\n    newChild: any,\n    expirationTime: ExpirationTime,\n  ): Fiber | null {\n    // Update the fiber if the keys match, otherwise return null.\n\n    const key = oldFiber !== null ? oldFiber.key : null;\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n      return updateTextNode(\n        returnFiber,\n        oldFiber,\n        '' + newChild,\n        expirationTime,\n      );\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          if (newChild.key === key) {\n            if (newChild.type === REACT_FRAGMENT_TYPE) {\n              return updateFragment(\n                returnFiber,\n                oldFiber,\n                newChild.props.children,\n                expirationTime,\n                key,\n              );\n            }\n            return updateElement(\n              returnFiber,\n              oldFiber,\n              newChild,\n              expirationTime,\n            );\n          } else {\n            return null;\n          }\n        }\n        case REACT_PORTAL_TYPE: {\n          if (newChild.key === key) {\n            return updatePortal(\n              returnFiber,\n              oldFiber,\n              newChild,\n              expirationTime,\n            );\n          } else {\n            return null;\n          }\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(\n          returnFiber,\n          oldFiber,\n          newChild,\n          expirationTime,\n          null,\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(\n    existingChildren: Map<string | number, Fiber>,\n    returnFiber: Fiber,\n    newIdx: number,\n    newChild: any,\n    expirationTime: ExpirationTime,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      const matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(\n        returnFiber,\n        matchedFiber,\n        '' + newChild,\n        expirationTime,\n      );\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          if (newChild.type === REACT_FRAGMENT_TYPE) {\n            return updateFragment(\n              returnFiber,\n              matchedFiber,\n              newChild.props.children,\n              expirationTime,\n              newChild.key,\n            );\n          }\n          return updateElement(\n            returnFiber,\n            matchedFiber,\n            newChild,\n            expirationTime,\n          );\n        }\n        case REACT_PORTAL_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          return updatePortal(\n            returnFiber,\n            matchedFiber,\n            newChild,\n            expirationTime,\n          );\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const matchedFiber = existingChildren.get(newIdx) || null;\n        return updateFragment(\n          returnFiber,\n          matchedFiber,\n          newChild,\n          expirationTime,\n          null,\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n  function warnOnInvalidKey(\n    child: mixed,\n    knownKeys: Set<string> | null,\n  ): Set<string> | null {\n    if (__DEV__) {\n      if (typeof child !== 'object' || child === null) {\n        return knownKeys;\n      }\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child);\n          const key = child.key;\n          if (typeof key !== 'string') {\n            break;\n          }\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n          warning(\n            false,\n            'Encountered two children with the same key, `%s`. ' +\n              'Keys should be unique so that components maintain their identity ' +\n              'across updates. Non-unique keys may cause children to be ' +\n              'duplicated and/or omitted — the behavior is unsupported and ' +\n              'could change in a future version.',\n            key,\n          );\n          break;\n        default:\n          break;\n      }\n    }\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildren: Array<*>,\n    expirationTime: ExpirationTime,\n  ): Fiber | null {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n\n    if (__DEV__) {\n      // First, validate keys.\n      let knownKeys = null;\n      for (let i = 0; i < newChildren.length; i++) {\n        const child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys);\n      }\n    }\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        expirationTime,\n      );\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        const newFiber = createChild(\n          returnFiber,\n          newChildren[newIdx],\n          expirationTime,\n        );\n        if (!newFiber) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; newIdx < newChildren.length; newIdx++) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        expirationTime,\n      );\n      if (newFiber) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildrenIterable: Iterable<*>,\n    expirationTime: ExpirationTime,\n  ): Fiber | null {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n\n    const iteratorFn = getIteratorFn(newChildrenIterable);\n    invariant(\n      typeof iteratorFn === 'function',\n      'An object is not an iterable. This error is likely caused by a bug in ' +\n        'React. Please file an issue.',\n    );\n\n    if (__DEV__) {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (\n        typeof Symbol === 'function' &&\n        // $FlowFixMe Flow doesn't know about toStringTag\n        newChildrenIterable[Symbol.toStringTag] === 'Generator'\n      ) {\n        warning(\n          didWarnAboutGenerators,\n          'Using Generators as children is unsupported and will likely yield ' +\n            'unexpected results because enumerating a generator mutates it. ' +\n            'You may convert it to an array with `Array.from()` or the ' +\n            '`[...spread]` operator before rendering. Keep in mind ' +\n            'you might need to polyfill these features for older browsers.',\n        );\n        didWarnAboutGenerators = true;\n      }\n\n      // Warn about using Maps as children\n      if ((newChildrenIterable: any).entries === iteratorFn) {\n        warning(\n          didWarnAboutMaps,\n          'Using Maps as children is unsupported and will likely yield ' +\n            'unexpected results. Convert it to a sequence/iterable of keyed ' +\n            'ReactElements instead.',\n        );\n        didWarnAboutMaps = true;\n      }\n\n      // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n      const newChildren = iteratorFn.call(newChildrenIterable);\n      if (newChildren) {\n        let knownKeys = null;\n        let step = newChildren.next();\n        for (; !step.done; step = newChildren.next()) {\n          const child = step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys);\n        }\n      }\n    }\n\n    const newChildren = iteratorFn.call(newChildrenIterable);\n    invariant(newChildren != null, 'An iterable object provided no iterator.');\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n\n    let step = newChildren.next();\n    for (\n      ;\n      oldFiber !== null && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        step.value,\n        expirationTime,\n      );\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (!oldFiber) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        const newFiber = createChild(returnFiber, step.value, expirationTime);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        step.value,\n        expirationTime,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    textContent: string,\n    expirationTime: ExpirationTime,\n  ): Fiber {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      const existing = useFiber(currentFirstChild, textContent, expirationTime);\n      existing.return = returnFiber;\n      return existing;\n    }\n    // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    const created = createFiberFromText(\n      textContent,\n      returnFiber.mode,\n      expirationTime,\n    );\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    element: ReactElement,\n    expirationTime: ExpirationTime,\n  ): Fiber {\n    const key = element.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (\n          child.tag === Fragment\n            ? element.type === REACT_FRAGMENT_TYPE\n            : child.elementType === element.type\n        ) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          const existing = useFiber(\n            child,\n            element.type === REACT_FRAGMENT_TYPE\n              ? element.props.children\n              : element.props,\n            expirationTime,\n          );\n          existing.ref = coerceRef(returnFiber, child, element);\n          existing.return = returnFiber;\n          if (__DEV__) {\n            existing._debugSource = element._source;\n            existing._debugOwner = element._owner;\n          }\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      const created = createFiberFromFragment(\n        element.props.children,\n        returnFiber.mode,\n        expirationTime,\n        element.key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      const created = createFiberFromElement(\n        element,\n        returnFiber.mode,\n        expirationTime,\n      );\n      created.ref = coerceRef(returnFiber, currentFirstChild, element);\n      created.return = returnFiber;\n      return created;\n    }\n  }\n\n  function reconcileSinglePortal(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    portal: ReactPortal,\n    expirationTime: ExpirationTime,\n  ): Fiber {\n    const key = portal.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (\n          child.tag === HostPortal &&\n          child.stateNode.containerInfo === portal.containerInfo &&\n          child.stateNode.implementation === portal.implementation\n        ) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          const existing = useFiber(\n            child,\n            portal.children || [],\n            expirationTime,\n          );\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    const created = createFiberFromPortal(\n      portal,\n      returnFiber.mode,\n      expirationTime,\n    );\n    created.return = returnFiber;\n    return created;\n  }\n\n  // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n  function reconcileChildFibers(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChild: any,\n    expirationTime: ExpirationTime,\n  ): Fiber | null {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    const isUnkeyedTopLevelFragment =\n      typeof newChild === 'object' &&\n      newChild !== null &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      newChild.key === null;\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    }\n\n    // Handle object types\n    const isObject = typeof newChild === 'object' && newChild !== null;\n\n    if (isObject) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(\n            reconcileSingleElement(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              expirationTime,\n            ),\n          );\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(\n            reconcileSinglePortal(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              expirationTime,\n            ),\n          );\n      }\n    }\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      return placeSingleChild(\n        reconcileSingleTextNode(\n          returnFiber,\n          currentFirstChild,\n          '' + newChild,\n          expirationTime,\n        ),\n      );\n    }\n\n    if (isArray(newChild)) {\n      return reconcileChildrenArray(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        expirationTime,\n      );\n    }\n\n    if (getIteratorFn(newChild)) {\n      return reconcileChildrenIterator(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        expirationTime,\n      );\n    }\n\n    if (isObject) {\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType();\n      }\n    }\n    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {\n      // If the new child is undefined, and the return fiber is a composite\n      // component, throw an error. If Fiber return types are disabled,\n      // we already threw above.\n      switch (returnFiber.tag) {\n        case ClassComponent: {\n          if (__DEV__) {\n            const instance = returnFiber.stateNode;\n            if (instance.render._isMockFunction) {\n              // We allow auto-mocks to proceed as if they're returning null.\n              break;\n            }\n          }\n        }\n        // Intentionally fall through to the next case, which handles both\n        // functions and classes\n        // eslint-disable-next-lined no-fallthrough\n        case FunctionComponent: {\n          const Component = returnFiber.type;\n          invariant(\n            false,\n            '%s(...): Nothing was returned from render. This usually means a ' +\n              'return statement is missing. Or, to render nothing, ' +\n              'return null.',\n            Component.displayName || Component.name || 'Component',\n          );\n        }\n      }\n    }\n\n    // Remaining cases are all treated as empty.\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nexport const reconcileChildFibers = ChildReconciler(true);\nexport const mountChildFibers = ChildReconciler(false);\n\nexport function cloneChildFibers(\n  current: Fiber | null,\n  workInProgress: Fiber,\n): void {\n  invariant(\n    current === null || workInProgress.child === current.child,\n    'Resuming work not yet implemented.',\n  );\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  let currentChild = workInProgress.child;\n  let newChild = createWorkInProgress(\n    currentChild,\n    currentChild.pendingProps,\n    currentChild.expirationTime,\n  );\n  workInProgress.child = newChild;\n\n  newChild.return = workInProgress;\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(\n      currentChild,\n      currentChild.pendingProps,\n      currentChild.expirationTime,\n    );\n    newChild.return = workInProgress;\n  }\n  newChild.sibling = null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {StackCursor} from './ReactFiberStack';\nimport type {Container, HostContext} from './ReactFiberHostConfig';\n\nimport invariant from 'shared/invariant';\n\nimport {getChildHostContext, getRootHostContext} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack';\n\ndeclare class NoContextT {}\nconst NO_CONTEXT: NoContextT = ({}: any);\n\nlet contextStackCursor: StackCursor<HostContext | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nlet contextFiberStackCursor: StackCursor<Fiber | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nlet rootInstanceStackCursor: StackCursor<Container | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\n\nfunction requiredContext<Value>(c: Value | NoContextT): Value {\n  invariant(\n    c !== NO_CONTEXT,\n    'Expected host context to exist. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n  return (c: any);\n}\n\nfunction getRootHostContainer(): Container {\n  const rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber: Fiber, nextRootInstance: Container) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber);\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n\n  // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n  push(contextStackCursor, NO_CONTEXT, fiber);\n  const nextRootContext = getRootHostContext(nextRootInstance);\n  // Now that we know this function doesn't throw, replace it.\n  pop(contextStackCursor, fiber);\n  push(contextStackCursor, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber: Fiber) {\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext(): HostContext {\n  const context = requiredContext(contextStackCursor.current);\n  return context;\n}\n\nfunction pushHostContext(fiber: Fiber): void {\n  const rootInstance: Container = requiredContext(\n    rootInstanceStackCursor.current,\n  );\n  const context: HostContext = requiredContext(contextStackCursor.current);\n  const nextContext = getChildHostContext(context, fiber.type, rootInstance);\n\n  // Don't push this Fiber's context unless it's unique.\n  if (context === nextContext) {\n    return;\n  }\n\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor, nextContext, fiber);\n}\n\nfunction popHostContext(fiber: Fiber): void {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nexport {\n  getHostContext,\n  getRootHostContainer,\n  popHostContainer,\n  popHostContext,\n  pushHostContainer,\n  pushHostContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type HookEffectTag = number;\n\nexport const NoEffect = /*             */ 0b00000000;\nexport const UnmountSnapshot = /*      */ 0b00000010;\nexport const UnmountMutation = /*      */ 0b00000100;\nexport const MountMutation = /*        */ 0b00001000;\nexport const UnmountLayout = /*        */ 0b00010000;\nexport const MountLayout = /*          */ 0b00100000;\nexport const MountPassive = /*         */ 0b01000000;\nexport const UnmountPassive = /*       */ 0b10000000;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport type {SideEffectTag} from 'shared/ReactSideEffectTags';\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {HookEffectTag} from './ReactHookEffectTags';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nimport {NoWork} from './ReactFiberExpirationTime';\nimport {readContext} from './ReactFiberNewContext';\nimport {\n  Update as UpdateEffect,\n  Passive as PassiveEffect,\n} from 'shared/ReactSideEffectTags';\nimport {\n  NoEffect as NoHookEffect,\n  UnmountMutation,\n  MountLayout,\n  UnmountPassive,\n  MountPassive,\n} from './ReactHookEffectTags';\nimport {\n  scheduleWork,\n  warnIfNotCurrentlyBatchingInDev,\n  computeExpirationForFiber,\n  flushPassiveEffects,\n  requestCurrentTime,\n} from './ReactFiberScheduler';\n\nimport invariant from 'shared/invariant';\nimport warning from 'shared/warning';\nimport getComponentName from 'shared/getComponentName';\nimport is from 'shared/objectIs';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork';\n\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\n\nexport type Dispatcher = {\n  readContext<T>(\n    context: ReactContext<T>,\n    observedBits: void | number | boolean,\n  ): T,\n  useState<S>(initialState: (() => S) | S): [S, Dispatch<BasicStateAction<S>>],\n  useReducer<S, I, A>(\n    reducer: (S, A) => S,\n    initialArg: I,\n    init?: (I) => S,\n  ): [S, Dispatch<A>],\n  useContext<T>(\n    context: ReactContext<T>,\n    observedBits: void | number | boolean,\n  ): T,\n  useRef<T>(initialValue: T): {current: T},\n  useEffect(\n    create: () => (() => void) | void,\n    deps: Array<mixed> | void | null,\n  ): void,\n  useLayoutEffect(\n    create: () => (() => void) | void,\n    deps: Array<mixed> | void | null,\n  ): void,\n  useCallback<T>(callback: T, deps: Array<mixed> | void | null): T,\n  useMemo<T>(nextCreate: () => T, deps: Array<mixed> | void | null): T,\n  useImperativeHandle<T>(\n    ref: {current: T | null} | ((inst: T | null) => mixed) | null | void,\n    create: () => T,\n    deps: Array<mixed> | void | null,\n  ): void,\n  useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void,\n};\n\ntype Update<S, A> = {\n  expirationTime: ExpirationTime,\n  action: A,\n  eagerReducer: ((S, A) => S) | null,\n  eagerState: S | null,\n  next: Update<S, A> | null,\n};\n\ntype UpdateQueue<S, A> = {\n  last: Update<S, A> | null,\n  dispatch: (A => mixed) | null,\n  lastRenderedReducer: ((S, A) => S) | null,\n  lastRenderedState: S | null,\n};\n\nexport type HookType =\n  | 'useState'\n  | 'useReducer'\n  | 'useContext'\n  | 'useRef'\n  | 'useEffect'\n  | 'useLayoutEffect'\n  | 'useCallback'\n  | 'useMemo'\n  | 'useImperativeHandle'\n  | 'useDebugValue';\n\nlet didWarnAboutMismatchedHooksForComponent;\nif (__DEV__) {\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\nexport type Hook = {\n  memoizedState: any,\n\n  baseState: any,\n  baseUpdate: Update<any, any> | null,\n  queue: UpdateQueue<any, any> | null,\n\n  next: Hook | null,\n};\n\ntype Effect = {\n  tag: HookEffectTag,\n  create: () => (() => void) | void,\n  destroy: (() => void) | void,\n  deps: Array<mixed> | null,\n  next: Effect,\n};\n\nexport type FunctionComponentUpdateQueue = {\n  lastEffect: Effect | null,\n};\n\ntype BasicStateAction<S> = (S => S) | S;\n\ntype Dispatch<A> = A => void;\n\n// These are set right before calling the component.\nlet renderExpirationTime: ExpirationTime = NoWork;\n// The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\nlet currentlyRenderingFiber: Fiber | null = null;\n\n// Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\nlet currentHook: Hook | null = null;\nlet nextCurrentHook: Hook | null = null;\nlet firstWorkInProgressHook: Hook | null = null;\nlet workInProgressHook: Hook | null = null;\nlet nextWorkInProgressHook: Hook | null = null;\n\nlet remainingExpirationTime: ExpirationTime = NoWork;\nlet componentUpdateQueue: FunctionComponentUpdateQueue | null = null;\nlet sideEffectTag: SideEffectTag = 0;\n\n// Updates scheduled during render will trigger an immediate re-render at the\n// end of the current pass. We can't store these updates on the normal queue,\n// because if the work is aborted, they should be discarded. Because this is\n// a relatively rare case, we also don't want to add an additional field to\n// either the hook or queue object types. So we store them in a lazily create\n// map of queue -> render-phase updates, which are discarded once the component\n// completes without re-rendering.\n\n// Whether an update was scheduled during the currently executing render pass.\nlet didScheduleRenderPhaseUpdate: boolean = false;\n// Lazily created map of render-phase updates\nlet renderPhaseUpdates: Map<\n  UpdateQueue<any, any>,\n  Update<any, any>,\n> | null = null;\n// Counter to prevent infinite loops.\nlet numberOfReRenders: number = 0;\nconst RE_RENDER_LIMIT = 25;\n\n// In DEV, this is the name of the currently executing primitive hook\nlet currentHookNameInDev: ?HookType = null;\n\n// In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\nlet hookTypesDev: Array<HookType> | null = null;\nlet hookTypesUpdateIndexDev: number = -1;\n\nfunction mountHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName: HookType) {\n  if (__DEV__) {\n    const componentName = getComponentName(\n      ((currentlyRenderingFiber: any): Fiber).type,\n    );\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        let table = '';\n\n        const secondColumnStart = 30;\n\n        for (let i = 0; i <= ((hookTypesUpdateIndexDev: any): number); i++) {\n          const oldHookName = hookTypesDev[i];\n          const newHookName =\n            i === ((hookTypesUpdateIndexDev: any): number)\n              ? currentHookName\n              : oldHookName;\n\n          let row = `${i + 1}. ${oldHookName}`;\n\n          // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n          while (row.length < secondColumnStart) {\n            row += ' ';\n          }\n\n          row += newHookName + '\\n';\n\n          table += row;\n        }\n\n        warning(\n          false,\n          'React has detected a change in the order of Hooks called by %s. ' +\n            'This will lead to bugs and errors if not fixed. ' +\n            'For more information, read the Rules of Hooks: https://fb.me/rules-of-hooks\\n\\n' +\n            '   Previous render            Next render\\n' +\n            '   ------------------------------------------------------\\n' +\n            '%s' +\n            '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n',\n          componentName,\n          table,\n        );\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  invariant(\n    false,\n    'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n      ' one of the following reasons:\\n' +\n      '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n      '2. You might be breaking the Rules of Hooks\\n' +\n      '3. You might have more than one copy of React in the same app\\n' +\n      'See https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.',\n  );\n}\n\nfunction areHookInputsEqual(\n  nextDeps: Array<mixed>,\n  prevDeps: Array<mixed> | null,\n) {\n  if (prevDeps === null) {\n    if (__DEV__) {\n      warning(\n        false,\n        '%s received a final argument during this render, but not during ' +\n          'the previous render. Even though the final argument is optional, ' +\n          'its type cannot change between renders.',\n        currentHookNameInDev,\n      );\n    }\n    return false;\n  }\n\n  if (__DEV__) {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      warning(\n        false,\n        'The final argument passed to %s changed size between renders. The ' +\n          'order and size of this array must remain constant.\\n\\n' +\n          'Previous: %s\\n' +\n          'Incoming: %s',\n        currentHookNameInDev,\n        `[${nextDeps.join(', ')}]`,\n        `[${prevDeps.join(', ')}]`,\n      );\n    }\n  }\n  for (let i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (is(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function renderWithHooks(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  props: any,\n  refOrContext: any,\n  nextRenderExpirationTime: ExpirationTime,\n): any {\n  renderExpirationTime = nextRenderExpirationTime;\n  currentlyRenderingFiber = workInProgress;\n  nextCurrentHook = current !== null ? current.memoizedState : null;\n\n  if (__DEV__) {\n    hookTypesDev =\n      current !== null\n        ? ((current._debugHookTypes: any): Array<HookType>)\n        : null;\n    hookTypesUpdateIndexDev = -1;\n  }\n\n  // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n\n  // remainingExpirationTime = NoWork;\n  // componentUpdateQueue = null;\n\n  // didScheduleRenderPhaseUpdate = false;\n  // renderPhaseUpdates = null;\n  // numberOfReRenders = 0;\n  // sideEffectTag = 0;\n\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because nextCurrentHook === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n\n  // Using nextCurrentHook to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so nextCurrentHook would be null during updates and mounts.\n  if (__DEV__) {\n    if (nextCurrentHook !== null) {\n      ReactCurrentDispatcher.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountInDEV;\n    }\n  } else {\n    ReactCurrentDispatcher.current =\n      nextCurrentHook === null\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate;\n  }\n\n  let children = Component(props, refOrContext);\n\n  if (didScheduleRenderPhaseUpdate) {\n    do {\n      didScheduleRenderPhaseUpdate = false;\n      numberOfReRenders += 1;\n\n      // Start over from the beginning of the list\n      nextCurrentHook = current !== null ? current.memoizedState : null;\n      nextWorkInProgressHook = firstWorkInProgressHook;\n\n      currentHook = null;\n      workInProgressHook = null;\n      componentUpdateQueue = null;\n\n      if (__DEV__) {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher.current = __DEV__\n        ? HooksDispatcherOnUpdateInDEV\n        : HooksDispatcherOnUpdate;\n\n      children = Component(props, refOrContext);\n    } while (didScheduleRenderPhaseUpdate);\n\n    renderPhaseUpdates = null;\n    numberOfReRenders = 0;\n  }\n\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  const renderedWork: Fiber = (currentlyRenderingFiber: any);\n\n  renderedWork.memoizedState = firstWorkInProgressHook;\n  renderedWork.expirationTime = remainingExpirationTime;\n  renderedWork.updateQueue = (componentUpdateQueue: any);\n  renderedWork.effectTag |= sideEffectTag;\n\n  if (__DEV__) {\n    renderedWork._debugHookTypes = hookTypesDev;\n  }\n\n  // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n  const didRenderTooFewHooks =\n    currentHook !== null && currentHook.next !== null;\n\n  renderExpirationTime = NoWork;\n  currentlyRenderingFiber = null;\n\n  currentHook = null;\n  nextCurrentHook = null;\n  firstWorkInProgressHook = null;\n  workInProgressHook = null;\n  nextWorkInProgressHook = null;\n\n  if (__DEV__) {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n  }\n\n  remainingExpirationTime = NoWork;\n  componentUpdateQueue = null;\n  sideEffectTag = 0;\n\n  // These were reset above\n  // didScheduleRenderPhaseUpdate = false;\n  // renderPhaseUpdates = null;\n  // numberOfReRenders = 0;\n\n  invariant(\n    !didRenderTooFewHooks,\n    'Rendered fewer hooks than expected. This may be caused by an accidental ' +\n      'early return statement.',\n  );\n\n  return children;\n}\n\nexport function bailoutHooks(\n  current: Fiber,\n  workInProgress: Fiber,\n  expirationTime: ExpirationTime,\n) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.effectTag &= ~(PassiveEffect | UpdateEffect);\n  if (current.expirationTime <= expirationTime) {\n    current.expirationTime = NoWork;\n  }\n}\n\nexport function resetHooks(): void {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrancy.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  // This is used to reset the state of this module when a component throws.\n  // It's also called inside mountIndeterminateComponent if we determine the\n  // component is a module-style component.\n  renderExpirationTime = NoWork;\n  currentlyRenderingFiber = null;\n\n  currentHook = null;\n  nextCurrentHook = null;\n  firstWorkInProgressHook = null;\n  workInProgressHook = null;\n  nextWorkInProgressHook = null;\n\n  if (__DEV__) {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    currentHookNameInDev = null;\n  }\n\n  remainingExpirationTime = NoWork;\n  componentUpdateQueue = null;\n  sideEffectTag = 0;\n\n  didScheduleRenderPhaseUpdate = false;\n  renderPhaseUpdates = null;\n  numberOfReRenders = 0;\n}\n\nfunction mountWorkInProgressHook(): Hook {\n  const hook: Hook = {\n    memoizedState: null,\n\n    baseState: null,\n    queue: null,\n    baseUpdate: null,\n\n    next: null,\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    firstWorkInProgressHook = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook(): Hook {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n\n    currentHook = nextCurrentHook;\n    nextCurrentHook = currentHook !== null ? currentHook.next : null;\n  } else {\n    // Clone from the current hook.\n    invariant(\n      nextCurrentHook !== null,\n      'Rendered more hooks than during the previous render.',\n    );\n    currentHook = nextCurrentHook;\n\n    const newHook: Hook = {\n      memoizedState: currentHook.memoizedState,\n\n      baseState: currentHook.baseState,\n      queue: currentHook.queue,\n      baseUpdate: currentHook.baseUpdate,\n\n      next: null,\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      workInProgressHook = firstWorkInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n    nextCurrentHook = currentHook.next;\n  }\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue(): FunctionComponentUpdateQueue {\n  return {\n    lastEffect: null,\n  };\n}\n\nfunction basicStateReducer<S>(state: S, action: BasicStateAction<S>): S {\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = mountWorkInProgressHook();\n  let initialState;\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = ((initialArg: any): S);\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue = (hook.queue = {\n    last: null,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: (initialState: any),\n  });\n  const dispatch: Dispatch<A> = (queue.dispatch = (dispatchAction.bind(\n    null,\n    // Flow doesn't know this is non-null, but we do.\n    ((currentlyRenderingFiber: any): Fiber),\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  invariant(\n    queue !== null,\n    'Should have a queue. This is likely a bug in React. Please file an issue.',\n  );\n\n  queue.lastRenderedReducer = reducer;\n\n  if (numberOfReRenders > 0) {\n    // This is a re-render. Apply the new render phase updates to the previous\n    // work-in-progress hook.\n    const dispatch: Dispatch<A> = (queue.dispatch: any);\n    if (renderPhaseUpdates !== null) {\n      // Render phase updates are stored in a map of queue -> linked list\n      const firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\n      if (firstRenderPhaseUpdate !== undefined) {\n        renderPhaseUpdates.delete(queue);\n        let newState = hook.memoizedState;\n        let update = firstRenderPhaseUpdate;\n        do {\n          // Process this render phase update. We don't have to check the\n          // priority because it will always be the same as the current\n          // render's.\n          const action = update.action;\n          newState = reducer(newState, action);\n          update = update.next;\n        } while (update !== null);\n\n        // Mark that the fiber performed work, but only if the new state is\n        // different from the current state.\n        if (!is(newState, hook.memoizedState)) {\n          markWorkInProgressReceivedUpdate();\n        }\n\n        hook.memoizedState = newState;\n        // Don't persist the state accumlated from the render phase updates to\n        // the base state unless the queue is empty.\n        // TODO: Not sure if this is the desired semantics, but it's what we\n        // do for gDSFP. I can't remember why.\n        if (hook.baseUpdate === queue.last) {\n          hook.baseState = newState;\n        }\n\n        queue.lastRenderedState = newState;\n\n        return [newState, dispatch];\n      }\n    }\n    return [hook.memoizedState, dispatch];\n  }\n\n  // The last update in the entire queue\n  const last = queue.last;\n  // The last update that is part of the base state.\n  const baseUpdate = hook.baseUpdate;\n  const baseState = hook.baseState;\n\n  // Find the first unprocessed update.\n  let first;\n  if (baseUpdate !== null) {\n    if (last !== null) {\n      // For the first update, the queue is a circular linked list where\n      // `queue.last.next = queue.first`. Once the first update commits, and\n      // the `baseUpdate` is no longer empty, we can unravel the list.\n      last.next = null;\n    }\n    first = baseUpdate.next;\n  } else {\n    first = last !== null ? last.next : null;\n  }\n  if (first !== null) {\n    let newState = baseState;\n    let newBaseState = null;\n    let newBaseUpdate = null;\n    let prevUpdate = baseUpdate;\n    let update = first;\n    let didSkip = false;\n    do {\n      const updateExpirationTime = update.expirationTime;\n      if (updateExpirationTime < renderExpirationTime) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        if (!didSkip) {\n          didSkip = true;\n          newBaseUpdate = prevUpdate;\n          newBaseState = newState;\n        }\n        // Update the remaining priority in the queue.\n        if (updateExpirationTime > remainingExpirationTime) {\n          remainingExpirationTime = updateExpirationTime;\n        }\n      } else {\n        // Process this update.\n        if (update.eagerReducer === reducer) {\n          // If this update was processed eagerly, and its reducer matches the\n          // current reducer, we can use the eagerly computed state.\n          newState = ((update.eagerState: any): S);\n        } else {\n          const action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n      prevUpdate = update;\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (!didSkip) {\n      newBaseUpdate = prevUpdate;\n      newBaseState = newState;\n    }\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseUpdate = newBaseUpdate;\n    hook.baseState = newBaseState;\n\n    queue.lastRenderedState = newState;\n  }\n\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction mountState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const hook = mountWorkInProgressHook();\n  if (typeof initialState === 'function') {\n    initialState = initialState();\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue = (hook.queue = {\n    last: null,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: (initialState: any),\n  });\n  const dispatch: Dispatch<\n    BasicStateAction<S>,\n  > = (queue.dispatch = (dispatchAction.bind(\n    null,\n    // Flow doesn't know this is non-null, but we do.\n    ((currentlyRenderingFiber: any): Fiber),\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return updateReducer(basicStateReducer, (initialState: any));\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  const effect: Effect = {\n    tag,\n    create,\n    destroy,\n    deps,\n    // Circular\n    next: (null: any),\n  };\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    const lastEffect = componentUpdateQueue.lastEffect;\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      const firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n  return effect;\n}\n\nfunction mountRef<T>(initialValue: T): {current: T} {\n  const hook = mountWorkInProgressHook();\n  const ref = {current: initialValue};\n  if (__DEV__) {\n    Object.seal(ref);\n  }\n  hook.memoizedState = ref;\n  return ref;\n}\n\nfunction updateRef<T>(initialValue: T): {current: T} {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps): void {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  sideEffectTag |= fiberEffectTag;\n  hook.memoizedState = pushEffect(hookEffectTag, create, undefined, nextDeps);\n}\n\nfunction updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps): void {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  let destroy = undefined;\n\n  if (currentHook !== null) {\n    const prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n    if (nextDeps !== null) {\n      const prevDeps = prevEffect.deps;\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        pushEffect(NoHookEffect, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  sideEffectTag |= fiberEffectTag;\n  hook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextDeps);\n}\n\nfunction mountEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return mountEffectImpl(\n    UpdateEffect | PassiveEffect,\n    UnmountPassive | MountPassive,\n    create,\n    deps,\n  );\n}\n\nfunction updateEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(\n    UpdateEffect | PassiveEffect,\n    UnmountPassive | MountPassive,\n    create,\n    deps,\n  );\n}\n\nfunction mountLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return mountEffectImpl(\n    UpdateEffect,\n    UnmountMutation | MountLayout,\n    create,\n    deps,\n  );\n}\n\nfunction updateLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(\n    UpdateEffect,\n    UnmountMutation | MountLayout,\n    create,\n    deps,\n  );\n}\n\nfunction imperativeHandleEffect<T>(\n  create: () => T,\n  ref: {current: T | null} | ((inst: T | null) => mixed) | null | void,\n) {\n  if (typeof ref === 'function') {\n    const refCallback = ref;\n    const inst = create();\n    refCallback(inst);\n    return () => {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    const refObject = ref;\n    if (__DEV__) {\n      warning(\n        refObject.hasOwnProperty('current'),\n        'Expected useImperativeHandle() first argument to either be a ' +\n          'ref callback or React.createRef() object. Instead received: %s.',\n        'an object with keys {' + Object.keys(refObject).join(', ') + '}',\n      );\n    }\n    const inst = create();\n    refObject.current = inst;\n    return () => {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle<T>(\n  ref: {current: T | null} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    warning(\n      typeof create === 'function',\n      'Expected useImperativeHandle() second argument to be a function ' +\n        'that creates a handle. Instead received: %s.',\n      create !== null ? typeof create : 'null',\n    );\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return mountEffectImpl(\n    UpdateEffect,\n    UnmountMutation | MountLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction updateImperativeHandle<T>(\n  ref: {current: T | null} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    warning(\n      typeof create === 'function',\n      'Expected useImperativeHandle() second argument to be a function ' +\n        'that creates a handle. Instead received: %s.',\n      create !== null ? typeof create : 'null',\n    );\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return updateEffectImpl(\n    UpdateEffect,\n    UnmountMutation | MountLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction mountDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n  // This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nconst updateDebugValue = mountDebugValue;\n\nfunction mountCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\n// in a test-like environment, we want to warn if dispatchAction()\n// is called outside of a batchedUpdates/TestUtils.act(...) call.\nlet shouldWarnForUnbatchedSetState = false;\n\nif (__DEV__) {\n  // jest isn't a 'global', it's just exposed to tests via a wrapped function\n  // further, this isn't a test file, so flow doesn't recognize the symbol. So...\n  // $FlowExpectedError - because requirements don't give a damn about your type sigs.\n  if ('undefined' !== typeof jest) {\n    shouldWarnForUnbatchedSetState = true;\n  }\n}\n\nfunction dispatchAction<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A,\n) {\n  invariant(\n    numberOfReRenders < RE_RENDER_LIMIT,\n    'Too many re-renders. React limits the number of renders to prevent ' +\n      'an infinite loop.',\n  );\n\n  if (__DEV__) {\n    warning(\n      arguments.length <= 3,\n      \"State updates from the useState() and useReducer() Hooks don't support the \" +\n        'second callback argument. To execute a side effect after ' +\n        'rendering, declare it in the component body with useEffect().',\n    );\n  }\n\n  const alternate = fiber.alternate;\n  if (\n    fiber === currentlyRenderingFiber ||\n    (alternate !== null && alternate === currentlyRenderingFiber)\n  ) {\n    // This is a render phase update. Stash it in a lazily-created map of\n    // queue -> linked list of updates. After this render pass, we'll restart\n    // and apply the stashed updates on top of the work-in-progress hook.\n    didScheduleRenderPhaseUpdate = true;\n    const update: Update<S, A> = {\n      expirationTime: renderExpirationTime,\n      action,\n      eagerReducer: null,\n      eagerState: null,\n      next: null,\n    };\n    if (renderPhaseUpdates === null) {\n      renderPhaseUpdates = new Map();\n    }\n    const firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);\n    if (firstRenderPhaseUpdate === undefined) {\n      renderPhaseUpdates.set(queue, update);\n    } else {\n      // Append the update to the end of the list.\n      let lastRenderPhaseUpdate = firstRenderPhaseUpdate;\n      while (lastRenderPhaseUpdate.next !== null) {\n        lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n      }\n      lastRenderPhaseUpdate.next = update;\n    }\n  } else {\n    flushPassiveEffects();\n\n    const currentTime = requestCurrentTime();\n    const expirationTime = computeExpirationForFiber(currentTime, fiber);\n\n    const update: Update<S, A> = {\n      expirationTime,\n      action,\n      eagerReducer: null,\n      eagerState: null,\n      next: null,\n    };\n\n    // Append the update to the end of the list.\n    const last = queue.last;\n    if (last === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      const first = last.next;\n      if (first !== null) {\n        // Still circular.\n        update.next = first;\n      }\n      last.next = update;\n    }\n    queue.last = update;\n\n    if (\n      fiber.expirationTime === NoWork &&\n      (alternate === null || alternate.expirationTime === NoWork)\n    ) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      const lastRenderedReducer = queue.lastRenderedReducer;\n      if (lastRenderedReducer !== null) {\n        let prevDispatcher;\n        if (__DEV__) {\n          prevDispatcher = ReactCurrentDispatcher.current;\n          ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n        try {\n          const currentState: S = (queue.lastRenderedState: any);\n          const eagerState = lastRenderedReducer(currentState, action);\n          // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n          update.eagerReducer = lastRenderedReducer;\n          update.eagerState = eagerState;\n          if (is(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            return;\n          }\n        } catch (error) {\n          // Suppress the error. It will throw again in the render phase.\n        } finally {\n          if (__DEV__) {\n            ReactCurrentDispatcher.current = prevDispatcher;\n          }\n        }\n      }\n    }\n    if (__DEV__) {\n      if (shouldWarnForUnbatchedSetState === true) {\n        warnIfNotCurrentlyBatchingInDev(fiber);\n      }\n    }\n    scheduleWork(fiber, expirationTime);\n  }\n}\n\nexport const ContextOnlyDispatcher: Dispatcher = {\n  readContext,\n\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n};\n\nconst HooksDispatcherOnMount: Dispatcher = {\n  readContext,\n\n  useCallback: mountCallback,\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: mountImperativeHandle,\n  useLayoutEffect: mountLayoutEffect,\n  useMemo: mountMemo,\n  useReducer: mountReducer,\n  useRef: mountRef,\n  useState: mountState,\n  useDebugValue: mountDebugValue,\n};\n\nconst HooksDispatcherOnUpdate: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: updateState,\n  useDebugValue: updateDebugValue,\n};\n\nlet HooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\n\nif (__DEV__) {\n  const warnInvalidContextAccess = () => {\n    warning(\n      false,\n      'Context can only be read while React is rendering. ' +\n        'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n        'In function components, you can read it directly in the function body, but not ' +\n        'inside Hooks like useReducer() or useMemo().',\n    );\n  };\n\n  const warnInvalidHookAccess = () => {\n    warning(\n      false,\n      'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' +\n        'You can only call Hooks at the top level of your React function. ' +\n        'For more information, see ' +\n        'https://fb.me/rules-of-hooks',\n    );\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      mountHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {current: T | null} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {current: T} {\n      currentHookNameInDev = 'useRef';\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n  };\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {current: T | null} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {current: T} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n  };\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {current: T | null} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {current: T} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n  };\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {current: T | null} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {current: T} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n  };\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      warnInvalidContextAccess();\n      return readContext(context, observedBits);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(\n      context: ReactContext<T>,\n      observedBits: void | number | boolean,\n    ): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context, observedBits);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {current: T | null} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {current: T} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {Batch, FiberRoot} from './ReactFiberRoot';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {Interaction} from 'scheduler/src/Tracing';\n\nimport {\n  __interactionsRef,\n  __subscriberRef,\n  unstable_wrap as Scheduler_tracing_wrap,\n} from 'scheduler/tracing';\nimport {\n  unstable_next as Scheduler_next,\n  unstable_getCurrentPriorityLevel as getCurrentPriorityLevel,\n  unstable_runWithPriority as runWithPriority,\n  unstable_ImmediatePriority as ImmediatePriority,\n  unstable_UserBlockingPriority as UserBlockingPriority,\n  unstable_NormalPriority as NormalPriority,\n  unstable_LowPriority as LowPriority,\n  unstable_IdlePriority as IdlePriority,\n} from 'scheduler';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings';\nimport {\n  NoEffect,\n  PerformedWork,\n  Placement,\n  Update,\n  Snapshot,\n  PlacementAndUpdate,\n  Deletion,\n  ContentReset,\n  Callback,\n  DidCapture,\n  Ref,\n  Incomplete,\n  HostEffectMask,\n  Passive,\n} from 'shared/ReactSideEffectTags';\nimport {\n  ClassComponent,\n  HostComponent,\n  ContextProvider,\n  ForwardRef,\n  FunctionComponent,\n  HostPortal,\n  HostRoot,\n  MemoComponent,\n  SimpleMemoComponent,\n  SuspenseComponent,\n  DehydratedSuspenseComponent,\n} from 'shared/ReactWorkTags';\nimport {\n  enableSchedulerTracing,\n  enableProfilerTimer,\n  enableUserTimingAPI,\n  replayFailedUnitOfWorkWithInvokeGuardedCallback,\n  warnAboutDeprecatedLifecycles,\n  enableSuspenseServerRenderer,\n} from 'shared/ReactFeatureFlags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nimport ReactFiberInstrumentation from './ReactFiberInstrumentation';\nimport {\n  getStackByFiberInDevAndProd,\n  phase as ReactCurrentFiberPhase,\n  resetCurrentFiber,\n  setCurrentFiber,\n} from './ReactCurrentFiber';\nimport {\n  now,\n  scheduleDeferredCallback,\n  cancelDeferredCallback,\n  shouldYield,\n  prepareForCommit,\n  resetAfterCommit,\n  scheduleTimeout,\n  cancelTimeout,\n  noTimeout,\n  schedulePassiveEffects,\n  cancelPassiveEffects,\n} from './ReactFiberHostConfig';\nimport {\n  markPendingPriorityLevel,\n  markCommittedPriorityLevels,\n  markSuspendedPriorityLevel,\n  markPingedPriorityLevel,\n  hasLowerPriorityWork,\n  isPriorityLevelSuspended,\n  findEarliestOutstandingPriorityLevel,\n  didExpireAtExpirationTime,\n} from './ReactFiberPendingPriority';\nimport {\n  recordEffect,\n  recordScheduleUpdate,\n  startRequestCallbackTimer,\n  stopRequestCallbackTimer,\n  startWorkTimer,\n  stopWorkTimer,\n  stopFailedWorkTimer,\n  startWorkLoopTimer,\n  stopWorkLoopTimer,\n  startCommitTimer,\n  stopCommitTimer,\n  startCommitSnapshotEffectsTimer,\n  stopCommitSnapshotEffectsTimer,\n  startCommitHostEffectsTimer,\n  stopCommitHostEffectsTimer,\n  startCommitLifeCyclesTimer,\n  stopCommitLifeCyclesTimer,\n} from './ReactDebugFiberPerf';\nimport {createWorkInProgress, assignFiberPropertiesInDEV} from './ReactFiber';\nimport {onCommitRoot} from './ReactFiberDevToolsHook';\nimport {\n  NoWork,\n  Sync,\n  Never,\n  msToExpirationTime,\n  expirationTimeToMs,\n  computeAsyncExpiration,\n  computeInteractiveExpiration,\n} from './ReactFiberExpirationTime';\nimport {ConcurrentMode, ProfileMode, NoContext} from './ReactTypeOfMode';\nimport {enqueueUpdate, resetCurrentlyProcessingQueue} from './ReactUpdateQueue';\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n  popContext as popLegacyContext,\n} from './ReactFiberContext';\nimport {popProvider, resetContextDependences} from './ReactFiberNewContext';\nimport {resetHooks} from './ReactFiberHooks';\nimport {popHostContext, popHostContainer} from './ReactFiberHostContext';\nimport {\n  recordCommitTime,\n  startProfilerTimer,\n  stopProfilerTimerIfRunningAndRecordDelta,\n} from './ReactProfilerTimer';\nimport {\n  checkThatStackIsEmpty,\n  resetStackAfterFatalErrorInDev,\n} from './ReactFiberStack';\nimport {beginWork} from './ReactFiberBeginWork';\nimport {completeWork} from './ReactFiberCompleteWork';\nimport {\n  throwException,\n  unwindWork,\n  unwindInterruptedWork,\n  createRootErrorUpdate,\n  createClassErrorUpdate,\n} from './ReactFiberUnwindWork';\nimport {\n  commitBeforeMutationLifeCycles,\n  commitResetTextContent,\n  commitPlacement,\n  commitDeletion,\n  commitWork,\n  commitLifeCycles,\n  commitAttachRef,\n  commitDetachRef,\n  commitPassiveHookEffects,\n} from './ReactFiberCommitWork';\nimport {ContextOnlyDispatcher} from './ReactFiberHooks';\n\nexport type Thenable = {\n  then(resolve: () => mixed, reject?: () => mixed): mixed,\n};\n\nconst {ReactCurrentDispatcher, ReactCurrentOwner} = ReactSharedInternals;\n\nlet didWarnAboutStateTransition;\nlet didWarnSetStateChildContext;\nlet warnAboutUpdateOnUnmounted;\nlet warnAboutInvalidUpdates;\n\nif (enableSchedulerTracing) {\n  // Provide explicit error message when production+profiling bundle of e.g. react-dom\n  // is used with production (non-profiling) bundle of scheduler/tracing\n  invariant(\n    __interactionsRef != null && __interactionsRef.current != null,\n    'It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) ' +\n      'without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. ' +\n      'Your bundler might have a setting for aliasing both modules. ' +\n      'Learn more at http://fb.me/react-profiling',\n  );\n}\n\nif (__DEV__) {\n  didWarnAboutStateTransition = false;\n  didWarnSetStateChildContext = false;\n  const didWarnStateUpdateForUnmountedComponent = {};\n\n  warnAboutUpdateOnUnmounted = function(fiber: Fiber, isClass: boolean) {\n    // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n    const componentName = getComponentName(fiber.type) || 'ReactComponent';\n    if (didWarnStateUpdateForUnmountedComponent[componentName]) {\n      return;\n    }\n    warningWithoutStack(\n      false,\n      \"Can't perform a React state update on an unmounted component. This \" +\n        'is a no-op, but it indicates a memory leak in your application. To ' +\n        'fix, cancel all subscriptions and asynchronous tasks in %s.%s',\n      isClass\n        ? 'the componentWillUnmount method'\n        : 'a useEffect cleanup function',\n      getStackByFiberInDevAndProd(fiber),\n    );\n    didWarnStateUpdateForUnmountedComponent[componentName] = true;\n  };\n\n  warnAboutInvalidUpdates = function(instance: React$Component<any>) {\n    switch (ReactCurrentFiberPhase) {\n      case 'getChildContext':\n        if (didWarnSetStateChildContext) {\n          return;\n        }\n        warningWithoutStack(\n          false,\n          'setState(...): Cannot call setState() inside getChildContext()',\n        );\n        didWarnSetStateChildContext = true;\n        break;\n      case 'render':\n        if (didWarnAboutStateTransition) {\n          return;\n        }\n        warningWithoutStack(\n          false,\n          'Cannot update during an existing state transition (such as within ' +\n            '`render`). Render methods should be a pure function of props and state.',\n        );\n        didWarnAboutStateTransition = true;\n        break;\n    }\n  };\n}\n\n// Used to ensure computeUniqueAsyncExpiration is monotonically decreasing.\nlet lastUniqueAsyncExpiration: number = Sync - 1;\n\nlet isWorking: boolean = false;\n\n// The next work in progress fiber that we're currently working on.\nlet nextUnitOfWork: Fiber | null = null;\nlet nextRoot: FiberRoot | null = null;\n// The time at which we're currently rendering work.\nlet nextRenderExpirationTime: ExpirationTime = NoWork;\nlet nextLatestAbsoluteTimeoutMs: number = -1;\nlet nextRenderDidError: boolean = false;\n\n// The next fiber with an effect that we're currently committing.\nlet nextEffect: Fiber | null = null;\n\nlet isCommitting: boolean = false;\nlet rootWithPendingPassiveEffects: FiberRoot | null = null;\nlet passiveEffectCallbackHandle: * = null;\nlet passiveEffectCallback: * = null;\n\nlet legacyErrorBoundariesThatAlreadyFailed: Set<mixed> | null = null;\n\n// Used for performance tracking.\nlet interruptedBy: Fiber | null = null;\n\nlet stashedWorkInProgressProperties;\nlet replayUnitOfWork;\nlet mayReplayFailedUnitOfWork;\nlet isReplayingFailedUnitOfWork;\nlet originalReplayError;\nlet rethrowOriginalError;\nif (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n  stashedWorkInProgressProperties = null;\n  mayReplayFailedUnitOfWork = true;\n  isReplayingFailedUnitOfWork = false;\n  originalReplayError = null;\n  replayUnitOfWork = (\n    failedUnitOfWork: Fiber,\n    thrownValue: mixed,\n    isYieldy: boolean,\n  ) => {\n    if (\n      thrownValue !== null &&\n      typeof thrownValue === 'object' &&\n      typeof thrownValue.then === 'function'\n    ) {\n      // Don't replay promises. Treat everything else like an error.\n      // TODO: Need to figure out a different strategy if/when we add\n      // support for catching other types.\n      return;\n    }\n\n    // Restore the original state of the work-in-progress\n    if (stashedWorkInProgressProperties === null) {\n      // This should never happen. Don't throw because this code is DEV-only.\n      warningWithoutStack(\n        false,\n        'Could not replay rendering after an error. This is likely a bug in React. ' +\n          'Please file an issue.',\n      );\n      return;\n    }\n    assignFiberPropertiesInDEV(\n      failedUnitOfWork,\n      stashedWorkInProgressProperties,\n    );\n\n    switch (failedUnitOfWork.tag) {\n      case HostRoot:\n        popHostContainer(failedUnitOfWork);\n        popTopLevelLegacyContextObject(failedUnitOfWork);\n        break;\n      case HostComponent:\n        popHostContext(failedUnitOfWork);\n        break;\n      case ClassComponent: {\n        const Component = failedUnitOfWork.type;\n        if (isLegacyContextProvider(Component)) {\n          popLegacyContext(failedUnitOfWork);\n        }\n        break;\n      }\n      case HostPortal:\n        popHostContainer(failedUnitOfWork);\n        break;\n      case ContextProvider:\n        popProvider(failedUnitOfWork);\n        break;\n    }\n    // Replay the begin phase.\n    isReplayingFailedUnitOfWork = true;\n    originalReplayError = thrownValue;\n    invokeGuardedCallback(null, workLoop, null, isYieldy);\n    isReplayingFailedUnitOfWork = false;\n    originalReplayError = null;\n    if (hasCaughtError()) {\n      const replayError = clearCaughtError();\n      if (replayError != null && thrownValue != null) {\n        try {\n          // Reading the expando property is intentionally\n          // inside `try` because it might be a getter or Proxy.\n          if (replayError._suppressLogging) {\n            // Also suppress logging for the original error.\n            (thrownValue: any)._suppressLogging = true;\n          }\n        } catch (inner) {\n          // Ignore.\n        }\n      }\n    } else {\n      // If the begin phase did not fail the second time, set this pointer\n      // back to the original value.\n      nextUnitOfWork = failedUnitOfWork;\n    }\n  };\n  rethrowOriginalError = () => {\n    throw originalReplayError;\n  };\n}\n\nfunction resetStack() {\n  if (nextUnitOfWork !== null) {\n    let interruptedWork = nextUnitOfWork.return;\n    while (interruptedWork !== null) {\n      unwindInterruptedWork(interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n\n  if (__DEV__) {\n    ReactStrictModeWarnings.discardPendingWarnings();\n    checkThatStackIsEmpty();\n  }\n\n  nextRoot = null;\n  nextRenderExpirationTime = NoWork;\n  nextLatestAbsoluteTimeoutMs = -1;\n  nextRenderDidError = false;\n  nextUnitOfWork = null;\n}\n\nfunction commitAllHostEffects() {\n  while (nextEffect !== null) {\n    if (__DEV__) {\n      setCurrentFiber(nextEffect);\n    }\n    recordEffect();\n\n    const effectTag = nextEffect.effectTag;\n\n    if (effectTag & ContentReset) {\n      commitResetTextContent(nextEffect);\n    }\n\n    if (effectTag & Ref) {\n      const current = nextEffect.alternate;\n      if (current !== null) {\n        commitDetachRef(current);\n      }\n    }\n\n    // The following switch statement is only concerned about placement,\n    // updates, and deletions. To avoid needing to add a case for every\n    // possible bitmap value, we remove the secondary effects from the\n    // effect tag and switch on that value.\n    let primaryEffectTag = effectTag & (Placement | Update | Deletion);\n    switch (primaryEffectTag) {\n      case Placement: {\n        commitPlacement(nextEffect);\n        // Clear the \"placement\" from effect tag so that we know that this is inserted, before\n        // any life-cycles like componentDidMount gets called.\n        // TODO: findDOMNode doesn't rely on this any more but isMounted\n        // does and isMounted is deprecated anyway so we should be able\n        // to kill this.\n        nextEffect.effectTag &= ~Placement;\n        break;\n      }\n      case PlacementAndUpdate: {\n        // Placement\n        commitPlacement(nextEffect);\n        // Clear the \"placement\" from effect tag so that we know that this is inserted, before\n        // any life-cycles like componentDidMount gets called.\n        nextEffect.effectTag &= ~Placement;\n\n        // Update\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      case Update: {\n        const current = nextEffect.alternate;\n        commitWork(current, nextEffect);\n        break;\n      }\n      case Deletion: {\n        commitDeletion(nextEffect);\n        break;\n      }\n    }\n    nextEffect = nextEffect.nextEffect;\n  }\n\n  if (__DEV__) {\n    resetCurrentFiber();\n  }\n}\n\nfunction commitBeforeMutationLifecycles() {\n  while (nextEffect !== null) {\n    if (__DEV__) {\n      setCurrentFiber(nextEffect);\n    }\n\n    const effectTag = nextEffect.effectTag;\n    if (effectTag & Snapshot) {\n      recordEffect();\n      const current = nextEffect.alternate;\n      commitBeforeMutationLifeCycles(current, nextEffect);\n    }\n\n    nextEffect = nextEffect.nextEffect;\n  }\n\n  if (__DEV__) {\n    resetCurrentFiber();\n  }\n}\n\nfunction commitAllLifeCycles(\n  finishedRoot: FiberRoot,\n  committedExpirationTime: ExpirationTime,\n) {\n  if (__DEV__) {\n    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.flushPendingDeprecationWarnings();\n    }\n  }\n  while (nextEffect !== null) {\n    if (__DEV__) {\n      setCurrentFiber(nextEffect);\n    }\n    const effectTag = nextEffect.effectTag;\n\n    if (effectTag & (Update | Callback)) {\n      recordEffect();\n      const current = nextEffect.alternate;\n      commitLifeCycles(\n        finishedRoot,\n        current,\n        nextEffect,\n        committedExpirationTime,\n      );\n    }\n\n    if (effectTag & Ref) {\n      recordEffect();\n      commitAttachRef(nextEffect);\n    }\n\n    if (effectTag & Passive) {\n      rootWithPendingPassiveEffects = finishedRoot;\n    }\n\n    nextEffect = nextEffect.nextEffect;\n  }\n  if (__DEV__) {\n    resetCurrentFiber();\n  }\n}\n\nfunction commitPassiveEffects(root: FiberRoot, firstEffect: Fiber): void {\n  rootWithPendingPassiveEffects = null;\n  passiveEffectCallbackHandle = null;\n  passiveEffectCallback = null;\n\n  // Set this to true to prevent re-entrancy\n  const previousIsRendering = isRendering;\n  isRendering = true;\n\n  let effect = firstEffect;\n  do {\n    if (__DEV__) {\n      setCurrentFiber(effect);\n    }\n\n    if (effect.effectTag & Passive) {\n      let didError = false;\n      let error;\n      if (__DEV__) {\n        invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);\n        if (hasCaughtError()) {\n          didError = true;\n          error = clearCaughtError();\n        }\n      } else {\n        try {\n          commitPassiveHookEffects(effect);\n        } catch (e) {\n          didError = true;\n          error = e;\n        }\n      }\n      if (didError) {\n        captureCommitPhaseError(effect, error);\n      }\n    }\n    effect = effect.nextEffect;\n  } while (effect !== null);\n  if (__DEV__) {\n    resetCurrentFiber();\n  }\n\n  isRendering = previousIsRendering;\n\n  // Check if work was scheduled by one of the effects\n  const rootExpirationTime = root.expirationTime;\n  if (rootExpirationTime !== NoWork) {\n    requestWork(root, rootExpirationTime);\n  }\n  // Flush any sync work that was scheduled by effects\n  if (!isBatchingUpdates && !isRendering) {\n    performSyncWork();\n  }\n}\n\nfunction isAlreadyFailedLegacyErrorBoundary(instance: mixed): boolean {\n  return (\n    legacyErrorBoundariesThatAlreadyFailed !== null &&\n    legacyErrorBoundariesThatAlreadyFailed.has(instance)\n  );\n}\n\nfunction markLegacyErrorBoundaryAsFailed(instance: mixed) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction flushPassiveEffects() {\n  if (passiveEffectCallbackHandle !== null) {\n    cancelPassiveEffects(passiveEffectCallbackHandle);\n  }\n  if (passiveEffectCallback !== null) {\n    // We call the scheduled callback instead of commitPassiveEffects directly\n    // to ensure tracing works correctly.\n    passiveEffectCallback();\n  }\n}\n\nfunction commitRoot(root: FiberRoot, finishedWork: Fiber): void {\n  isWorking = true;\n  isCommitting = true;\n  startCommitTimer();\n\n  invariant(\n    root.current !== finishedWork,\n    'Cannot commit the same tree as before. This is probably a bug ' +\n      'related to the return field. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n  const committedExpirationTime = root.pendingCommitExpirationTime;\n  invariant(\n    committedExpirationTime !== NoWork,\n    'Cannot commit an incomplete root. This error is likely caused by a ' +\n      'bug in React. Please file an issue.',\n  );\n  root.pendingCommitExpirationTime = NoWork;\n\n  // Update the pending priority levels to account for the work that we are\n  // about to commit. This needs to happen before calling the lifecycles, since\n  // they may schedule additional updates.\n  const updateExpirationTimeBeforeCommit = finishedWork.expirationTime;\n  const childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;\n  const earliestRemainingTimeBeforeCommit =\n    childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit\n      ? childExpirationTimeBeforeCommit\n      : updateExpirationTimeBeforeCommit;\n  markCommittedPriorityLevels(root, earliestRemainingTimeBeforeCommit);\n\n  let prevInteractions: Set<Interaction> = (null: any);\n  if (enableSchedulerTracing) {\n    // Restore any pending interactions at this point,\n    // So that cascading work triggered during the render phase will be accounted for.\n    prevInteractions = __interactionsRef.current;\n    __interactionsRef.current = root.memoizedInteractions;\n  }\n\n  // Reset this to null before calling lifecycles\n  ReactCurrentOwner.current = null;\n\n  let firstEffect;\n  if (finishedWork.effectTag > PerformedWork) {\n    // A fiber's effect list consists only of its children, not itself. So if\n    // the root has an effect, we need to add it to the end of the list. The\n    // resulting list is the set that would belong to the root's parent, if\n    // it had one; that is, all the effects in the tree including the root.\n    if (finishedWork.lastEffect !== null) {\n      finishedWork.lastEffect.nextEffect = finishedWork;\n      firstEffect = finishedWork.firstEffect;\n    } else {\n      firstEffect = finishedWork;\n    }\n  } else {\n    // There is no effect on the root.\n    firstEffect = finishedWork.firstEffect;\n  }\n\n  prepareForCommit(root.containerInfo);\n\n  // Invoke instances of getSnapshotBeforeUpdate before mutation.\n  nextEffect = firstEffect;\n  startCommitSnapshotEffectsTimer();\n  while (nextEffect !== null) {\n    let didError = false;\n    let error;\n    if (__DEV__) {\n      invokeGuardedCallback(null, commitBeforeMutationLifecycles, null);\n      if (hasCaughtError()) {\n        didError = true;\n        error = clearCaughtError();\n      }\n    } else {\n      try {\n        commitBeforeMutationLifecycles();\n      } catch (e) {\n        didError = true;\n        error = e;\n      }\n    }\n    if (didError) {\n      invariant(\n        nextEffect !== null,\n        'Should have next effect. This error is likely caused by a bug ' +\n          'in React. Please file an issue.',\n      );\n      captureCommitPhaseError(nextEffect, error);\n      // Clean-up\n      if (nextEffect !== null) {\n        nextEffect = nextEffect.nextEffect;\n      }\n    }\n  }\n  stopCommitSnapshotEffectsTimer();\n\n  if (enableProfilerTimer) {\n    // Mark the current commit time to be shared by all Profilers in this batch.\n    // This enables them to be grouped later.\n    recordCommitTime();\n  }\n\n  // Commit all the side-effects within a tree. We'll do this in two passes.\n  // The first pass performs all the host insertions, updates, deletions and\n  // ref unmounts.\n  nextEffect = firstEffect;\n  startCommitHostEffectsTimer();\n  while (nextEffect !== null) {\n    let didError = false;\n    let error;\n    if (__DEV__) {\n      invokeGuardedCallback(null, commitAllHostEffects, null);\n      if (hasCaughtError()) {\n        didError = true;\n        error = clearCaughtError();\n      }\n    } else {\n      try {\n        commitAllHostEffects();\n      } catch (e) {\n        didError = true;\n        error = e;\n      }\n    }\n    if (didError) {\n      invariant(\n        nextEffect !== null,\n        'Should have next effect. This error is likely caused by a bug ' +\n          'in React. Please file an issue.',\n      );\n      captureCommitPhaseError(nextEffect, error);\n      // Clean-up\n      if (nextEffect !== null) {\n        nextEffect = nextEffect.nextEffect;\n      }\n    }\n  }\n  stopCommitHostEffectsTimer();\n\n  resetAfterCommit(root.containerInfo);\n\n  // The work-in-progress tree is now the current tree. This must come after\n  // the first pass of the commit phase, so that the previous tree is still\n  // current during componentWillUnmount, but before the second pass, so that\n  // the finished work is current during componentDidMount/Update.\n  root.current = finishedWork;\n\n  // In the second pass we'll perform all life-cycles and ref callbacks.\n  // Life-cycles happen as a separate pass so that all placements, updates,\n  // and deletions in the entire tree have already been invoked.\n  // This pass also triggers any renderer-specific initial effects.\n  nextEffect = firstEffect;\n  startCommitLifeCyclesTimer();\n  while (nextEffect !== null) {\n    let didError = false;\n    let error;\n    if (__DEV__) {\n      invokeGuardedCallback(\n        null,\n        commitAllLifeCycles,\n        null,\n        root,\n        committedExpirationTime,\n      );\n      if (hasCaughtError()) {\n        didError = true;\n        error = clearCaughtError();\n      }\n    } else {\n      try {\n        commitAllLifeCycles(root, committedExpirationTime);\n      } catch (e) {\n        didError = true;\n        error = e;\n      }\n    }\n    if (didError) {\n      invariant(\n        nextEffect !== null,\n        'Should have next effect. This error is likely caused by a bug ' +\n          'in React. Please file an issue.',\n      );\n      captureCommitPhaseError(nextEffect, error);\n      if (nextEffect !== null) {\n        nextEffect = nextEffect.nextEffect;\n      }\n    }\n  }\n\n  if (firstEffect !== null && rootWithPendingPassiveEffects !== null) {\n    // This commit included a passive effect. These do not need to fire until\n    // after the next paint. Schedule an callback to fire them in an async\n    // event. To ensure serial execution, the callback will be flushed early if\n    // we enter rootWithPendingPassiveEffects commit phase before then.\n    let callback = commitPassiveEffects.bind(null, root, firstEffect);\n    if (enableSchedulerTracing) {\n      // TODO: Avoid this extra callback by mutating the tracing ref directly,\n      // like we do at the beginning of commitRoot. I've opted not to do that\n      // here because that code is still in flux.\n      callback = Scheduler_tracing_wrap(callback);\n    }\n    passiveEffectCallbackHandle = runWithPriority(NormalPriority, () => {\n      return schedulePassiveEffects(callback);\n    });\n    passiveEffectCallback = callback;\n  }\n\n  isCommitting = false;\n  isWorking = false;\n  stopCommitLifeCyclesTimer();\n  stopCommitTimer();\n  onCommitRoot(finishedWork.stateNode);\n  if (__DEV__ && ReactFiberInstrumentation.debugTool) {\n    ReactFiberInstrumentation.debugTool.onCommitWork(finishedWork);\n  }\n\n  const updateExpirationTimeAfterCommit = finishedWork.expirationTime;\n  const childExpirationTimeAfterCommit = finishedWork.childExpirationTime;\n  const earliestRemainingTimeAfterCommit =\n    childExpirationTimeAfterCommit > updateExpirationTimeAfterCommit\n      ? childExpirationTimeAfterCommit\n      : updateExpirationTimeAfterCommit;\n  if (earliestRemainingTimeAfterCommit === NoWork) {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n  onCommit(root, earliestRemainingTimeAfterCommit);\n\n  if (enableSchedulerTracing) {\n    __interactionsRef.current = prevInteractions;\n\n    let subscriber;\n\n    try {\n      subscriber = __subscriberRef.current;\n      if (subscriber !== null && root.memoizedInteractions.size > 0) {\n        const threadID = computeThreadID(\n          committedExpirationTime,\n          root.interactionThreadID,\n        );\n        subscriber.onWorkStopped(root.memoizedInteractions, threadID);\n      }\n    } catch (error) {\n      // It's not safe for commitRoot() to throw.\n      // Store the error for now and we'll re-throw in finishRendering().\n      if (!hasUnhandledError) {\n        hasUnhandledError = true;\n        unhandledError = error;\n      }\n    } finally {\n      // Clear completed interactions from the pending Map.\n      // Unless the render was suspended or cascading work was scheduled,\n      // In which case– leave pending interactions until the subsequent render.\n      const pendingInteractionMap = root.pendingInteractionMap;\n      pendingInteractionMap.forEach(\n        (scheduledInteractions, scheduledExpirationTime) => {\n          // Only decrement the pending interaction count if we're done.\n          // If there's still work at the current priority,\n          // That indicates that we are waiting for suspense data.\n          if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {\n            pendingInteractionMap.delete(scheduledExpirationTime);\n\n            scheduledInteractions.forEach(interaction => {\n              interaction.__count--;\n\n              if (subscriber !== null && interaction.__count === 0) {\n                try {\n                  subscriber.onInteractionScheduledWorkCompleted(interaction);\n                } catch (error) {\n                  // It's not safe for commitRoot() to throw.\n                  // Store the error for now and we'll re-throw in finishRendering().\n                  if (!hasUnhandledError) {\n                    hasUnhandledError = true;\n                    unhandledError = error;\n                  }\n                }\n              }\n            });\n          }\n        },\n      );\n    }\n  }\n}\n\nfunction resetChildExpirationTime(\n  workInProgress: Fiber,\n  renderTime: ExpirationTime,\n) {\n  if (renderTime !== Never && workInProgress.childExpirationTime === Never) {\n    // The children of this component are hidden. Don't bubble their\n    // expiration times.\n    return;\n  }\n\n  let newChildExpirationTime = NoWork;\n\n  // Bubble up the earliest expiration time.\n  if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n    // We're in profiling mode.\n    // Let's use this same traversal to update the render durations.\n    let actualDuration = workInProgress.actualDuration;\n    let treeBaseDuration = workInProgress.selfBaseDuration;\n\n    // When a fiber is cloned, its actualDuration is reset to 0.\n    // This value will only be updated if work is done on the fiber (i.e. it doesn't bailout).\n    // When work is done, it should bubble to the parent's actualDuration.\n    // If the fiber has not been cloned though, (meaning no work was done),\n    // Then this value will reflect the amount of time spent working on a previous render.\n    // In that case it should not bubble.\n    // We determine whether it was cloned by comparing the child pointer.\n    const shouldBubbleActualDurations =\n      workInProgress.alternate === null ||\n      workInProgress.child !== workInProgress.alternate.child;\n\n    let child = workInProgress.child;\n    while (child !== null) {\n      const childUpdateExpirationTime = child.expirationTime;\n      const childChildExpirationTime = child.childExpirationTime;\n      if (childUpdateExpirationTime > newChildExpirationTime) {\n        newChildExpirationTime = childUpdateExpirationTime;\n      }\n      if (childChildExpirationTime > newChildExpirationTime) {\n        newChildExpirationTime = childChildExpirationTime;\n      }\n      if (shouldBubbleActualDurations) {\n        actualDuration += child.actualDuration;\n      }\n      treeBaseDuration += child.treeBaseDuration;\n      child = child.sibling;\n    }\n    workInProgress.actualDuration = actualDuration;\n    workInProgress.treeBaseDuration = treeBaseDuration;\n  } else {\n    let child = workInProgress.child;\n    while (child !== null) {\n      const childUpdateExpirationTime = child.expirationTime;\n      const childChildExpirationTime = child.childExpirationTime;\n      if (childUpdateExpirationTime > newChildExpirationTime) {\n        newChildExpirationTime = childUpdateExpirationTime;\n      }\n      if (childChildExpirationTime > newChildExpirationTime) {\n        newChildExpirationTime = childChildExpirationTime;\n      }\n      child = child.sibling;\n    }\n  }\n\n  workInProgress.childExpirationTime = newChildExpirationTime;\n}\n\nfunction completeUnitOfWork(workInProgress: Fiber): Fiber | null {\n  // Attempt to complete the current unit of work, then move to the\n  // next sibling. If there are no more siblings, return to the\n  // parent fiber.\n  while (true) {\n    // The current, flushed, state of this fiber is the alternate.\n    // Ideally nothing should rely on this, but relying on it here\n    // means that we don't need an additional field on the work in\n    // progress.\n    const current = workInProgress.alternate;\n    if (__DEV__) {\n      setCurrentFiber(workInProgress);\n    }\n\n    const returnFiber = workInProgress.return;\n    const siblingFiber = workInProgress.sibling;\n\n    if ((workInProgress.effectTag & Incomplete) === NoEffect) {\n      if (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n        // Don't replay if it fails during completion phase.\n        mayReplayFailedUnitOfWork = false;\n      }\n      // This fiber completed.\n      // Remember we're completing this unit so we can find a boundary if it fails.\n      nextUnitOfWork = workInProgress;\n      if (enableProfilerTimer) {\n        if (workInProgress.mode & ProfileMode) {\n          startProfilerTimer(workInProgress);\n        }\n        nextUnitOfWork = completeWork(\n          current,\n          workInProgress,\n          nextRenderExpirationTime,\n        );\n        if (workInProgress.mode & ProfileMode) {\n          // Update render duration assuming we didn't error.\n          stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);\n        }\n      } else {\n        nextUnitOfWork = completeWork(\n          current,\n          workInProgress,\n          nextRenderExpirationTime,\n        );\n      }\n      if (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n        // We're out of completion phase so replaying is fine now.\n        mayReplayFailedUnitOfWork = true;\n      }\n      stopWorkTimer(workInProgress);\n      resetChildExpirationTime(workInProgress, nextRenderExpirationTime);\n      if (__DEV__) {\n        resetCurrentFiber();\n      }\n\n      if (nextUnitOfWork !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        return nextUnitOfWork;\n      }\n\n      if (\n        returnFiber !== null &&\n        // Do not append effects to parents if a sibling failed to complete\n        (returnFiber.effectTag & Incomplete) === NoEffect\n      ) {\n        // Append all the effects of the subtree and this fiber onto the effect\n        // list of the parent. The completion order of the children affects the\n        // side-effect order.\n        if (returnFiber.firstEffect === null) {\n          returnFiber.firstEffect = workInProgress.firstEffect;\n        }\n        if (workInProgress.lastEffect !== null) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;\n          }\n          returnFiber.lastEffect = workInProgress.lastEffect;\n        }\n\n        // If this fiber had side-effects, we append it AFTER the children's\n        // side-effects. We can perform certain side-effects earlier if\n        // needed, by doing multiple passes over the effect list. We don't want\n        // to schedule our own side-effect on our own list because if end up\n        // reusing children we'll schedule this effect onto itself since we're\n        // at the end.\n        const effectTag = workInProgress.effectTag;\n        // Skip both NoWork and PerformedWork tags when creating the effect list.\n        // PerformedWork effect is read by React DevTools but shouldn't be committed.\n        if (effectTag > PerformedWork) {\n          if (returnFiber.lastEffect !== null) {\n            returnFiber.lastEffect.nextEffect = workInProgress;\n          } else {\n            returnFiber.firstEffect = workInProgress;\n          }\n          returnFiber.lastEffect = workInProgress;\n        }\n      }\n\n      if (__DEV__ && ReactFiberInstrumentation.debugTool) {\n        ReactFiberInstrumentation.debugTool.onCompleteWork(workInProgress);\n      }\n\n      if (siblingFiber !== null) {\n        // If there is more work to do in this returnFiber, do that next.\n        return siblingFiber;\n      } else if (returnFiber !== null) {\n        // If there's no more work in this returnFiber. Complete the returnFiber.\n        workInProgress = returnFiber;\n        continue;\n      } else {\n        // We've reached the root.\n        return null;\n      }\n    } else {\n      if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);\n\n        // Include the time spent working on failed children before continuing.\n        let actualDuration = workInProgress.actualDuration;\n        let child = workInProgress.child;\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n        workInProgress.actualDuration = actualDuration;\n      }\n\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      const next = unwindWork(workInProgress, nextRenderExpirationTime);\n      // Because this fiber did not complete, don't reset its expiration time.\n      if (workInProgress.effectTag & DidCapture) {\n        // Restarting an error boundary\n        stopFailedWorkTimer(workInProgress);\n      } else {\n        stopWorkTimer(workInProgress);\n      }\n\n      if (__DEV__) {\n        resetCurrentFiber();\n      }\n\n      if (next !== null) {\n        stopWorkTimer(workInProgress);\n        if (__DEV__ && ReactFiberInstrumentation.debugTool) {\n          ReactFiberInstrumentation.debugTool.onCompleteWork(workInProgress);\n        }\n\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        next.effectTag &= HostEffectMask;\n        return next;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its effect list.\n        returnFiber.firstEffect = returnFiber.lastEffect = null;\n        returnFiber.effectTag |= Incomplete;\n      }\n\n      if (__DEV__ && ReactFiberInstrumentation.debugTool) {\n        ReactFiberInstrumentation.debugTool.onCompleteWork(workInProgress);\n      }\n\n      if (siblingFiber !== null) {\n        // If there is more work to do in this returnFiber, do that next.\n        return siblingFiber;\n      } else if (returnFiber !== null) {\n        // If there's no more work in this returnFiber. Complete the returnFiber.\n        workInProgress = returnFiber;\n        continue;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  // Without this explicit null return Flow complains of invalid return type\n  // TODO Remove the above while(true) loop\n  // eslint-disable-next-line no-unreachable\n  return null;\n}\n\nfunction performUnitOfWork(workInProgress: Fiber): Fiber | null {\n  // The current, flushed, state of this fiber is the alternate.\n  // Ideally nothing should rely on this, but relying on it here\n  // means that we don't need an additional field on the work in\n  // progress.\n  const current = workInProgress.alternate;\n\n  // See if beginning this work spawns more work.\n  startWorkTimer(workInProgress);\n  if (__DEV__) {\n    setCurrentFiber(workInProgress);\n  }\n\n  if (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n    stashedWorkInProgressProperties = assignFiberPropertiesInDEV(\n      stashedWorkInProgressProperties,\n      workInProgress,\n    );\n  }\n\n  let next;\n  if (enableProfilerTimer) {\n    if (workInProgress.mode & ProfileMode) {\n      startProfilerTimer(workInProgress);\n    }\n\n    next = beginWork(current, workInProgress, nextRenderExpirationTime);\n    workInProgress.memoizedProps = workInProgress.pendingProps;\n\n    if (workInProgress.mode & ProfileMode) {\n      // Record the render duration assuming we didn't bailout (or error).\n      stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);\n    }\n  } else {\n    next = beginWork(current, workInProgress, nextRenderExpirationTime);\n    workInProgress.memoizedProps = workInProgress.pendingProps;\n  }\n\n  if (__DEV__) {\n    resetCurrentFiber();\n    if (isReplayingFailedUnitOfWork) {\n      // Currently replaying a failed unit of work. This should be unreachable,\n      // because the render phase is meant to be idempotent, and it should\n      // have thrown again. Since it didn't, rethrow the original error, so\n      // React's internal stack is not misaligned.\n      rethrowOriginalError();\n    }\n  }\n  if (__DEV__ && ReactFiberInstrumentation.debugTool) {\n    ReactFiberInstrumentation.debugTool.onBeginWork(workInProgress);\n  }\n\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    next = completeUnitOfWork(workInProgress);\n  }\n\n  ReactCurrentOwner.current = null;\n\n  return next;\n}\n\nfunction workLoop(isYieldy) {\n  if (!isYieldy) {\n    // Flush work without yielding\n    while (nextUnitOfWork !== null) {\n      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    }\n  } else {\n    // Flush asynchronous work until there's a higher priority event\n    while (nextUnitOfWork !== null && !shouldYieldToRenderer()) {\n      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    }\n  }\n}\n\nfunction renderRoot(root: FiberRoot, isYieldy: boolean): void {\n  invariant(\n    !isWorking,\n    'renderRoot was called recursively. This error is likely caused ' +\n      'by a bug in React. Please file an issue.',\n  );\n\n  flushPassiveEffects();\n\n  isWorking = true;\n  const previousDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  const expirationTime = root.nextExpirationTimeToWorkOn;\n\n  // Check if we're starting from a fresh stack, or if we're resuming from\n  // previously yielded work.\n  if (\n    expirationTime !== nextRenderExpirationTime ||\n    root !== nextRoot ||\n    nextUnitOfWork === null\n  ) {\n    // Reset the stack and start working from the root.\n    resetStack();\n    nextRoot = root;\n    nextRenderExpirationTime = expirationTime;\n    nextUnitOfWork = createWorkInProgress(\n      nextRoot.current,\n      null,\n      nextRenderExpirationTime,\n    );\n    root.pendingCommitExpirationTime = NoWork;\n\n    if (enableSchedulerTracing) {\n      // Determine which interactions this batch of work currently includes,\n      // So that we can accurately attribute time spent working on it,\n      // And so that cascading work triggered during the render phase will be associated with it.\n      const interactions: Set<Interaction> = new Set();\n      root.pendingInteractionMap.forEach(\n        (scheduledInteractions, scheduledExpirationTime) => {\n          if (scheduledExpirationTime >= expirationTime) {\n            scheduledInteractions.forEach(interaction =>\n              interactions.add(interaction),\n            );\n          }\n        },\n      );\n\n      // Store the current set of interactions on the FiberRoot for a few reasons:\n      // We can re-use it in hot functions like renderRoot() without having to recalculate it.\n      // We will also use it in commitWork() to pass to any Profiler onRender() hooks.\n      // This also provides DevTools with a way to access it when the onCommitRoot() hook is called.\n      root.memoizedInteractions = interactions;\n\n      if (interactions.size > 0) {\n        const subscriber = __subscriberRef.current;\n        if (subscriber !== null) {\n          const threadID = computeThreadID(\n            expirationTime,\n            root.interactionThreadID,\n          );\n          try {\n            subscriber.onWorkStarted(interactions, threadID);\n          } catch (error) {\n            // Work thrown by an interaction tracing subscriber should be rethrown,\n            // But only once it's safe (to avoid leaving the scheduler in an invalid state).\n            // Store the error for now and we'll re-throw in finishRendering().\n            if (!hasUnhandledError) {\n              hasUnhandledError = true;\n              unhandledError = error;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  let prevInteractions: Set<Interaction> = (null: any);\n  if (enableSchedulerTracing) {\n    // We're about to start new traced work.\n    // Restore pending interactions so cascading work triggered during the render phase will be accounted for.\n    prevInteractions = __interactionsRef.current;\n    __interactionsRef.current = root.memoizedInteractions;\n  }\n\n  let didFatal = false;\n\n  startWorkLoopTimer(nextUnitOfWork);\n\n  do {\n    try {\n      workLoop(isYieldy);\n    } catch (thrownValue) {\n      resetContextDependences();\n      resetHooks();\n\n      // Reset in case completion throws.\n      // This is only used in DEV and when replaying is on.\n      let mayReplay;\n      if (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n        mayReplay = mayReplayFailedUnitOfWork;\n        mayReplayFailedUnitOfWork = true;\n      }\n\n      if (nextUnitOfWork === null) {\n        // This is a fatal error.\n        didFatal = true;\n        onUncaughtError(thrownValue);\n      } else {\n        if (enableProfilerTimer && nextUnitOfWork.mode & ProfileMode) {\n          // Record the time spent rendering before an error was thrown.\n          // This avoids inaccurate Profiler durations in the case of a suspended render.\n          stopProfilerTimerIfRunningAndRecordDelta(nextUnitOfWork, true);\n        }\n\n        if (__DEV__) {\n          // Reset global debug state\n          // We assume this is defined in DEV\n          (resetCurrentlyProcessingQueue: any)();\n        }\n\n        if (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n          if (mayReplay) {\n            const failedUnitOfWork: Fiber = nextUnitOfWork;\n            replayUnitOfWork(failedUnitOfWork, thrownValue, isYieldy);\n          }\n        }\n\n        // TODO: we already know this isn't true in some cases.\n        // At least this shows a nicer error message until we figure out the cause.\n        // https://github.com/facebook/react/issues/12449#issuecomment-386727431\n        invariant(\n          nextUnitOfWork !== null,\n          'Failed to replay rendering after an error. This ' +\n            'is likely caused by a bug in React. Please file an issue ' +\n            'with a reproducing case to help us find it.',\n        );\n\n        const sourceFiber: Fiber = nextUnitOfWork;\n        let returnFiber = sourceFiber.return;\n        if (returnFiber === null) {\n          // This is the root. The root could capture its own errors. However,\n          // we don't know if it errors before or after we pushed the host\n          // context. This information is needed to avoid a stack mismatch.\n          // Because we're not sure, treat this as a fatal error. We could track\n          // which phase it fails in, but doesn't seem worth it. At least\n          // for now.\n          didFatal = true;\n          onUncaughtError(thrownValue);\n        } else {\n          throwException(\n            root,\n            returnFiber,\n            sourceFiber,\n            thrownValue,\n            nextRenderExpirationTime,\n          );\n          nextUnitOfWork = completeUnitOfWork(sourceFiber);\n          continue;\n        }\n      }\n    }\n    break;\n  } while (true);\n\n  if (enableSchedulerTracing) {\n    // Traced work is done for now; restore the previous interactions.\n    __interactionsRef.current = prevInteractions;\n  }\n\n  // We're done performing work. Time to clean up.\n  isWorking = false;\n  ReactCurrentDispatcher.current = previousDispatcher;\n  resetContextDependences();\n  resetHooks();\n\n  // Yield back to main thread.\n  if (didFatal) {\n    const didCompleteRoot = false;\n    stopWorkLoopTimer(interruptedBy, didCompleteRoot);\n    interruptedBy = null;\n    // There was a fatal error.\n    if (__DEV__) {\n      resetStackAfterFatalErrorInDev();\n    }\n    // `nextRoot` points to the in-progress root. A non-null value indicates\n    // that we're in the middle of an async render. Set it to null to indicate\n    // there's no more work to be done in the current batch.\n    nextRoot = null;\n    onFatal(root);\n    return;\n  }\n\n  if (nextUnitOfWork !== null) {\n    // There's still remaining async work in this tree, but we ran out of time\n    // in the current frame. Yield back to the renderer. Unless we're\n    // interrupted by a higher priority update, we'll continue later from where\n    // we left off.\n    const didCompleteRoot = false;\n    stopWorkLoopTimer(interruptedBy, didCompleteRoot);\n    interruptedBy = null;\n    onYield(root);\n    return;\n  }\n\n  // We completed the whole tree.\n  const didCompleteRoot = true;\n  stopWorkLoopTimer(interruptedBy, didCompleteRoot);\n  const rootWorkInProgress = root.current.alternate;\n  invariant(\n    rootWorkInProgress !== null,\n    'Finished root should have a work-in-progress. This error is likely ' +\n      'caused by a bug in React. Please file an issue.',\n  );\n\n  // `nextRoot` points to the in-progress root. A non-null value indicates\n  // that we're in the middle of an async render. Set it to null to indicate\n  // there's no more work to be done in the current batch.\n  nextRoot = null;\n  interruptedBy = null;\n\n  if (nextRenderDidError) {\n    // There was an error\n    if (hasLowerPriorityWork(root, expirationTime)) {\n      // There's lower priority work. If so, it may have the effect of fixing\n      // the exception that was just thrown. Exit without committing. This is\n      // similar to a suspend, but without a timeout because we're not waiting\n      // for a promise to resolve. React will restart at the lower\n      // priority level.\n      markSuspendedPriorityLevel(root, expirationTime);\n      const suspendedExpirationTime = expirationTime;\n      const rootExpirationTime = root.expirationTime;\n      onSuspend(\n        root,\n        rootWorkInProgress,\n        suspendedExpirationTime,\n        rootExpirationTime,\n        -1, // Indicates no timeout\n      );\n      return;\n    } else if (\n      // There's no lower priority work, but we're rendering asynchronously.\n      // Synchronously attempt to render the same level one more time. This is\n      // similar to a suspend, but without a timeout because we're not waiting\n      // for a promise to resolve.\n      !root.didError &&\n      isYieldy\n    ) {\n      root.didError = true;\n      const suspendedExpirationTime = (root.nextExpirationTimeToWorkOn = expirationTime);\n      const rootExpirationTime = (root.expirationTime = Sync);\n      onSuspend(\n        root,\n        rootWorkInProgress,\n        suspendedExpirationTime,\n        rootExpirationTime,\n        -1, // Indicates no timeout\n      );\n      return;\n    }\n  }\n\n  if (isYieldy && nextLatestAbsoluteTimeoutMs !== -1) {\n    // The tree was suspended.\n    const suspendedExpirationTime = expirationTime;\n    markSuspendedPriorityLevel(root, suspendedExpirationTime);\n\n    // Find the earliest uncommitted expiration time in the tree, including\n    // work that is suspended. The timeout threshold cannot be longer than\n    // the overall expiration.\n    const earliestExpirationTime = findEarliestOutstandingPriorityLevel(\n      root,\n      expirationTime,\n    );\n    const earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);\n    if (earliestExpirationTimeMs < nextLatestAbsoluteTimeoutMs) {\n      nextLatestAbsoluteTimeoutMs = earliestExpirationTimeMs;\n    }\n\n    // Subtract the current time from the absolute timeout to get the number\n    // of milliseconds until the timeout. In other words, convert an absolute\n    // timestamp to a relative time. This is the value that is passed\n    // to `setTimeout`.\n    const currentTimeMs = expirationTimeToMs(requestCurrentTime());\n    let msUntilTimeout = nextLatestAbsoluteTimeoutMs - currentTimeMs;\n    msUntilTimeout = msUntilTimeout < 0 ? 0 : msUntilTimeout;\n\n    // TODO: Account for the Just Noticeable Difference\n\n    const rootExpirationTime = root.expirationTime;\n    onSuspend(\n      root,\n      rootWorkInProgress,\n      suspendedExpirationTime,\n      rootExpirationTime,\n      msUntilTimeout,\n    );\n    return;\n  }\n\n  // Ready to commit.\n  onComplete(root, rootWorkInProgress, expirationTime);\n}\n\nfunction captureCommitPhaseError(sourceFiber: Fiber, value: mixed) {\n  const expirationTime = Sync;\n  let fiber = sourceFiber.return;\n  while (fiber !== null) {\n    switch (fiber.tag) {\n      case ClassComponent:\n        const ctor = fiber.type;\n        const instance = fiber.stateNode;\n        if (\n          typeof ctor.getDerivedStateFromError === 'function' ||\n          (typeof instance.componentDidCatch === 'function' &&\n            !isAlreadyFailedLegacyErrorBoundary(instance))\n        ) {\n          const errorInfo = createCapturedValue(value, sourceFiber);\n          const update = createClassErrorUpdate(\n            fiber,\n            errorInfo,\n            expirationTime,\n          );\n          enqueueUpdate(fiber, update);\n          scheduleWork(fiber, expirationTime);\n          return;\n        }\n        break;\n      case HostRoot: {\n        const errorInfo = createCapturedValue(value, sourceFiber);\n        const update = createRootErrorUpdate(fiber, errorInfo, expirationTime);\n        enqueueUpdate(fiber, update);\n        scheduleWork(fiber, expirationTime);\n        return;\n      }\n    }\n    fiber = fiber.return;\n  }\n\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    const rootFiber = sourceFiber;\n    const errorInfo = createCapturedValue(value, rootFiber);\n    const update = createRootErrorUpdate(rootFiber, errorInfo, expirationTime);\n    enqueueUpdate(rootFiber, update);\n    scheduleWork(rootFiber, expirationTime);\n  }\n}\n\nfunction computeThreadID(\n  expirationTime: ExpirationTime,\n  interactionThreadID: number,\n): number {\n  // Interaction threads are unique per root and expiration time.\n  return expirationTime * 1000 + interactionThreadID;\n}\n\n// Creates a unique async expiration time.\nfunction computeUniqueAsyncExpiration(): ExpirationTime {\n  const currentTime = requestCurrentTime();\n  let result = computeAsyncExpiration(currentTime);\n  if (result >= lastUniqueAsyncExpiration) {\n    // Since we assume the current time monotonically increases, we only hit\n    // this branch when computeUniqueAsyncExpiration is fired multiple times\n    // within a 200ms window (or whatever the async bucket size is).\n    result = lastUniqueAsyncExpiration - 1;\n  }\n  lastUniqueAsyncExpiration = result;\n  return lastUniqueAsyncExpiration;\n}\n\nfunction computeExpirationForFiber(currentTime: ExpirationTime, fiber: Fiber) {\n  const priorityLevel = getCurrentPriorityLevel();\n\n  let expirationTime;\n  if ((fiber.mode & ConcurrentMode) === NoContext) {\n    // Outside of concurrent mode, updates are always synchronous.\n    expirationTime = Sync;\n  } else if (isWorking && !isCommitting) {\n    // During render phase, updates expire during as the current render.\n    expirationTime = nextRenderExpirationTime;\n  } else {\n    switch (priorityLevel) {\n      case ImmediatePriority:\n        expirationTime = Sync;\n        break;\n      case UserBlockingPriority:\n        expirationTime = computeInteractiveExpiration(currentTime);\n        break;\n      case NormalPriority:\n        // This is a normal, concurrent update\n        expirationTime = computeAsyncExpiration(currentTime);\n        break;\n      case LowPriority:\n      case IdlePriority:\n        expirationTime = Never;\n        break;\n      default:\n        invariant(\n          false,\n          'Unknown priority level. This error is likely caused by a bug in ' +\n            'React. Please file an issue.',\n        );\n    }\n\n    // If we're in the middle of rendering a tree, do not update at the same\n    // expiration time that is already rendering.\n    if (nextRoot !== null && expirationTime === nextRenderExpirationTime) {\n      expirationTime -= 1;\n    }\n  }\n\n  // Keep track of the lowest pending interactive expiration time. This\n  // allows us to synchronously flush all interactive updates\n  // when needed.\n  // TODO: Move this to renderer?\n  if (\n    priorityLevel === UserBlockingPriority &&\n    (lowestPriorityPendingInteractiveExpirationTime === NoWork ||\n      expirationTime < lowestPriorityPendingInteractiveExpirationTime)\n  ) {\n    lowestPriorityPendingInteractiveExpirationTime = expirationTime;\n  }\n\n  return expirationTime;\n}\n\nfunction renderDidSuspend(\n  root: FiberRoot,\n  absoluteTimeoutMs: number,\n  suspendedTime: ExpirationTime,\n) {\n  // Schedule the timeout.\n  if (\n    absoluteTimeoutMs >= 0 &&\n    nextLatestAbsoluteTimeoutMs < absoluteTimeoutMs\n  ) {\n    nextLatestAbsoluteTimeoutMs = absoluteTimeoutMs;\n  }\n}\n\nfunction renderDidError() {\n  nextRenderDidError = true;\n}\n\nfunction pingSuspendedRoot(\n  root: FiberRoot,\n  thenable: Thenable,\n  pingTime: ExpirationTime,\n) {\n  // A promise that previously suspended React from committing has resolved.\n  // If React is still suspended, try again at the previous level (pingTime).\n\n  const pingCache = root.pingCache;\n  if (pingCache !== null) {\n    // The thenable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(thenable);\n  }\n\n  if (nextRoot !== null && nextRenderExpirationTime === pingTime) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. Restart from the root.\n    nextRoot = null;\n  } else {\n    // Confirm that the root is still suspended at this level. Otherwise exit.\n    if (isPriorityLevelSuspended(root, pingTime)) {\n      // Ping at the original level\n      markPingedPriorityLevel(root, pingTime);\n      const rootExpirationTime = root.expirationTime;\n      if (rootExpirationTime !== NoWork) {\n        requestWork(root, rootExpirationTime);\n      }\n    }\n  }\n}\n\nfunction retryTimedOutBoundary(boundaryFiber: Fiber, thenable: Thenable) {\n  // The boundary fiber (a Suspense component) previously timed out and was\n  // rendered in its fallback state. One of the promises that suspended it has\n  // resolved, which means at least part of the tree was likely unblocked. Try\n  // rendering again, at a new expiration time.\n\n  let retryCache: WeakSet<Thenable> | Set<Thenable> | null;\n  if (enableSuspenseServerRenderer) {\n    switch (boundaryFiber.tag) {\n      case SuspenseComponent:\n        retryCache = boundaryFiber.stateNode;\n        break;\n      case DehydratedSuspenseComponent:\n        retryCache = boundaryFiber.memoizedState;\n        break;\n      default:\n        invariant(\n          false,\n          'Pinged unknown suspense boundary type. ' +\n            'This is probably a bug in React.',\n        );\n    }\n  } else {\n    retryCache = boundaryFiber.stateNode;\n  }\n  if (retryCache !== null) {\n    // The thenable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(thenable);\n  }\n\n  const currentTime = requestCurrentTime();\n  const retryTime = computeExpirationForFiber(currentTime, boundaryFiber);\n  const root = scheduleWorkToRoot(boundaryFiber, retryTime);\n  if (root !== null) {\n    markPendingPriorityLevel(root, retryTime);\n    const rootExpirationTime = root.expirationTime;\n    if (rootExpirationTime !== NoWork) {\n      requestWork(root, rootExpirationTime);\n    }\n  }\n}\n\nfunction scheduleWorkToRoot(fiber: Fiber, expirationTime): FiberRoot | null {\n  recordScheduleUpdate();\n\n  if (__DEV__) {\n    if (fiber.tag === ClassComponent) {\n      const instance = fiber.stateNode;\n      warnAboutInvalidUpdates(instance);\n    }\n  }\n\n  // Update the source fiber's expiration time\n  if (fiber.expirationTime < expirationTime) {\n    fiber.expirationTime = expirationTime;\n  }\n  let alternate = fiber.alternate;\n  if (alternate !== null && alternate.expirationTime < expirationTime) {\n    alternate.expirationTime = expirationTime;\n  }\n  // Walk the parent path to the root and update the child expiration time.\n  let node = fiber.return;\n  let root = null;\n  if (node === null && fiber.tag === HostRoot) {\n    root = fiber.stateNode;\n  } else {\n    while (node !== null) {\n      alternate = node.alternate;\n      if (node.childExpirationTime < expirationTime) {\n        node.childExpirationTime = expirationTime;\n        if (\n          alternate !== null &&\n          alternate.childExpirationTime < expirationTime\n        ) {\n          alternate.childExpirationTime = expirationTime;\n        }\n      } else if (\n        alternate !== null &&\n        alternate.childExpirationTime < expirationTime\n      ) {\n        alternate.childExpirationTime = expirationTime;\n      }\n      if (node.return === null && node.tag === HostRoot) {\n        root = node.stateNode;\n        break;\n      }\n      node = node.return;\n    }\n  }\n\n  if (enableSchedulerTracing) {\n    if (root !== null) {\n      const interactions = __interactionsRef.current;\n      if (interactions.size > 0) {\n        const pendingInteractionMap = root.pendingInteractionMap;\n        const pendingInteractions = pendingInteractionMap.get(expirationTime);\n        if (pendingInteractions != null) {\n          interactions.forEach(interaction => {\n            if (!pendingInteractions.has(interaction)) {\n              // Update the pending async work count for previously unscheduled interaction.\n              interaction.__count++;\n            }\n\n            pendingInteractions.add(interaction);\n          });\n        } else {\n          pendingInteractionMap.set(expirationTime, new Set(interactions));\n\n          // Update the pending async work count for the current interactions.\n          interactions.forEach(interaction => {\n            interaction.__count++;\n          });\n        }\n\n        const subscriber = __subscriberRef.current;\n        if (subscriber !== null) {\n          const threadID = computeThreadID(\n            expirationTime,\n            root.interactionThreadID,\n          );\n          subscriber.onWorkScheduled(interactions, threadID);\n        }\n      }\n    }\n  }\n  return root;\n}\n\nexport function warnIfNotCurrentlyBatchingInDev(fiber: Fiber): void {\n  if (__DEV__) {\n    if (isRendering === false && isBatchingUpdates === false) {\n      warningWithoutStack(\n        false,\n        'An update to %s inside a test was not wrapped in act(...).\\n\\n' +\n          'When testing, code that causes React state updates should be wrapped into act(...):\\n\\n' +\n          'act(() => {\\n' +\n          '  /* fire events that update state */\\n' +\n          '});\\n' +\n          '/* assert on the output */\\n\\n' +\n          \"This ensures that you're testing the behavior the user would see in the browser.\" +\n          ' Learn more at https://fb.me/react-wrap-tests-with-act' +\n          '%s',\n        getComponentName(fiber.type),\n        getStackByFiberInDevAndProd(fiber),\n      );\n    }\n  }\n}\n\nfunction scheduleWork(fiber: Fiber, expirationTime: ExpirationTime) {\n  const root = scheduleWorkToRoot(fiber, expirationTime);\n  if (root === null) {\n    if (__DEV__) {\n      switch (fiber.tag) {\n        case ClassComponent:\n          warnAboutUpdateOnUnmounted(fiber, true);\n          break;\n        case FunctionComponent:\n        case ForwardRef:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          warnAboutUpdateOnUnmounted(fiber, false);\n          break;\n      }\n    }\n    return;\n  }\n\n  if (\n    !isWorking &&\n    nextRenderExpirationTime !== NoWork &&\n    expirationTime > nextRenderExpirationTime\n  ) {\n    // This is an interruption. (Used for performance tracking.)\n    interruptedBy = fiber;\n    resetStack();\n  }\n  markPendingPriorityLevel(root, expirationTime);\n  if (\n    // If we're in the render phase, we don't need to schedule this root\n    // for an update, because we'll do it before we exit...\n    !isWorking ||\n    isCommitting ||\n    // ...unless this is a different root than the one we're rendering.\n    nextRoot !== root\n  ) {\n    const rootExpirationTime = root.expirationTime;\n    requestWork(root, rootExpirationTime);\n  }\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    // Reset this back to zero so subsequent updates don't throw.\n    nestedUpdateCount = 0;\n    invariant(\n      false,\n      'Maximum update depth exceeded. This can happen when a ' +\n        'component repeatedly calls setState inside ' +\n        'componentWillUpdate or componentDidUpdate. React limits ' +\n        'the number of nested updates to prevent infinite loops.',\n    );\n  }\n}\n\nfunction syncUpdates<A, B, C0, D, R>(\n  fn: (A, B, C0, D) => R,\n  a: A,\n  b: B,\n  c: C0,\n  d: D,\n): R {\n  return runWithPriority(ImmediatePriority, () => {\n    return fn(a, b, c, d);\n  });\n}\n\n// TODO: Everything below this is written as if it has been lifted to the\n// renderers. I'll do this in a follow-up.\n\n// Linked-list of roots\nlet firstScheduledRoot: FiberRoot | null = null;\nlet lastScheduledRoot: FiberRoot | null = null;\n\nlet callbackExpirationTime: ExpirationTime = NoWork;\nlet callbackID: *;\nlet isRendering: boolean = false;\nlet nextFlushedRoot: FiberRoot | null = null;\nlet nextFlushedExpirationTime: ExpirationTime = NoWork;\nlet lowestPriorityPendingInteractiveExpirationTime: ExpirationTime = NoWork;\nlet hasUnhandledError: boolean = false;\nlet unhandledError: mixed | null = null;\n\nlet isBatchingUpdates: boolean = false;\nlet isUnbatchingUpdates: boolean = false;\n\nlet completedBatches: Array<Batch> | null = null;\n\nlet originalStartTimeMs: number = now();\nlet currentRendererTime: ExpirationTime = msToExpirationTime(\n  originalStartTimeMs,\n);\nlet currentSchedulerTime: ExpirationTime = currentRendererTime;\n\n// Use these to prevent an infinite loop of nested updates\nconst NESTED_UPDATE_LIMIT = 50;\nlet nestedUpdateCount: number = 0;\nlet lastCommittedRootDuringThisBatch: FiberRoot | null = null;\n\nfunction recomputeCurrentRendererTime() {\n  const currentTimeMs = now() - originalStartTimeMs;\n  currentRendererTime = msToExpirationTime(currentTimeMs);\n}\n\nfunction scheduleCallbackWithExpirationTime(\n  root: FiberRoot,\n  expirationTime: ExpirationTime,\n) {\n  if (callbackExpirationTime !== NoWork) {\n    // A callback is already scheduled. Check its expiration time (timeout).\n    if (expirationTime < callbackExpirationTime) {\n      // Existing callback has sufficient timeout. Exit.\n      return;\n    } else {\n      if (callbackID !== null) {\n        // Existing callback has insufficient timeout. Cancel and schedule a\n        // new one.\n        cancelDeferredCallback(callbackID);\n      }\n    }\n    // The request callback timer is already running. Don't start a new one.\n  } else {\n    startRequestCallbackTimer();\n  }\n\n  callbackExpirationTime = expirationTime;\n  const currentMs = now() - originalStartTimeMs;\n  const expirationTimeMs = expirationTimeToMs(expirationTime);\n  const timeout = expirationTimeMs - currentMs;\n  callbackID = scheduleDeferredCallback(performAsyncWork, {timeout});\n}\n\n// For every call to renderRoot, one of onFatal, onComplete, onSuspend, and\n// onYield is called upon exiting. We use these in lieu of returning a tuple.\n// I've also chosen not to inline them into renderRoot because these will\n// eventually be lifted into the renderer.\nfunction onFatal(root) {\n  root.finishedWork = null;\n}\n\nfunction onComplete(\n  root: FiberRoot,\n  finishedWork: Fiber,\n  expirationTime: ExpirationTime,\n) {\n  root.pendingCommitExpirationTime = expirationTime;\n  root.finishedWork = finishedWork;\n}\n\nfunction onSuspend(\n  root: FiberRoot,\n  finishedWork: Fiber,\n  suspendedExpirationTime: ExpirationTime,\n  rootExpirationTime: ExpirationTime,\n  msUntilTimeout: number,\n): void {\n  root.expirationTime = rootExpirationTime;\n  if (msUntilTimeout === 0 && !shouldYieldToRenderer()) {\n    // Don't wait an additional tick. Commit the tree immediately.\n    root.pendingCommitExpirationTime = suspendedExpirationTime;\n    root.finishedWork = finishedWork;\n  } else if (msUntilTimeout > 0) {\n    // Wait `msUntilTimeout` milliseconds before committing.\n    root.timeoutHandle = scheduleTimeout(\n      onTimeout.bind(null, root, finishedWork, suspendedExpirationTime),\n      msUntilTimeout,\n    );\n  }\n}\n\nfunction onYield(root) {\n  root.finishedWork = null;\n}\n\nfunction onTimeout(root, finishedWork, suspendedExpirationTime) {\n  // The root timed out. Commit it.\n  root.pendingCommitExpirationTime = suspendedExpirationTime;\n  root.finishedWork = finishedWork;\n  // Read the current time before entering the commit phase. We can be\n  // certain this won't cause tearing related to batching of event updates\n  // because we're at the top of a timer event.\n  recomputeCurrentRendererTime();\n  currentSchedulerTime = currentRendererTime;\n  flushRoot(root, suspendedExpirationTime);\n}\n\nfunction onCommit(root, expirationTime) {\n  root.expirationTime = expirationTime;\n  root.finishedWork = null;\n}\n\nfunction requestCurrentTime() {\n  // requestCurrentTime is called by the scheduler to compute an expiration\n  // time.\n  //\n  // Expiration times are computed by adding to the current time (the start\n  // time). However, if two updates are scheduled within the same event, we\n  // should treat their start times as simultaneous, even if the actual clock\n  // time has advanced between the first and second call.\n\n  // In other words, because expiration times determine how updates are batched,\n  // we want all updates of like priority that occur within the same event to\n  // receive the same expiration time. Otherwise we get tearing.\n  //\n  // We keep track of two separate times: the current \"renderer\" time and the\n  // current \"scheduler\" time. The renderer time can be updated whenever; it\n  // only exists to minimize the calls performance.now.\n  //\n  // But the scheduler time can only be updated if there's no pending work, or\n  // if we know for certain that we're not in the middle of an event.\n\n  if (isRendering) {\n    // We're already rendering. Return the most recently read time.\n    return currentSchedulerTime;\n  }\n  // Check if there's pending work.\n  findHighestPriorityRoot();\n  if (\n    nextFlushedExpirationTime === NoWork ||\n    nextFlushedExpirationTime === Never\n  ) {\n    // If there's no pending work, or if the pending work is offscreen, we can\n    // read the current time without risk of tearing.\n    recomputeCurrentRendererTime();\n    currentSchedulerTime = currentRendererTime;\n    return currentSchedulerTime;\n  }\n  // There's already pending work. We might be in the middle of a browser\n  // event. If we were to read the current time, it could cause multiple updates\n  // within the same event to receive different expiration times, leading to\n  // tearing. Return the last read time. During the next idle callback, the\n  // time will be updated.\n  return currentSchedulerTime;\n}\n\n// requestWork is called by the scheduler whenever a root receives an update.\n// It's up to the renderer to call renderRoot at some point in the future.\nfunction requestWork(root: FiberRoot, expirationTime: ExpirationTime) {\n  addRootToSchedule(root, expirationTime);\n  if (isRendering) {\n    // Prevent reentrancy. Remaining work will be scheduled at the end of\n    // the currently rendering batch.\n    return;\n  }\n\n  if (isBatchingUpdates) {\n    // Flush work at the end of the batch.\n    if (isUnbatchingUpdates) {\n      // ...unless we're inside unbatchedUpdates, in which case we should\n      // flush it now.\n      nextFlushedRoot = root;\n      nextFlushedExpirationTime = Sync;\n      performWorkOnRoot(root, Sync, false);\n    }\n    return;\n  }\n\n  // TODO: Get rid of Sync and use current time?\n  if (expirationTime === Sync) {\n    performSyncWork();\n  } else {\n    scheduleCallbackWithExpirationTime(root, expirationTime);\n  }\n}\n\nfunction addRootToSchedule(root: FiberRoot, expirationTime: ExpirationTime) {\n  // Add the root to the schedule.\n  // Check if this root is already part of the schedule.\n  if (root.nextScheduledRoot === null) {\n    // This root is not already scheduled. Add it.\n    root.expirationTime = expirationTime;\n    if (lastScheduledRoot === null) {\n      firstScheduledRoot = lastScheduledRoot = root;\n      root.nextScheduledRoot = root;\n    } else {\n      lastScheduledRoot.nextScheduledRoot = root;\n      lastScheduledRoot = root;\n      lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;\n    }\n  } else {\n    // This root is already scheduled, but its priority may have increased.\n    const remainingExpirationTime = root.expirationTime;\n    if (expirationTime > remainingExpirationTime) {\n      // Update the priority.\n      root.expirationTime = expirationTime;\n    }\n  }\n}\n\nfunction findHighestPriorityRoot() {\n  let highestPriorityWork = NoWork;\n  let highestPriorityRoot = null;\n  if (lastScheduledRoot !== null) {\n    let previousScheduledRoot = lastScheduledRoot;\n    let root = firstScheduledRoot;\n    while (root !== null) {\n      const remainingExpirationTime = root.expirationTime;\n      if (remainingExpirationTime === NoWork) {\n        // This root no longer has work. Remove it from the scheduler.\n\n        // TODO: This check is redudant, but Flow is confused by the branch\n        // below where we set lastScheduledRoot to null, even though we break\n        // from the loop right after.\n        invariant(\n          previousScheduledRoot !== null && lastScheduledRoot !== null,\n          'Should have a previous and last root. This error is likely ' +\n            'caused by a bug in React. Please file an issue.',\n        );\n        if (root === root.nextScheduledRoot) {\n          // This is the only root in the list.\n          root.nextScheduledRoot = null;\n          firstScheduledRoot = lastScheduledRoot = null;\n          break;\n        } else if (root === firstScheduledRoot) {\n          // This is the first root in the list.\n          const next = root.nextScheduledRoot;\n          firstScheduledRoot = next;\n          lastScheduledRoot.nextScheduledRoot = next;\n          root.nextScheduledRoot = null;\n        } else if (root === lastScheduledRoot) {\n          // This is the last root in the list.\n          lastScheduledRoot = previousScheduledRoot;\n          lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;\n          root.nextScheduledRoot = null;\n          break;\n        } else {\n          previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;\n          root.nextScheduledRoot = null;\n        }\n        root = previousScheduledRoot.nextScheduledRoot;\n      } else {\n        if (remainingExpirationTime > highestPriorityWork) {\n          // Update the priority, if it's higher\n          highestPriorityWork = remainingExpirationTime;\n          highestPriorityRoot = root;\n        }\n        if (root === lastScheduledRoot) {\n          break;\n        }\n        if (highestPriorityWork === Sync) {\n          // Sync is highest priority by definition so\n          // we can stop searching.\n          break;\n        }\n        previousScheduledRoot = root;\n        root = root.nextScheduledRoot;\n      }\n    }\n  }\n\n  nextFlushedRoot = highestPriorityRoot;\n  nextFlushedExpirationTime = highestPriorityWork;\n}\n\n// TODO: This wrapper exists because many of the older tests (the ones that use\n// flushDeferredPri) rely on the number of times `shouldYield` is called. We\n// should get rid of it.\nlet didYield: boolean = false;\nfunction shouldYieldToRenderer() {\n  if (didYield) {\n    return true;\n  }\n  if (shouldYield()) {\n    didYield = true;\n    return true;\n  }\n  return false;\n}\n\nfunction performAsyncWork() {\n  try {\n    if (!shouldYieldToRenderer()) {\n      // The callback timed out. That means at least one update has expired.\n      // Iterate through the root schedule. If they contain expired work, set\n      // the next render expiration time to the current time. This has the effect\n      // of flushing all expired work in a single batch, instead of flushing each\n      // level one at a time.\n      if (firstScheduledRoot !== null) {\n        recomputeCurrentRendererTime();\n        let root: FiberRoot = firstScheduledRoot;\n        do {\n          didExpireAtExpirationTime(root, currentRendererTime);\n          // The root schedule is circular, so this is never null.\n          root = (root.nextScheduledRoot: any);\n        } while (root !== firstScheduledRoot);\n      }\n    }\n    performWork(NoWork, true);\n  } finally {\n    didYield = false;\n  }\n}\n\nfunction performSyncWork() {\n  performWork(Sync, false);\n}\n\nfunction performWork(minExpirationTime: ExpirationTime, isYieldy: boolean) {\n  // Keep working on roots until there's no more work, or until there's a higher\n  // priority event.\n  findHighestPriorityRoot();\n\n  if (isYieldy) {\n    recomputeCurrentRendererTime();\n    currentSchedulerTime = currentRendererTime;\n\n    if (enableUserTimingAPI) {\n      const didExpire = nextFlushedExpirationTime > currentRendererTime;\n      const timeout = expirationTimeToMs(nextFlushedExpirationTime);\n      stopRequestCallbackTimer(didExpire, timeout);\n    }\n\n    while (\n      nextFlushedRoot !== null &&\n      nextFlushedExpirationTime !== NoWork &&\n      minExpirationTime <= nextFlushedExpirationTime &&\n      !(didYield && currentRendererTime > nextFlushedExpirationTime)\n    ) {\n      performWorkOnRoot(\n        nextFlushedRoot,\n        nextFlushedExpirationTime,\n        currentRendererTime > nextFlushedExpirationTime,\n      );\n      findHighestPriorityRoot();\n      recomputeCurrentRendererTime();\n      currentSchedulerTime = currentRendererTime;\n    }\n  } else {\n    while (\n      nextFlushedRoot !== null &&\n      nextFlushedExpirationTime !== NoWork &&\n      minExpirationTime <= nextFlushedExpirationTime\n    ) {\n      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false);\n      findHighestPriorityRoot();\n    }\n  }\n\n  // We're done flushing work. Either we ran out of time in this callback,\n  // or there's no more work left with sufficient priority.\n\n  // If we're inside a callback, set this to false since we just completed it.\n  if (isYieldy) {\n    callbackExpirationTime = NoWork;\n    callbackID = null;\n  }\n  // If there's work left over, schedule a new callback.\n  if (nextFlushedExpirationTime !== NoWork) {\n    scheduleCallbackWithExpirationTime(\n      ((nextFlushedRoot: any): FiberRoot),\n      nextFlushedExpirationTime,\n    );\n  }\n\n  // Clean-up.\n  finishRendering();\n}\n\nfunction flushRoot(root: FiberRoot, expirationTime: ExpirationTime) {\n  invariant(\n    !isRendering,\n    'work.commit(): Cannot commit while already rendering. This likely ' +\n      'means you attempted to commit from inside a lifecycle method.',\n  );\n  // Perform work on root as if the given expiration time is the current time.\n  // This has the effect of synchronously flushing all work up to and\n  // including the given time.\n  nextFlushedRoot = root;\n  nextFlushedExpirationTime = expirationTime;\n  performWorkOnRoot(root, expirationTime, false);\n  // Flush any sync work that was scheduled by lifecycles\n  performSyncWork();\n}\n\nfunction finishRendering() {\n  nestedUpdateCount = 0;\n  lastCommittedRootDuringThisBatch = null;\n\n  if (completedBatches !== null) {\n    const batches = completedBatches;\n    completedBatches = null;\n    for (let i = 0; i < batches.length; i++) {\n      const batch = batches[i];\n      try {\n        batch._onComplete();\n      } catch (error) {\n        if (!hasUnhandledError) {\n          hasUnhandledError = true;\n          unhandledError = error;\n        }\n      }\n    }\n  }\n\n  if (hasUnhandledError) {\n    const error = unhandledError;\n    unhandledError = null;\n    hasUnhandledError = false;\n    throw error;\n  }\n}\n\nfunction performWorkOnRoot(\n  root: FiberRoot,\n  expirationTime: ExpirationTime,\n  isYieldy: boolean,\n) {\n  invariant(\n    !isRendering,\n    'performWorkOnRoot was called recursively. This error is likely caused ' +\n      'by a bug in React. Please file an issue.',\n  );\n\n  isRendering = true;\n\n  // Check if this is async work or sync/expired work.\n  if (!isYieldy) {\n    // Flush work without yielding.\n    // TODO: Non-yieldy work does not necessarily imply expired work. A renderer\n    // may want to perform some work without yielding, but also without\n    // requiring the root to complete (by triggering placeholders).\n\n    let finishedWork = root.finishedWork;\n    if (finishedWork !== null) {\n      // This root is already complete. We can commit it.\n      completeRoot(root, finishedWork, expirationTime);\n    } else {\n      root.finishedWork = null;\n      // If this root previously suspended, clear its existing timeout, since\n      // we're about to try rendering again.\n      const timeoutHandle = root.timeoutHandle;\n      if (timeoutHandle !== noTimeout) {\n        root.timeoutHandle = noTimeout;\n        // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n        cancelTimeout(timeoutHandle);\n      }\n      renderRoot(root, isYieldy);\n      finishedWork = root.finishedWork;\n      if (finishedWork !== null) {\n        // We've completed the root. Commit it.\n        completeRoot(root, finishedWork, expirationTime);\n      }\n    }\n  } else {\n    // Flush async work.\n    let finishedWork = root.finishedWork;\n    if (finishedWork !== null) {\n      // This root is already complete. We can commit it.\n      completeRoot(root, finishedWork, expirationTime);\n    } else {\n      root.finishedWork = null;\n      // If this root previously suspended, clear its existing timeout, since\n      // we're about to try rendering again.\n      const timeoutHandle = root.timeoutHandle;\n      if (timeoutHandle !== noTimeout) {\n        root.timeoutHandle = noTimeout;\n        // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n        cancelTimeout(timeoutHandle);\n      }\n      renderRoot(root, isYieldy);\n      finishedWork = root.finishedWork;\n      if (finishedWork !== null) {\n        // We've completed the root. Check the if we should yield one more time\n        // before committing.\n        if (!shouldYieldToRenderer()) {\n          // Still time left. Commit the root.\n          completeRoot(root, finishedWork, expirationTime);\n        } else {\n          // There's no time left. Mark this root as complete. We'll come\n          // back and commit it later.\n          root.finishedWork = finishedWork;\n        }\n      }\n    }\n  }\n\n  isRendering = false;\n}\n\nfunction completeRoot(\n  root: FiberRoot,\n  finishedWork: Fiber,\n  expirationTime: ExpirationTime,\n): void {\n  // Check if there's a batch that matches this expiration time.\n  const firstBatch = root.firstBatch;\n  if (firstBatch !== null && firstBatch._expirationTime >= expirationTime) {\n    if (completedBatches === null) {\n      completedBatches = [firstBatch];\n    } else {\n      completedBatches.push(firstBatch);\n    }\n    if (firstBatch._defer) {\n      // This root is blocked from committing by a batch. Unschedule it until\n      // we receive another update.\n      root.finishedWork = finishedWork;\n      root.expirationTime = NoWork;\n      return;\n    }\n  }\n\n  // Commit the root.\n  root.finishedWork = null;\n\n  // Check if this is a nested update (a sync update scheduled during the\n  // commit phase).\n  if (root === lastCommittedRootDuringThisBatch) {\n    // If the next root is the same as the previous root, this is a nested\n    // update. To prevent an infinite loop, increment the nested update count.\n    nestedUpdateCount++;\n  } else {\n    // Reset whenever we switch roots.\n    lastCommittedRootDuringThisBatch = root;\n    nestedUpdateCount = 0;\n  }\n  runWithPriority(ImmediatePriority, () => {\n    commitRoot(root, finishedWork);\n  });\n}\n\nfunction onUncaughtError(error: mixed) {\n  invariant(\n    nextFlushedRoot !== null,\n    'Should be working on a root. This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n  );\n  // Unschedule this root so we don't work on it again until there's\n  // another update.\n  nextFlushedRoot.expirationTime = NoWork;\n  if (!hasUnhandledError) {\n    hasUnhandledError = true;\n    unhandledError = error;\n  }\n}\n\n// TODO: Batching should be implemented at the renderer level, not inside\n// the reconciler.\nfunction batchedUpdates<A, R>(fn: (a: A) => R, a: A): R {\n  const previousIsBatchingUpdates = isBatchingUpdates;\n  isBatchingUpdates = true;\n  try {\n    return fn(a);\n  } finally {\n    isBatchingUpdates = previousIsBatchingUpdates;\n    if (!isBatchingUpdates && !isRendering) {\n      performSyncWork();\n    }\n  }\n}\n\n// TODO: Batching should be implemented at the renderer level, not inside\n// the reconciler.\nfunction unbatchedUpdates<A, R>(fn: (a: A) => R, a: A): R {\n  if (isBatchingUpdates && !isUnbatchingUpdates) {\n    isUnbatchingUpdates = true;\n    try {\n      return fn(a);\n    } finally {\n      isUnbatchingUpdates = false;\n    }\n  }\n  return fn(a);\n}\n\n// TODO: Batching should be implemented at the renderer level, not within\n// the reconciler.\nfunction flushSync<A, R>(fn: (a: A) => R, a: A): R {\n  invariant(\n    !isRendering,\n    'flushSync was called from inside a lifecycle method. It cannot be ' +\n      'called when React is already rendering.',\n  );\n  const previousIsBatchingUpdates = isBatchingUpdates;\n  isBatchingUpdates = true;\n  try {\n    return syncUpdates(fn, a);\n  } finally {\n    isBatchingUpdates = previousIsBatchingUpdates;\n    performSyncWork();\n  }\n}\n\nfunction interactiveUpdates<A, B, R>(fn: (A, B) => R, a: A, b: B): R {\n  // If there are any pending interactive updates, synchronously flush them.\n  // This needs to happen before we read any handlers, because the effect of\n  // the previous event may influence which handlers are called during\n  // this event.\n  if (\n    !isBatchingUpdates &&\n    !isRendering &&\n    lowestPriorityPendingInteractiveExpirationTime !== NoWork\n  ) {\n    // Synchronously flush pending interactive updates.\n    performWork(lowestPriorityPendingInteractiveExpirationTime, false);\n    lowestPriorityPendingInteractiveExpirationTime = NoWork;\n  }\n  const previousIsBatchingUpdates = isBatchingUpdates;\n  isBatchingUpdates = true;\n  try {\n    return runWithPriority(UserBlockingPriority, () => {\n      return fn(a, b);\n    });\n  } finally {\n    isBatchingUpdates = previousIsBatchingUpdates;\n    if (!isBatchingUpdates && !isRendering) {\n      performSyncWork();\n    }\n  }\n}\n\nfunction flushInteractiveUpdates() {\n  if (\n    !isRendering &&\n    lowestPriorityPendingInteractiveExpirationTime !== NoWork\n  ) {\n    // Synchronously flush pending interactive updates.\n    performWork(lowestPriorityPendingInteractiveExpirationTime, false);\n    lowestPriorityPendingInteractiveExpirationTime = NoWork;\n  }\n}\n\nfunction flushControlled(fn: () => mixed): void {\n  const previousIsBatchingUpdates = isBatchingUpdates;\n  isBatchingUpdates = true;\n  try {\n    syncUpdates(fn);\n  } finally {\n    isBatchingUpdates = previousIsBatchingUpdates;\n    if (!isBatchingUpdates && !isRendering) {\n      performSyncWork();\n    }\n  }\n}\n\nexport {\n  requestCurrentTime,\n  computeExpirationForFiber,\n  captureCommitPhaseError,\n  onUncaughtError,\n  renderDidSuspend,\n  renderDidError,\n  pingSuspendedRoot,\n  retryTimedOutBoundary,\n  markLegacyErrorBoundaryAsFailed,\n  isAlreadyFailedLegacyErrorBoundary,\n  scheduleWork,\n  requestWork,\n  flushRoot,\n  batchedUpdates,\n  unbatchedUpdates,\n  flushSync,\n  flushControlled,\n  Scheduler_next as deferredUpdates,\n  syncUpdates,\n  interactiveUpdates,\n  flushInteractiveUpdates,\n  computeUniqueAsyncExpiration,\n  flushPassiveEffects,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\n\nimport {enableProfilerTimer} from 'shared/ReactFeatureFlags';\n\nimport {now} from './ReactFiberHostConfig';\n\nexport type ProfilerTimer = {\n  getCommitTime(): number,\n  recordCommitTime(): void,\n  startProfilerTimer(fiber: Fiber): void,\n  stopProfilerTimerIfRunning(fiber: Fiber): void,\n  stopProfilerTimerIfRunningAndRecordDelta(fiber: Fiber): void,\n};\n\nlet commitTime: number = 0;\nlet profilerStartTime: number = -1;\n\nfunction getCommitTime(): number {\n  return commitTime;\n}\n\nfunction recordCommitTime(): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  commitTime = now();\n}\n\nfunction startProfilerTimer(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  profilerStartTime = now();\n\n  if (((fiber.actualStartTime: any): number) < 0) {\n    fiber.actualStartTime = now();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(\n  fiber: Fiber,\n  overrideBaseTime: boolean,\n): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  if (profilerStartTime >= 0) {\n    const elapsedTime = now() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n    profilerStartTime = -1;\n  }\n}\n\nexport {\n  getCommitTime,\n  recordCommitTime,\n  startProfilerTimer,\n  stopProfilerTimerIfRunning,\n  stopProfilerTimerIfRunningAndRecordDelta,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {\n  Instance,\n  TextInstance,\n  HydratableInstance,\n  SuspenseInstance,\n  Container,\n  HostContext,\n} from './ReactFiberHostConfig';\n\nimport {\n  HostComponent,\n  HostText,\n  HostRoot,\n  SuspenseComponent,\n  DehydratedSuspenseComponent,\n} from 'shared/ReactWorkTags';\nimport {Deletion, Placement} from 'shared/ReactSideEffectTags';\nimport invariant from 'shared/invariant';\n\nimport {createFiberFromHostInstanceForDeletion} from './ReactFiber';\nimport {\n  shouldSetTextContent,\n  supportsHydration,\n  canHydrateInstance,\n  canHydrateTextInstance,\n  canHydrateSuspenseInstance,\n  getNextHydratableSibling,\n  getFirstHydratableChild,\n  hydrateInstance,\n  hydrateTextInstance,\n  getNextHydratableInstanceAfterSuspenseInstance,\n  didNotMatchHydratedContainerTextInstance,\n  didNotMatchHydratedTextInstance,\n  didNotHydrateContainerInstance,\n  didNotHydrateInstance,\n  didNotFindHydratableContainerInstance,\n  didNotFindHydratableContainerTextInstance,\n  didNotFindHydratableContainerSuspenseInstance,\n  didNotFindHydratableInstance,\n  didNotFindHydratableTextInstance,\n  didNotFindHydratableSuspenseInstance,\n} from './ReactFiberHostConfig';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\n\n// The deepest Fiber on the stack involved in a hydration context.\n// This may have been an insertion or a hydration.\nlet hydrationParentFiber: null | Fiber = null;\nlet nextHydratableInstance: null | HydratableInstance = null;\nlet isHydrating: boolean = false;\n\nfunction enterHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n\n  const parentInstance = fiber.stateNode.containerInfo;\n  nextHydratableInstance = getFirstHydratableChild(parentInstance);\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  return true;\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(\n  fiber: Fiber,\n): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n\n  const suspenseInstance = fiber.stateNode;\n  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);\n  popToNextHostParent(fiber);\n  isHydrating = true;\n  return true;\n}\n\nfunction deleteHydratableInstance(\n  returnFiber: Fiber,\n  instance: HydratableInstance,\n) {\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot:\n        didNotHydrateContainerInstance(\n          returnFiber.stateNode.containerInfo,\n          instance,\n        );\n        break;\n      case HostComponent:\n        didNotHydrateInstance(\n          returnFiber.type,\n          returnFiber.memoizedProps,\n          returnFiber.stateNode,\n          instance,\n        );\n        break;\n    }\n  }\n\n  const childToDelete = createFiberFromHostInstanceForDeletion();\n  childToDelete.stateNode = instance;\n  childToDelete.return = returnFiber;\n  childToDelete.effectTag = Deletion;\n\n  // This might seem like it belongs on progressedFirstDeletion. However,\n  // these children are not part of the reconciliation list of children.\n  // Even if we abort and rereconcile the children, that will try to hydrate\n  // again and the nodes are still in the host tree so these will be\n  // recreated.\n  if (returnFiber.lastEffect !== null) {\n    returnFiber.lastEffect.nextEffect = childToDelete;\n    returnFiber.lastEffect = childToDelete;\n  } else {\n    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;\n  }\n}\n\nfunction insertNonHydratedInstance(returnFiber: Fiber, fiber: Fiber) {\n  fiber.effectTag |= Placement;\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot: {\n        const parentContainer = returnFiber.stateNode.containerInfo;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableContainerInstance(parentContainer, type, props);\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableContainerTextInstance(parentContainer, text);\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableContainerSuspenseInstance(parentContainer);\n            break;\n        }\n        break;\n      }\n      case HostComponent: {\n        const parentType = returnFiber.type;\n        const parentProps = returnFiber.memoizedProps;\n        const parentInstance = returnFiber.stateNode;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              type,\n              props,\n            );\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              text,\n            );\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableSuspenseInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n            );\n            break;\n        }\n        break;\n      }\n      default:\n        return;\n    }\n  }\n}\n\nfunction tryHydrate(fiber, nextInstance) {\n  switch (fiber.tag) {\n    case HostComponent: {\n      const type = fiber.type;\n      const props = fiber.pendingProps;\n      const instance = canHydrateInstance(nextInstance, type, props);\n      if (instance !== null) {\n        fiber.stateNode = (instance: Instance);\n        return true;\n      }\n      return false;\n    }\n    case HostText: {\n      const text = fiber.pendingProps;\n      const textInstance = canHydrateTextInstance(nextInstance, text);\n      if (textInstance !== null) {\n        fiber.stateNode = (textInstance: TextInstance);\n        return true;\n      }\n      return false;\n    }\n    case SuspenseComponent: {\n      if (enableSuspenseServerRenderer) {\n        const suspenseInstance = canHydrateSuspenseInstance(nextInstance);\n        if (suspenseInstance !== null) {\n          // Downgrade the tag to a dehydrated component until we've hydrated it.\n          fiber.tag = DehydratedSuspenseComponent;\n          fiber.stateNode = (suspenseInstance: SuspenseInstance);\n          return true;\n        }\n      }\n      return false;\n    }\n    default:\n      return false;\n  }\n}\n\nfunction tryToClaimNextHydratableInstance(fiber: Fiber): void {\n  if (!isHydrating) {\n    return;\n  }\n  let nextInstance = nextHydratableInstance;\n  if (!nextInstance) {\n    // Nothing to hydrate. Make it an insertion.\n    insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n    isHydrating = false;\n    hydrationParentFiber = fiber;\n    return;\n  }\n  const firstAttemptedInstance = nextInstance;\n  if (!tryHydrate(fiber, nextInstance)) {\n    // If we can't hydrate this instance let's try the next one.\n    // We use this as a heuristic. It's based on intuition and not data so it\n    // might be flawed or unnecessary.\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\n      // Nothing to hydrate. Make it an insertion.\n      insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n      isHydrating = false;\n      hydrationParentFiber = fiber;\n      return;\n    }\n    // We matched the next one, we'll now assume that the first one was\n    // superfluous and we'll delete it. Since we can't eagerly delete it\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\n    // fiber associated with it.\n    deleteHydratableInstance(\n      (hydrationParentFiber: any),\n      firstAttemptedInstance,\n    );\n  }\n  hydrationParentFiber = fiber;\n  nextHydratableInstance = getFirstHydratableChild((nextInstance: any));\n}\n\nfunction prepareToHydrateHostInstance(\n  fiber: Fiber,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const instance: Instance = fiber.stateNode;\n  const updatePayload = hydrateInstance(\n    instance,\n    fiber.type,\n    fiber.memoizedProps,\n    rootContainerInstance,\n    hostContext,\n    fiber,\n  );\n  // TODO: Type this specific to this type of component.\n  fiber.updateQueue = (updatePayload: any);\n  // If the update payload indicates that there is a change or if there\n  // is a new ref we mark this as an update.\n  if (updatePayload !== null) {\n    return true;\n  }\n  return false;\n}\n\nfunction prepareToHydrateHostTextInstance(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostTextInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const textInstance: TextInstance = fiber.stateNode;\n  const textContent: string = fiber.memoizedProps;\n  const shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);\n  if (__DEV__) {\n    if (shouldUpdate) {\n      // We assume that prepareToHydrateHostTextInstance is called in a context where the\n      // hydration parent is the parent host component of this host text.\n      const returnFiber = hydrationParentFiber;\n      if (returnFiber !== null) {\n        switch (returnFiber.tag) {\n          case HostRoot: {\n            const parentContainer = returnFiber.stateNode.containerInfo;\n            didNotMatchHydratedContainerTextInstance(\n              parentContainer,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n          case HostComponent: {\n            const parentType = returnFiber.type;\n            const parentProps = returnFiber.memoizedProps;\n            const parentInstance = returnFiber.stateNode;\n            didNotMatchHydratedTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n        }\n      }\n    }\n  }\n  return shouldUpdate;\n}\n\nfunction skipPastDehydratedSuspenseInstance(fiber: Fiber): void {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected skipPastDehydratedSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  let suspenseInstance = fiber.stateNode;\n  invariant(\n    suspenseInstance,\n    'Expected to have a hydrated suspense instance. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n  nextHydratableInstance = getNextHydratableInstanceAfterSuspenseInstance(\n    suspenseInstance,\n  );\n}\n\nfunction popToNextHostParent(fiber: Fiber): void {\n  let parent = fiber.return;\n  while (\n    parent !== null &&\n    parent.tag !== HostComponent &&\n    parent.tag !== HostRoot &&\n    parent.tag !== DehydratedSuspenseComponent\n  ) {\n    parent = parent.return;\n  }\n  hydrationParentFiber = parent;\n}\n\nfunction popHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  if (fiber !== hydrationParentFiber) {\n    // We're deeper than the current hydration context, inside an inserted\n    // tree.\n    return false;\n  }\n  if (!isHydrating) {\n    // If we're not currently hydrating but we're in a hydration context, then\n    // we were an insertion and now need to pop up reenter hydration of our\n    // siblings.\n    popToNextHostParent(fiber);\n    isHydrating = true;\n    return false;\n  }\n\n  const type = fiber.type;\n\n  // If we have any remaining hydratable nodes, we need to delete them now.\n  // We only do this deeper than head and body since they tend to have random\n  // other nodes in them. We also ignore components with pure text content in\n  // side of them.\n  // TODO: Better heuristic.\n  if (\n    fiber.tag !== HostComponent ||\n    (type !== 'head' &&\n      type !== 'body' &&\n      !shouldSetTextContent(type, fiber.memoizedProps))\n  ) {\n    let nextInstance = nextHydratableInstance;\n    while (nextInstance) {\n      deleteHydratableInstance(fiber, nextInstance);\n      nextInstance = getNextHydratableSibling(nextInstance);\n    }\n  }\n\n  popToNextHostParent(fiber);\n  nextHydratableInstance = hydrationParentFiber\n    ? getNextHydratableSibling(fiber.stateNode)\n    : null;\n  return true;\n}\n\nfunction resetHydrationState(): void {\n  if (!supportsHydration) {\n    return;\n  }\n\n  hydrationParentFiber = null;\n  nextHydratableInstance = null;\n  isHydrating = false;\n}\n\nexport {\n  enterHydrationState,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  skipPastDehydratedSuspenseInstance,\n  popHydrationState,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactProviderType, ReactContext} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent';\n\nimport checkPropTypes from 'prop-types/checkPropTypes';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  DehydratedSuspenseComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n} from 'shared/ReactWorkTags';\nimport {\n  NoEffect,\n  PerformedWork,\n  Placement,\n  ContentReset,\n  DidCapture,\n  Update,\n  Ref,\n  Deletion,\n} from 'shared/ReactSideEffectTags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  debugRenderPhaseSideEffects,\n  debugRenderPhaseSideEffectsForStrictMode,\n  enableProfilerTimer,\n  enableSuspenseServerRenderer,\n} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentName from 'shared/getComponentName';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings';\nimport {refineResolvedLazyComponent} from 'shared/ReactLazyComponent';\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\nimport warning from 'shared/warning';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport {\n  setCurrentPhase,\n  getCurrentFiberOwnerNameInDevOrNull,\n  getCurrentFiberStackInDev,\n} from './ReactCurrentFiber';\nimport {startWorkTimer, cancelWorkTimer} from './ReactDebugFiberPerf';\n\nimport {\n  mountChildFibers,\n  reconcileChildFibers,\n  cloneChildFibers,\n} from './ReactChildFiber';\nimport {processUpdateQueue} from './ReactUpdateQueue';\nimport {NoWork, Never} from './ReactFiberExpirationTime';\nimport {\n  ConcurrentMode,\n  NoContext,\n  ProfileMode,\n  StrictMode,\n} from './ReactTypeOfMode';\nimport {\n  shouldSetTextContent,\n  shouldDeprioritizeSubtree,\n} from './ReactFiberHostConfig';\nimport {pushHostContext, pushHostContainer} from './ReactFiberHostContext';\nimport {\n  pushProvider,\n  propagateContextChange,\n  readContext,\n  prepareToReadContext,\n  calculateChangedBits,\n} from './ReactFiberNewContext';\nimport {resetHooks, renderWithHooks, bailoutHooks} from './ReactFiberHooks';\nimport {stopProfilerTimerIfRunning} from './ReactProfilerTimer';\nimport {\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged as hasLegacyContextChanged,\n  pushContextProvider as pushLegacyContextProvider,\n  isContextProvider as isLegacyContextProvider,\n  pushTopLevelContextObject,\n  invalidateContextProvider,\n} from './ReactFiberContext';\nimport {\n  enterHydrationState,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n} from './ReactFiberHydrationContext';\nimport {\n  adoptClassInstance,\n  applyDerivedStateFromProps,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n} from './ReactFiberClassComponent';\nimport {\n  readLazyComponentType,\n  resolveDefaultProps,\n} from './ReactFiberLazyComponent';\nimport {\n  resolveLazyComponentTag,\n  createFiberFromTypeAndProps,\n  createFiberFromFragment,\n  createWorkInProgress,\n  isSimpleFunctionComponent,\n} from './ReactFiber';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nlet didReceiveUpdate: boolean = false;\n\nlet didWarnAboutBadClass;\nlet didWarnAboutContextTypeOnFunctionComponent;\nlet didWarnAboutGetDerivedStateOnFunctionComponent;\nlet didWarnAboutFunctionRefs;\nexport let didWarnAboutReassigningProps;\n\nif (__DEV__) {\n  didWarnAboutBadClass = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n}\n\nexport function reconcileChildren(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderExpirationTime: ExpirationTime,\n) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderExpirationTime,\n    );\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      current.child,\n      nextChildren,\n      renderExpirationTime,\n    );\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(\n  current: Fiber,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderExpirationTime: ExpirationTime,\n) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    current.child,\n    null,\n    renderExpirationTime,\n  );\n  // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their their\n  // identity matches.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    null,\n    nextChildren,\n    renderExpirationTime,\n  );\n}\n\nfunction updateForwardRef(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderExpirationTime: ExpirationTime,\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n          getCurrentFiberStackInDev,\n        );\n      }\n    }\n  }\n\n  const render = Component.render;\n  const ref = workInProgress.ref;\n\n  // The rest is a fork of updateFunctionComponent\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderExpirationTime);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setCurrentPhase('render');\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderExpirationTime,\n    );\n    if (\n      debugRenderPhaseSideEffects ||\n      (debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode)\n    ) {\n      // Only double-render components with Hooks\n      if (workInProgress.memoizedState !== null) {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          render,\n          nextProps,\n          ref,\n          renderExpirationTime,\n        );\n      }\n    }\n    setCurrentPhase(null);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderExpirationTime,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderExpirationTime);\n    return bailoutOnAlreadyFinishedWork(\n      current,\n      workInProgress,\n      renderExpirationTime,\n    );\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  updateExpirationTime,\n  renderExpirationTime: ExpirationTime,\n): null | Fiber {\n  if (current === null) {\n    let type = Component.type;\n    if (\n      isSimpleFunctionComponent(type) &&\n      Component.compare === null &&\n      // SimpleMemoComponent codepath doesn't resolve outer props either.\n      Component.defaultProps === undefined\n    ) {\n      // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = type;\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        type,\n        nextProps,\n        updateExpirationTime,\n        renderExpirationTime,\n      );\n    }\n    if (__DEV__) {\n      const innerPropTypes = type.propTypes;\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(type),\n          getCurrentFiberStackInDev,\n        );\n      }\n    }\n    let child = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      null,\n      workInProgress.mode,\n      renderExpirationTime,\n    );\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n  if (__DEV__) {\n    const type = Component.type;\n    const innerPropTypes = type.propTypes;\n    if (innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(\n        innerPropTypes,\n        nextProps, // Resolved props\n        'prop',\n        getComponentName(type),\n        getCurrentFiberStackInDev,\n      );\n    }\n  }\n  let currentChild = ((current.child: any): Fiber); // This is always exactly one child\n  if (updateExpirationTime < renderExpirationTime) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    const prevProps = currentChild.memoizedProps;\n    // Default to shallow comparison\n    let compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(\n        current,\n        workInProgress,\n        renderExpirationTime,\n      );\n    }\n  }\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  let newChild = createWorkInProgress(\n    currentChild,\n    nextProps,\n    renderExpirationTime,\n  );\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  updateExpirationTime,\n  renderExpirationTime: ExpirationTime,\n): null | Fiber {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      let outerMemoType = workInProgress.elementType;\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        outerMemoType = refineResolvedLazyComponent(outerMemoType);\n      }\n      const outerPropTypes = outerMemoType && (outerMemoType: any).propTypes;\n      if (outerPropTypes) {\n        checkPropTypes(\n          outerPropTypes,\n          nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n          'prop',\n          getComponentName(outerMemoType),\n          getCurrentFiberStackInDev,\n        );\n      }\n      // Inner propTypes will be validated in the function component path.\n    }\n  }\n  if (current !== null) {\n    const prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref\n    ) {\n      didReceiveUpdate = false;\n      if (updateExpirationTime < renderExpirationTime) {\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderExpirationTime,\n        );\n      }\n    }\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderExpirationTime,\n  );\n}\n\nfunction updateFragment(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  const nextChildren = workInProgress.pendingProps;\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction updateMode(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction updateProfiler(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  if (enableProfilerTimer) {\n    workInProgress.effectTag |= Update;\n  }\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction markRef(current: Fiber | null, workInProgress: Fiber) {\n  const ref = workInProgress.ref;\n  if (\n    (current === null && ref !== null) ||\n    (current !== null && current.ref !== ref)\n  ) {\n    // Schedule a Ref effect\n    workInProgress.effectTag |= Ref;\n  }\n}\n\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps: any,\n  renderExpirationTime,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n          getCurrentFiberStackInDev,\n        );\n      }\n    }\n  }\n\n  const unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n  const context = getMaskedContext(workInProgress, unmaskedContext);\n\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderExpirationTime);\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setCurrentPhase('render');\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderExpirationTime,\n    );\n    if (\n      debugRenderPhaseSideEffects ||\n      (debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictMode)\n    ) {\n      // Only double-render components with Hooks\n      if (workInProgress.memoizedState !== null) {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          Component,\n          nextProps,\n          context,\n          renderExpirationTime,\n        );\n      }\n    }\n    setCurrentPhase(null);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderExpirationTime,\n    );\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderExpirationTime);\n    return bailoutOnAlreadyFinishedWork(\n      current,\n      workInProgress,\n      renderExpirationTime,\n    );\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps,\n  renderExpirationTime: ExpirationTime,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentName(Component),\n          getCurrentFiberStackInDev,\n        );\n      }\n    }\n  }\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderExpirationTime);\n\n  const instance = workInProgress.stateNode;\n  let shouldUpdate;\n  if (instance === null) {\n    if (current !== null) {\n      // An class component without an instance only mounts if it suspended\n      // inside a non- concurrent tree, in an inconsistent state. We want to\n      // tree it like a new mount, even though an empty version of it already\n      // committed. Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null;\n      // Since this is conceptually a new fiber, schedule a Placement effect\n      workInProgress.effectTag |= Placement;\n    }\n    // In the initial pass we might need to construct the instance.\n    constructClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderExpirationTime,\n    );\n    mountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderExpirationTime,\n    );\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderExpirationTime,\n    );\n  } else {\n    shouldUpdate = updateClassInstance(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderExpirationTime,\n    );\n  }\n  const nextUnitOfWork = finishClassComponent(\n    current,\n    workInProgress,\n    Component,\n    shouldUpdate,\n    hasContext,\n    renderExpirationTime,\n  );\n  if (__DEV__) {\n    let inst = workInProgress.stateNode;\n    if (inst.props !== nextProps) {\n      warning(\n        didWarnAboutReassigningProps,\n        'It looks like %s is reassigning its own `this.props` while rendering. ' +\n          'This is not supported and can lead to confusing bugs.',\n        getComponentName(workInProgress.type) || 'a component',\n      );\n      didWarnAboutReassigningProps = true;\n    }\n  }\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  shouldUpdate: boolean,\n  hasContext: boolean,\n  renderExpirationTime: ExpirationTime,\n) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n\n  const didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(\n      current,\n      workInProgress,\n      renderExpirationTime,\n    );\n  }\n\n  const instance = workInProgress.stateNode;\n\n  // Rerender\n  ReactCurrentOwner.current = workInProgress;\n  let nextChildren;\n  if (\n    didCaptureError &&\n    typeof Component.getDerivedStateFromError !== 'function'\n  ) {\n    // If we captured an error, but getDerivedStateFrom catch is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    if (enableProfilerTimer) {\n      stopProfilerTimerIfRunning(workInProgress);\n    }\n  } else {\n    if (__DEV__) {\n      setCurrentPhase('render');\n      nextChildren = instance.render();\n      if (\n        debugRenderPhaseSideEffects ||\n        (debugRenderPhaseSideEffectsForStrictMode &&\n          workInProgress.mode & StrictMode)\n      ) {\n        instance.render();\n      }\n      setCurrentPhase(null);\n    } else {\n      nextChildren = instance.render();\n    }\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(\n      current,\n      workInProgress,\n      nextChildren,\n      renderExpirationTime,\n    );\n  } else {\n    reconcileChildren(\n      current,\n      workInProgress,\n      nextChildren,\n      renderExpirationTime,\n    );\n  }\n\n  // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n  workInProgress.memoizedState = instance.state;\n\n  // The context might have changed so we need to recalculate it.\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  const root = (workInProgress.stateNode: FiberRoot);\n  if (root.pendingContext) {\n    pushTopLevelContextObject(\n      workInProgress,\n      root.pendingContext,\n      root.pendingContext !== root.context,\n    );\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderExpirationTime) {\n  pushHostRootContext(workInProgress);\n  const updateQueue = workInProgress.updateQueue;\n  invariant(\n    updateQueue !== null,\n    'If the root does not have an updateQueue, we should have already ' +\n      'bailed out. This error is likely caused by a bug in React. Please ' +\n      'file an issue.',\n  );\n  const nextProps = workInProgress.pendingProps;\n  const prevState = workInProgress.memoizedState;\n  const prevChildren = prevState !== null ? prevState.element : null;\n  processUpdateQueue(\n    workInProgress,\n    updateQueue,\n    nextProps,\n    null,\n    renderExpirationTime,\n  );\n  const nextState = workInProgress.memoizedState;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  const nextChildren = nextState.element;\n  if (nextChildren === prevChildren) {\n    // If the state is the same as before, that's a bailout because we had\n    // no work that expires at this time.\n    resetHydrationState();\n    return bailoutOnAlreadyFinishedWork(\n      current,\n      workInProgress,\n      renderExpirationTime,\n    );\n  }\n  const root: FiberRoot = workInProgress.stateNode;\n  if (\n    (current === null || current.child === null) &&\n    root.hydrate &&\n    enterHydrationState(workInProgress)\n  ) {\n    // If we don't have any current children this might be the first pass.\n    // We always try to hydrate. If this isn't a hydration pass there won't\n    // be any children to hydrate which is effectively the same thing as\n    // not hydrating.\n\n    // This is a bit of a hack. We track the host root as a placement to\n    // know that we're currently in a mounting state. That way isMounted\n    // works as expected. We must reset this before committing.\n    // TODO: Delete this when we delete isMounted and findDOMNode.\n    workInProgress.effectTag |= Placement;\n\n    // Ensure that children mount into this root without tracking\n    // side-effects. This ensures that we don't store Placement effects on\n    // nodes that will be hydrated.\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderExpirationTime,\n    );\n  } else {\n    // Otherwise reset hydration state in case we aborted and resumed another\n    // root.\n    reconcileChildren(\n      current,\n      workInProgress,\n      nextChildren,\n      renderExpirationTime,\n    );\n    resetHydrationState();\n  }\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(current, workInProgress, renderExpirationTime) {\n  pushHostContext(workInProgress);\n\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n\n  const type = workInProgress.type;\n  const nextProps = workInProgress.pendingProps;\n  const prevProps = current !== null ? current.memoizedProps : null;\n\n  let nextChildren = nextProps.children;\n  const isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // We special case a direct text child of a host node. This is a common\n    // case. We won't handle it as a reified child. We will instead handle\n    // this in the host environment that also have access to this prop. That\n    // avoids allocating another HostText fiber and traversing it.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.effectTag |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n\n  // Check the host config to see if the children are offscreen/hidden.\n  if (\n    renderExpirationTime !== Never &&\n    workInProgress.mode & ConcurrentMode &&\n    shouldDeprioritizeSubtree(type, nextProps)\n  ) {\n    // Schedule this fiber to re-render at offscreen priority. Then bailout.\n    workInProgress.expirationTime = workInProgress.childExpirationTime = Never;\n    return null;\n  }\n\n  reconcileChildren(\n    current,\n    workInProgress,\n    nextChildren,\n    renderExpirationTime,\n  );\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n  // Nothing to do here. This is terminal. We'll do the completion step\n  // immediately after.\n  return null;\n}\n\nfunction mountLazyComponent(\n  _current,\n  workInProgress,\n  elementType,\n  updateExpirationTime,\n  renderExpirationTime,\n) {\n  if (_current !== null) {\n    // An lazy component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.effectTag |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  // We can't start a User Timing measurement with correct label yet.\n  // Cancel and resume right after we know the tag.\n  cancelWorkTimer(workInProgress);\n  let Component = readLazyComponentType(elementType);\n  // Store the unwrapped component in the type.\n  workInProgress.type = Component;\n  const resolvedTag = (workInProgress.tag = resolveLazyComponentTag(Component));\n  startWorkTimer(workInProgress);\n  const resolvedProps = resolveDefaultProps(Component, props);\n  let child;\n  switch (resolvedTag) {\n    case FunctionComponent: {\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, Component);\n      }\n      child = updateFunctionComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderExpirationTime,\n      );\n      break;\n    }\n    case ClassComponent: {\n      child = updateClassComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderExpirationTime,\n      );\n      break;\n    }\n    case ForwardRef: {\n      child = updateForwardRef(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderExpirationTime,\n      );\n      break;\n    }\n    case MemoComponent: {\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = Component.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentName(Component),\n              getCurrentFiberStackInDev,\n            );\n          }\n        }\n      }\n      child = updateMemoComponent(\n        null,\n        workInProgress,\n        Component,\n        resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        updateExpirationTime,\n        renderExpirationTime,\n      );\n      break;\n    }\n    default: {\n      let hint = '';\n      if (__DEV__) {\n        if (\n          Component !== null &&\n          typeof Component === 'object' &&\n          Component.$$typeof === REACT_LAZY_TYPE\n        ) {\n          hint = ' Did you wrap a component in React.lazy() more than once?';\n        }\n      }\n      // This message intentionally doesn't mention ForwardRef or MemoComponent\n      // because the fact that it's a separate type of work is an\n      // implementation detail.\n      invariant(\n        false,\n        'Element type is invalid. Received a promise that resolves to: %s. ' +\n          'Lazy element type must resolve to a class or function.%s',\n        Component,\n        hint,\n      );\n    }\n  }\n  return child;\n}\n\nfunction mountIncompleteClassComponent(\n  _current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderExpirationTime,\n) {\n  if (_current !== null) {\n    // An incomplete component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.effectTag |= Placement;\n  }\n\n  // Promote the fiber to a class and try rendering again.\n  workInProgress.tag = ClassComponent;\n\n  // The rest of this function is a fork of `updateClassComponent`\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderExpirationTime);\n\n  constructClassInstance(\n    workInProgress,\n    Component,\n    nextProps,\n    renderExpirationTime,\n  );\n  mountClassInstance(\n    workInProgress,\n    Component,\n    nextProps,\n    renderExpirationTime,\n  );\n\n  return finishClassComponent(\n    null,\n    workInProgress,\n    Component,\n    true,\n    hasContext,\n    renderExpirationTime,\n  );\n}\n\nfunction mountIndeterminateComponent(\n  _current,\n  workInProgress,\n  Component,\n  renderExpirationTime,\n) {\n  if (_current !== null) {\n    // An indeterminate component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.effectTag |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  const unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n  const context = getMaskedContext(workInProgress, unmaskedContext);\n\n  prepareToReadContext(workInProgress, renderExpirationTime);\n\n  let value;\n\n  if (__DEV__) {\n    if (\n      Component.prototype &&\n      typeof Component.prototype.render === 'function'\n    ) {\n      const componentName = getComponentName(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        warningWithoutStack(\n          false,\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\n            'This is likely to cause errors. Change %s to extend React.Component instead.',\n          componentName,\n          componentName,\n        );\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    ReactCurrentOwner.current = workInProgress;\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderExpirationTime,\n    );\n  } else {\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderExpirationTime,\n    );\n  }\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n\n  if (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.render === 'function' &&\n    value.$$typeof === undefined\n  ) {\n    // Proceed under the assumption that this is a class instance\n    workInProgress.tag = ClassComponent;\n\n    // Throw out any hooks that were used.\n    resetHooks();\n\n    // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n    let hasContext = false;\n    if (isLegacyContextProvider(Component)) {\n      hasContext = true;\n      pushLegacyContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState =\n      value.state !== null && value.state !== undefined ? value.state : null;\n\n    const getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    if (typeof getDerivedStateFromProps === 'function') {\n      applyDerivedStateFromProps(\n        workInProgress,\n        Component,\n        getDerivedStateFromProps,\n        props,\n      );\n    }\n\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderExpirationTime);\n    return finishClassComponent(\n      null,\n      workInProgress,\n      Component,\n      true,\n      hasContext,\n      renderExpirationTime,\n    );\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n    if (__DEV__) {\n      if (\n        debugRenderPhaseSideEffects ||\n        (debugRenderPhaseSideEffectsForStrictMode &&\n          workInProgress.mode & StrictMode)\n      ) {\n        // Only double-render components with Hooks\n        if (workInProgress.memoizedState !== null) {\n          value = renderWithHooks(\n            null,\n            workInProgress,\n            Component,\n            props,\n            context,\n            renderExpirationTime,\n          );\n        }\n      }\n    }\n    reconcileChildren(null, workInProgress, value, renderExpirationTime);\n    if (__DEV__) {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress: Fiber, Component: any) {\n  if (Component) {\n    warningWithoutStack(\n      !Component.childContextTypes,\n      '%s(...): childContextTypes cannot be defined on a function component.',\n      Component.displayName || Component.name || 'Component',\n    );\n  }\n  if (workInProgress.ref !== null) {\n    let info = '';\n    const ownerName = getCurrentFiberOwnerNameInDevOrNull();\n    if (ownerName) {\n      info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n    }\n\n    let warningKey = ownerName || workInProgress._debugID || '';\n    const debugSource = workInProgress._debugSource;\n    if (debugSource) {\n      warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n    }\n    if (!didWarnAboutFunctionRefs[warningKey]) {\n      didWarnAboutFunctionRefs[warningKey] = true;\n      warning(\n        false,\n        'Function components cannot be given refs. ' +\n          'Attempts to access this ref will fail. ' +\n          'Did you mean to use React.forwardRef()?%s',\n        info,\n      );\n    }\n  }\n\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    const componentName = getComponentName(Component) || 'Unknown';\n\n    if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {\n      warningWithoutStack(\n        false,\n        '%s: Function components do not support getDerivedStateFromProps.',\n        componentName,\n      );\n      didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;\n    }\n  }\n\n  if (\n    typeof Component.contextType === 'object' &&\n    Component.contextType !== null\n  ) {\n    const componentName = getComponentName(Component) || 'Unknown';\n\n    if (!didWarnAboutContextTypeOnFunctionComponent[componentName]) {\n      warningWithoutStack(\n        false,\n        '%s: Function components do not support contextType.',\n        componentName,\n      );\n      didWarnAboutContextTypeOnFunctionComponent[componentName] = true;\n    }\n  }\n}\n\nfunction updateSuspenseComponent(\n  current,\n  workInProgress,\n  renderExpirationTime,\n) {\n  const mode = workInProgress.mode;\n  const nextProps = workInProgress.pendingProps;\n\n  // We should attempt to render the primary children unless this boundary\n  // already suspended during this render (`alreadyCaptured` is true).\n  let nextState: SuspenseState | null = workInProgress.memoizedState;\n\n  let nextDidTimeout;\n  if ((workInProgress.effectTag & DidCapture) === NoEffect) {\n    // This is the first attempt.\n    nextState = null;\n    nextDidTimeout = false;\n  } else {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    nextState = {\n      timedOutAt: nextState !== null ? nextState.timedOutAt : NoWork,\n    };\n    nextDidTimeout = true;\n    workInProgress.effectTag &= ~DidCapture;\n  }\n\n  // This next part is a bit confusing. If the children timeout, we switch to\n  // showing the fallback children in place of the \"primary\" children.\n  // However, we don't want to delete the primary children because then their\n  // state will be lost (both the React state and the host state, e.g.\n  // uncontrolled form inputs). Instead we keep them mounted and hide them.\n  // Both the fallback children AND the primary children are rendered at the\n  // same time. Once the primary children are un-suspended, we can delete\n  // the fallback children — don't need to preserve their state.\n  //\n  // The two sets of children are siblings in the host environment, but\n  // semantically, for purposes of reconciliation, they are two separate sets.\n  // So we store them using two fragment fibers.\n  //\n  // However, we want to avoid allocating extra fibers for every placeholder.\n  // They're only necessary when the children time out, because that's the\n  // only time when both sets are mounted.\n  //\n  // So, the extra fragment fibers are only used if the children time out.\n  // Otherwise, we render the primary children directly. This requires some\n  // custom reconciliation logic to preserve the state of the primary\n  // children. It's essentially a very basic form of re-parenting.\n\n  // `child` points to the child fiber. In the normal case, this is the first\n  // fiber of the primary children set. In the timed-out case, it's a\n  // a fragment fiber containing the primary children.\n  let child;\n  // `next` points to the next fiber React should render. In the normal case,\n  // it's the same as `child`: the first fiber of the primary children set.\n  // In the timed-out case, it's a fragment fiber containing the *fallback*\n  // children -- we skip over the primary children entirely.\n  let next;\n  if (current === null) {\n    if (enableSuspenseServerRenderer) {\n      // If we're currently hydrating, try to hydrate this boundary.\n      // But only if this has a fallback.\n      if (nextProps.fallback !== undefined) {\n        tryToClaimNextHydratableInstance(workInProgress);\n        // This could've changed the tag if this was a dehydrated suspense component.\n        if (workInProgress.tag === DehydratedSuspenseComponent) {\n          return updateDehydratedSuspenseComponent(\n            null,\n            workInProgress,\n            renderExpirationTime,\n          );\n        }\n      }\n    }\n\n    // This is the initial mount. This branch is pretty simple because there's\n    // no previous state that needs to be preserved.\n    if (nextDidTimeout) {\n      // Mount separate fragments for primary and fallback children.\n      const nextFallbackChildren = nextProps.fallback;\n      const primaryChildFragment = createFiberFromFragment(\n        null,\n        mode,\n        NoWork,\n        null,\n      );\n\n      if ((workInProgress.mode & ConcurrentMode) === NoContext) {\n        // Outside of concurrent mode, we commit the effects from the\n        // partially completed, timed-out tree, too.\n        const progressedState: SuspenseState = workInProgress.memoizedState;\n        const progressedPrimaryChild: Fiber | null =\n          progressedState !== null\n            ? (workInProgress.child: any).child\n            : (workInProgress.child: any);\n        primaryChildFragment.child = progressedPrimaryChild;\n      }\n\n      const fallbackChildFragment = createFiberFromFragment(\n        nextFallbackChildren,\n        mode,\n        renderExpirationTime,\n        null,\n      );\n      primaryChildFragment.sibling = fallbackChildFragment;\n      child = primaryChildFragment;\n      // Skip the primary children, and continue working on the\n      // fallback children.\n      next = fallbackChildFragment;\n      child.return = next.return = workInProgress;\n    } else {\n      // Mount the primary children without an intermediate fragment fiber.\n      const nextPrimaryChildren = nextProps.children;\n      child = next = mountChildFibers(\n        workInProgress,\n        null,\n        nextPrimaryChildren,\n        renderExpirationTime,\n      );\n    }\n  } else {\n    // This is an update. This branch is more complicated because we need to\n    // ensure the state of the primary children is preserved.\n    const prevState = current.memoizedState;\n    const prevDidTimeout = prevState !== null;\n    if (prevDidTimeout) {\n      // The current tree already timed out. That means each child set is\n      // wrapped in a fragment fiber.\n      const currentPrimaryChildFragment: Fiber = (current.child: any);\n      const currentFallbackChildFragment: Fiber = (currentPrimaryChildFragment.sibling: any);\n      if (nextDidTimeout) {\n        // Still timed out. Reuse the current primary children by cloning\n        // its fragment. We're going to skip over these entirely.\n        const nextFallbackChildren = nextProps.fallback;\n        const primaryChildFragment = createWorkInProgress(\n          currentPrimaryChildFragment,\n          currentPrimaryChildFragment.pendingProps,\n          NoWork,\n        );\n\n        if ((workInProgress.mode & ConcurrentMode) === NoContext) {\n          // Outside of concurrent mode, we commit the effects from the\n          // partially completed, timed-out tree, too.\n          const progressedState: SuspenseState = workInProgress.memoizedState;\n          const progressedPrimaryChild: Fiber | null =\n            progressedState !== null\n              ? (workInProgress.child: any).child\n              : (workInProgress.child: any);\n          if (progressedPrimaryChild !== currentPrimaryChildFragment.child) {\n            primaryChildFragment.child = progressedPrimaryChild;\n          }\n        }\n\n        // Because primaryChildFragment is a new fiber that we're inserting as the\n        // parent of a new tree, we need to set its treeBaseDuration.\n        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n          // treeBaseDuration is the sum of all the child tree base durations.\n          let treeBaseDuration = 0;\n          let hiddenChild = primaryChildFragment.child;\n          while (hiddenChild !== null) {\n            treeBaseDuration += hiddenChild.treeBaseDuration;\n            hiddenChild = hiddenChild.sibling;\n          }\n          primaryChildFragment.treeBaseDuration = treeBaseDuration;\n        }\n\n        // Clone the fallback child fragment, too. These we'll continue\n        // working on.\n        const fallbackChildFragment = (primaryChildFragment.sibling = createWorkInProgress(\n          currentFallbackChildFragment,\n          nextFallbackChildren,\n          currentFallbackChildFragment.expirationTime,\n        ));\n        child = primaryChildFragment;\n        primaryChildFragment.childExpirationTime = NoWork;\n        // Skip the primary children, and continue working on the\n        // fallback children.\n        next = fallbackChildFragment;\n        child.return = next.return = workInProgress;\n      } else {\n        // No longer suspended. Switch back to showing the primary children,\n        // and remove the intermediate fragment fiber.\n        const nextPrimaryChildren = nextProps.children;\n        const currentPrimaryChild = currentPrimaryChildFragment.child;\n        const primaryChild = reconcileChildFibers(\n          workInProgress,\n          currentPrimaryChild,\n          nextPrimaryChildren,\n          renderExpirationTime,\n        );\n\n        // If this render doesn't suspend, we need to delete the fallback\n        // children. Wait until the complete phase, after we've confirmed the\n        // fallback is no longer needed.\n        // TODO: Would it be better to store the fallback fragment on\n        // the stateNode?\n\n        // Continue rendering the children, like we normally do.\n        child = next = primaryChild;\n      }\n    } else {\n      // The current tree has not already timed out. That means the primary\n      // children are not wrapped in a fragment fiber.\n      const currentPrimaryChild = current.child;\n      if (nextDidTimeout) {\n        // Timed out. Wrap the children in a fragment fiber to keep them\n        // separate from the fallback children.\n        const nextFallbackChildren = nextProps.fallback;\n        const primaryChildFragment = createFiberFromFragment(\n          // It shouldn't matter what the pending props are because we aren't\n          // going to render this fragment.\n          null,\n          mode,\n          NoWork,\n          null,\n        );\n        primaryChildFragment.child = currentPrimaryChild;\n\n        // Even though we're creating a new fiber, there are no new children,\n        // because we're reusing an already mounted tree. So we don't need to\n        // schedule a placement.\n        // primaryChildFragment.effectTag |= Placement;\n\n        if ((workInProgress.mode & ConcurrentMode) === NoContext) {\n          // Outside of concurrent mode, we commit the effects from the\n          // partially completed, timed-out tree, too.\n          const progressedState: SuspenseState = workInProgress.memoizedState;\n          const progressedPrimaryChild: Fiber | null =\n            progressedState !== null\n              ? (workInProgress.child: any).child\n              : (workInProgress.child: any);\n          primaryChildFragment.child = progressedPrimaryChild;\n        }\n\n        // Because primaryChildFragment is a new fiber that we're inserting as the\n        // parent of a new tree, we need to set its treeBaseDuration.\n        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n          // treeBaseDuration is the sum of all the child tree base durations.\n          let treeBaseDuration = 0;\n          let hiddenChild = primaryChildFragment.child;\n          while (hiddenChild !== null) {\n            treeBaseDuration += hiddenChild.treeBaseDuration;\n            hiddenChild = hiddenChild.sibling;\n          }\n          primaryChildFragment.treeBaseDuration = treeBaseDuration;\n        }\n\n        // Create a fragment from the fallback children, too.\n        const fallbackChildFragment = (primaryChildFragment.sibling = createFiberFromFragment(\n          nextFallbackChildren,\n          mode,\n          renderExpirationTime,\n          null,\n        ));\n        fallbackChildFragment.effectTag |= Placement;\n        child = primaryChildFragment;\n        primaryChildFragment.childExpirationTime = NoWork;\n        // Skip the primary children, and continue working on the\n        // fallback children.\n        next = fallbackChildFragment;\n        child.return = next.return = workInProgress;\n      } else {\n        // Still haven't timed out.  Continue rendering the children, like we\n        // normally do.\n        const nextPrimaryChildren = nextProps.children;\n        next = child = reconcileChildFibers(\n          workInProgress,\n          currentPrimaryChild,\n          nextPrimaryChildren,\n          renderExpirationTime,\n        );\n      }\n    }\n    workInProgress.stateNode = current.stateNode;\n  }\n\n  workInProgress.memoizedState = nextState;\n  workInProgress.child = child;\n  return next;\n}\n\nfunction updateDehydratedSuspenseComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  if (current === null) {\n    // During the first pass, we'll bail out and not drill into the children.\n    // Instead, we'll leave the content in place and try to hydrate it later.\n    workInProgress.expirationTime = Never;\n    return null;\n  }\n  // We use childExpirationTime to indicate that a child might depend on context, so if\n  // any context has changed, we need to treat is as if the input might have changed.\n  const hasContextChanged = current.childExpirationTime >= renderExpirationTime;\n  if (didReceiveUpdate || hasContextChanged) {\n    // This boundary has changed since the first render. This means that we are now unable to\n    // hydrate it. We might still be able to hydrate it using an earlier expiration time but\n    // during this render we can't. Instead, we're going to delete the whole subtree and\n    // instead inject a new real Suspense boundary to take its place, which may render content\n    // or fallback. The real Suspense boundary will suspend for a while so we have some time\n    // to ensure it can produce real content, but all state and pending events will be lost.\n\n    // Detach from the current dehydrated boundary.\n    current.alternate = null;\n    workInProgress.alternate = null;\n\n    // Insert a deletion in the effect list.\n    let returnFiber = workInProgress.return;\n    invariant(\n      returnFiber !== null,\n      'Suspense boundaries are never on the root. ' +\n        'This is probably a bug in React.',\n    );\n    const last = returnFiber.lastEffect;\n    if (last !== null) {\n      last.nextEffect = current;\n      returnFiber.lastEffect = current;\n    } else {\n      returnFiber.firstEffect = returnFiber.lastEffect = current;\n    }\n    current.nextEffect = null;\n    current.effectTag = Deletion;\n\n    // Upgrade this work in progress to a real Suspense component.\n    workInProgress.tag = SuspenseComponent;\n    workInProgress.stateNode = null;\n    workInProgress.memoizedState = null;\n    // This is now an insertion.\n    workInProgress.effectTag |= Placement;\n    // Retry as a real Suspense component.\n    return updateSuspenseComponent(null, workInProgress, renderExpirationTime);\n  }\n  if ((workInProgress.effectTag & DidCapture) === NoEffect) {\n    // This is the first attempt.\n    reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress);\n    const nextProps = workInProgress.pendingProps;\n    const nextChildren = nextProps.children;\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderExpirationTime,\n    );\n    return workInProgress.child;\n  } else {\n    // Something suspended. Leave the existing children in place.\n    // TODO: In non-concurrent mode, should we commit the nodes we have hydrated so far?\n    workInProgress.child = null;\n    return null;\n  }\n}\n\nfunction updatePortalComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  const nextChildren = workInProgress.pendingProps;\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderExpirationTime,\n    );\n  } else {\n    reconcileChildren(\n      current,\n      workInProgress,\n      nextChildren,\n      renderExpirationTime,\n    );\n  }\n  return workInProgress.child;\n}\n\nfunction updateContextProvider(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  const providerType: ReactProviderType<any> = workInProgress.type;\n  const context: ReactContext<any> = providerType._context;\n\n  const newProps = workInProgress.pendingProps;\n  const oldProps = workInProgress.memoizedProps;\n\n  const newValue = newProps.value;\n\n  if (__DEV__) {\n    const providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(\n        providerPropTypes,\n        newProps,\n        'prop',\n        'Context.Provider',\n        getCurrentFiberStackInDev,\n      );\n    }\n  }\n\n  pushProvider(workInProgress, newValue);\n\n  if (oldProps !== null) {\n    const oldValue = oldProps.value;\n    const changedBits = calculateChangedBits(context, newValue, oldValue);\n    if (changedBits === 0) {\n      // No change. Bailout early if children are the same.\n      if (\n        oldProps.children === newProps.children &&\n        !hasLegacyContextChanged()\n      ) {\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderExpirationTime,\n        );\n      }\n    } else {\n      // The context value changed. Search for matching consumers and schedule\n      // them to update.\n      propagateContextChange(\n        workInProgress,\n        context,\n        changedBits,\n        renderExpirationTime,\n      );\n    }\n  }\n\n  const newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderExpirationTime);\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  let context: ReactContext<any> = workInProgress.type;\n  // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n  if (__DEV__) {\n    if ((context: any)._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n          warning(\n            false,\n            'Rendering <Context> directly is not supported and will be removed in ' +\n              'a future major release. Did you mean to render <Context.Consumer> instead?',\n          );\n        }\n      }\n    } else {\n      context = (context: any)._context;\n    }\n  }\n  const newProps = workInProgress.pendingProps;\n  const render = newProps.children;\n\n  if (__DEV__) {\n    warningWithoutStack(\n      typeof render === 'function',\n      'A context consumer was rendered with multiple children, or a child ' +\n        \"that isn't a function. A context consumer expects a single child \" +\n        'that is a function. If you did pass a function, make sure there ' +\n        'is no trailing or leading whitespace around it.',\n    );\n  }\n\n  prepareToReadContext(workInProgress, renderExpirationTime);\n  const newValue = readContext(context, newProps.unstable_observedBits);\n  let newChildren;\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setCurrentPhase('render');\n    newChildren = render(newValue);\n    setCurrentPhase(null);\n  } else {\n    newChildren = render(newValue);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.effectTag |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderExpirationTime);\n  return workInProgress.child;\n}\n\nexport function markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nfunction bailoutOnAlreadyFinishedWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n): Fiber | null {\n  cancelWorkTimer(workInProgress);\n\n  if (current !== null) {\n    // Reuse previous context list\n    workInProgress.contextDependencies = current.contextDependencies;\n  }\n\n  if (enableProfilerTimer) {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning(workInProgress);\n  }\n\n  // Check if the children have any pending work.\n  const childExpirationTime = workInProgress.childExpirationTime;\n  if (childExpirationTime < renderExpirationTime) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n    return null;\n  } else {\n    // This fiber doesn't have work, but its subtree does. Clone the child\n    // fibers and continue.\n    cloneChildFibers(current, workInProgress);\n    return workInProgress.child;\n  }\n}\n\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n): Fiber | null {\n  const updateExpirationTime = workInProgress.expirationTime;\n\n  if (current !== null) {\n    const oldProps = current.memoizedProps;\n    const newProps = workInProgress.pendingProps;\n\n    if (oldProps !== newProps || hasLegacyContextChanged()) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else if (updateExpirationTime < renderExpirationTime) {\n      didReceiveUpdate = false;\n      // This fiber does not have any pending work. Bailout without entering\n      // the begin phase. There's still some bookkeeping we that needs to be done\n      // in this optimized path, mostly pushing stuff onto the stack.\n      switch (workInProgress.tag) {\n        case HostRoot:\n          pushHostRootContext(workInProgress);\n          resetHydrationState();\n          break;\n        case HostComponent:\n          pushHostContext(workInProgress);\n          break;\n        case ClassComponent: {\n          const Component = workInProgress.type;\n          if (isLegacyContextProvider(Component)) {\n            pushLegacyContextProvider(workInProgress);\n          }\n          break;\n        }\n        case HostPortal:\n          pushHostContainer(\n            workInProgress,\n            workInProgress.stateNode.containerInfo,\n          );\n          break;\n        case ContextProvider: {\n          const newValue = workInProgress.memoizedProps.value;\n          pushProvider(workInProgress, newValue);\n          break;\n        }\n        case Profiler:\n          if (enableProfilerTimer) {\n            workInProgress.effectTag |= Update;\n          }\n          break;\n        case SuspenseComponent: {\n          const state: SuspenseState | null = workInProgress.memoizedState;\n          const didTimeout = state !== null;\n          if (didTimeout) {\n            // If this boundary is currently timed out, we need to decide\n            // whether to retry the primary children, or to skip over it and\n            // go straight to the fallback. Check the priority of the primary\n            // child fragment.\n            const primaryChildFragment: Fiber = (workInProgress.child: any);\n            const primaryChildExpirationTime =\n              primaryChildFragment.childExpirationTime;\n            if (\n              primaryChildExpirationTime !== NoWork &&\n              primaryChildExpirationTime >= renderExpirationTime\n            ) {\n              // The primary children have pending work. Use the normal path\n              // to attempt to render the primary children again.\n              return updateSuspenseComponent(\n                current,\n                workInProgress,\n                renderExpirationTime,\n              );\n            } else {\n              // The primary children do not have pending work with sufficient\n              // priority. Bailout.\n              const child = bailoutOnAlreadyFinishedWork(\n                current,\n                workInProgress,\n                renderExpirationTime,\n              );\n              if (child !== null) {\n                // The fallback children have pending work. Skip over the\n                // primary children and work on the fallback.\n                return child.sibling;\n              } else {\n                return null;\n              }\n            }\n          }\n          break;\n        }\n        case DehydratedSuspenseComponent: {\n          if (enableSuspenseServerRenderer) {\n            // We know that this component will suspend again because if it has\n            // been unsuspended it has committed as a regular Suspense component.\n            // If it needs to be retried, it should have work scheduled on it.\n            workInProgress.effectTag |= DidCapture;\n            break;\n          }\n        }\n      }\n      return bailoutOnAlreadyFinishedWork(\n        current,\n        workInProgress,\n        renderExpirationTime,\n      );\n    }\n  } else {\n    didReceiveUpdate = false;\n  }\n\n  // Before entering the begin phase, clear the expiration time.\n  workInProgress.expirationTime = NoWork;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent: {\n      const elementType = workInProgress.elementType;\n      return mountIndeterminateComponent(\n        current,\n        workInProgress,\n        elementType,\n        renderExpirationTime,\n      );\n    }\n    case LazyComponent: {\n      const elementType = workInProgress.elementType;\n      return mountLazyComponent(\n        current,\n        workInProgress,\n        elementType,\n        updateExpirationTime,\n        renderExpirationTime,\n      );\n    }\n    case FunctionComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderExpirationTime,\n      );\n    }\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderExpirationTime,\n      );\n    }\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderExpirationTime);\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderExpirationTime);\n    case HostText:\n      return updateHostText(current, workInProgress);\n    case SuspenseComponent:\n      return updateSuspenseComponent(\n        current,\n        workInProgress,\n        renderExpirationTime,\n      );\n    case HostPortal:\n      return updatePortalComponent(\n        current,\n        workInProgress,\n        renderExpirationTime,\n      );\n    case ForwardRef: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === type\n          ? unresolvedProps\n          : resolveDefaultProps(type, unresolvedProps);\n      return updateForwardRef(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        renderExpirationTime,\n      );\n    }\n    case Fragment:\n      return updateFragment(current, workInProgress, renderExpirationTime);\n    case Mode:\n      return updateMode(current, workInProgress, renderExpirationTime);\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderExpirationTime);\n    case ContextProvider:\n      return updateContextProvider(\n        current,\n        workInProgress,\n        renderExpirationTime,\n      );\n    case ContextConsumer:\n      return updateContextConsumer(\n        current,\n        workInProgress,\n        renderExpirationTime,\n      );\n    case MemoComponent: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      // Resolve outer props first, then resolve inner props.\n      let resolvedProps = resolveDefaultProps(type, unresolvedProps);\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = type.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentName(type),\n              getCurrentFiberStackInDev,\n            );\n          }\n        }\n      }\n      resolvedProps = resolveDefaultProps(type.type, resolvedProps);\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        updateExpirationTime,\n        renderExpirationTime,\n      );\n    }\n    case SimpleMemoComponent: {\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        updateExpirationTime,\n        renderExpirationTime,\n      );\n    }\n    case IncompleteClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return mountIncompleteClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderExpirationTime,\n      );\n    }\n    case DehydratedSuspenseComponent: {\n      if (enableSuspenseServerRenderer) {\n        return updateDehydratedSuspenseComponent(\n          current,\n          workInProgress,\n          renderExpirationTime,\n        );\n      }\n      break;\n    }\n  }\n  invariant(\n    false,\n    'Unknown unit of work tag. This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n  );\n}\n\nexport {beginWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactFiber';\nimport type {StackCursor} from './ReactFiberStack';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\n\nexport type ContextDependencyList = {\n  first: ContextDependency<mixed>,\n  expirationTime: ExpirationTime,\n};\n\ntype ContextDependency<T> = {\n  context: ReactContext<T>,\n  observedBits: number,\n  next: ContextDependency<mixed> | null,\n};\n\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack';\nimport MAX_SIGNED_31_BIT_INT from './maxSigned31BitInt';\nimport {\n  ContextProvider,\n  ClassComponent,\n  DehydratedSuspenseComponent,\n} from 'shared/ReactWorkTags';\n\nimport invariant from 'shared/invariant';\nimport warning from 'shared/warning';\nimport is from 'shared/objectIs';\nimport {\n  createUpdate,\n  enqueueUpdate,\n  ForceUpdate,\n} from 'react-reconciler/src/ReactUpdateQueue';\nimport {NoWork} from './ReactFiberExpirationTime';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\n\nconst valueCursor: StackCursor<mixed> = createCursor(null);\n\nlet rendererSigil;\nif (__DEV__) {\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nlet currentlyRenderingFiber: Fiber | null = null;\nlet lastContextDependency: ContextDependency<mixed> | null = null;\nlet lastContextWithAllBitsObserved: ReactContext<any> | null = null;\n\nlet isDisallowedContextReadInDEV: boolean = false;\n\nexport function resetContextDependences(): void {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function enterDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = true;\n  }\n}\n\nexport function exitDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function pushProvider<T>(providerFiber: Fiber, nextValue: T): void {\n  const context: ReactContext<T> = providerFiber.type._context;\n\n  if (isPrimaryRenderer) {\n    push(valueCursor, context._currentValue, providerFiber);\n\n    context._currentValue = nextValue;\n    if (__DEV__) {\n      warningWithoutStack(\n        context._currentRenderer === undefined ||\n          context._currentRenderer === null ||\n          context._currentRenderer === rendererSigil,\n        'Detected multiple renderers concurrently rendering the ' +\n          'same context provider. This is currently unsupported.',\n      );\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    push(valueCursor, context._currentValue2, providerFiber);\n\n    context._currentValue2 = nextValue;\n    if (__DEV__) {\n      warningWithoutStack(\n        context._currentRenderer2 === undefined ||\n          context._currentRenderer2 === null ||\n          context._currentRenderer2 === rendererSigil,\n        'Detected multiple renderers concurrently rendering the ' +\n          'same context provider. This is currently unsupported.',\n      );\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n}\n\nexport function popProvider(providerFiber: Fiber): void {\n  const currentValue = valueCursor.current;\n\n  pop(valueCursor, providerFiber);\n\n  const context: ReactContext<any> = providerFiber.type._context;\n  if (isPrimaryRenderer) {\n    context._currentValue = currentValue;\n  } else {\n    context._currentValue2 = currentValue;\n  }\n}\n\nexport function calculateChangedBits<T>(\n  context: ReactContext<T>,\n  newValue: T,\n  oldValue: T,\n) {\n  if (is(oldValue, newValue)) {\n    // No change\n    return 0;\n  } else {\n    const changedBits =\n      typeof context._calculateChangedBits === 'function'\n        ? context._calculateChangedBits(oldValue, newValue)\n        : MAX_SIGNED_31_BIT_INT;\n\n    if (__DEV__) {\n      warning(\n        (changedBits & MAX_SIGNED_31_BIT_INT) === changedBits,\n        'calculateChangedBits: Expected the return value to be a ' +\n          '31-bit integer. Instead received: %s',\n        changedBits,\n      );\n    }\n    return changedBits | 0;\n  }\n}\n\nfunction scheduleWorkOnParentPath(\n  parent: Fiber | null,\n  renderExpirationTime: ExpirationTime,\n) {\n  // Update the child expiration time of all the ancestors, including\n  // the alternates.\n  let node = parent;\n  while (node !== null) {\n    let alternate = node.alternate;\n    if (node.childExpirationTime < renderExpirationTime) {\n      node.childExpirationTime = renderExpirationTime;\n      if (\n        alternate !== null &&\n        alternate.childExpirationTime < renderExpirationTime\n      ) {\n        alternate.childExpirationTime = renderExpirationTime;\n      }\n    } else if (\n      alternate !== null &&\n      alternate.childExpirationTime < renderExpirationTime\n    ) {\n      alternate.childExpirationTime = renderExpirationTime;\n    } else {\n      // Neither alternate was updated, which means the rest of the\n      // ancestor path already has sufficient priority.\n      break;\n    }\n    node = node.return;\n  }\n}\n\nexport function propagateContextChange(\n  workInProgress: Fiber,\n  context: ReactContext<mixed>,\n  changedBits: number,\n  renderExpirationTime: ExpirationTime,\n): void {\n  let fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    let nextFiber;\n\n    // Visit this fiber.\n    const list = fiber.contextDependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      let dependency = list.first;\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (\n          dependency.context === context &&\n          (dependency.observedBits & changedBits) !== 0\n        ) {\n          // Match! Schedule an update on this fiber.\n\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            const update = createUpdate(renderExpirationTime);\n            update.tag = ForceUpdate;\n            // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n            enqueueUpdate(fiber, update);\n          }\n\n          if (fiber.expirationTime < renderExpirationTime) {\n            fiber.expirationTime = renderExpirationTime;\n          }\n          let alternate = fiber.alternate;\n          if (\n            alternate !== null &&\n            alternate.expirationTime < renderExpirationTime\n          ) {\n            alternate.expirationTime = renderExpirationTime;\n          }\n\n          scheduleWorkOnParentPath(fiber.return, renderExpirationTime);\n\n          // Mark the expiration time on the list, too.\n          if (list.expirationTime < renderExpirationTime) {\n            list.expirationTime = renderExpirationTime;\n          }\n\n          // Since we already found a match, we can stop traversing the\n          // dependency list.\n          break;\n        }\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (\n      enableSuspenseServerRenderer &&\n      fiber.tag === DehydratedSuspenseComponent\n    ) {\n      // If a dehydrated suspense component is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates on its children.\n      if (fiber.expirationTime < renderExpirationTime) {\n        fiber.expirationTime = renderExpirationTime;\n      }\n      let alternate = fiber.alternate;\n      if (\n        alternate !== null &&\n        alternate.expirationTime < renderExpirationTime\n      ) {\n        alternate.expirationTime = renderExpirationTime;\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childExpirationTime on\n      // this fiber to indicate that a context has changed.\n      scheduleWorkOnParentPath(fiber, renderExpirationTime);\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        let sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nexport function prepareToReadContext(\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n): void {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastContextWithAllBitsObserved = null;\n\n  const currentDependencies = workInProgress.contextDependencies;\n  if (\n    currentDependencies !== null &&\n    currentDependencies.expirationTime >= renderExpirationTime\n  ) {\n    // Context list has a pending update. Mark that this fiber performed work.\n    markWorkInProgressReceivedUpdate();\n  }\n\n  // Reset the work-in-progress list\n  workInProgress.contextDependencies = null;\n}\n\nexport function readContext<T>(\n  context: ReactContext<T>,\n  observedBits: void | number | boolean,\n): T {\n  if (__DEV__) {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    warning(\n      !isDisallowedContextReadInDEV,\n      'Context can only be read while React is rendering. ' +\n        'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n        'In function components, you can read it directly in the function body, but not ' +\n        'inside Hooks like useReducer() or useMemo().',\n    );\n  }\n\n  if (lastContextWithAllBitsObserved === context) {\n    // Nothing to do. We already observe everything in this context.\n  } else if (observedBits === false || observedBits === 0) {\n    // Do not observe any updates.\n  } else {\n    let resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.\n    if (\n      typeof observedBits !== 'number' ||\n      observedBits === MAX_SIGNED_31_BIT_INT\n    ) {\n      // Observe all updates.\n      lastContextWithAllBitsObserved = ((context: any): ReactContext<mixed>);\n      resolvedObservedBits = MAX_SIGNED_31_BIT_INT;\n    } else {\n      resolvedObservedBits = observedBits;\n    }\n\n    let contextItem = {\n      context: ((context: any): ReactContext<mixed>),\n      observedBits: resolvedObservedBits,\n      next: null,\n    };\n\n    if (lastContextDependency === null) {\n      invariant(\n        currentlyRenderingFiber !== null,\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n\n      // This is the first dependency for this component. Create a new list.\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.contextDependencies = {\n        first: contextItem,\n        expirationTime: NoWork,\n      };\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n  return isPrimaryRenderer ? context._currentValue : context._currentValue2;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// UpdateQueue is a linked list of prioritized updates.\n//\n// Like fibers, update queues come in pairs: a current queue, which represents\n// the visible state of the screen, and a work-in-progress queue, which can be\n// mutated and processed asynchronously before it is committed — a form of\n// double buffering. If a work-in-progress render is discarded before finishing,\n// we create a new work-in-progress by cloning the current queue.\n//\n// Both queues share a persistent, singly-linked list structure. To schedule an\n// update, we append it to the end of both queues. Each queue maintains a\n// pointer to first update in the persistent list that hasn't been processed.\n// The work-in-progress pointer always has a position equal to or greater than\n// the current queue, since we always work on that one. The current queue's\n// pointer is only updated during the commit phase, when we swap in the\n// work-in-progress.\n//\n// For example:\n//\n//   Current pointer:           A - B - C - D - E - F\n//   Work-in-progress pointer:              D - E - F\n//                                          ^\n//                                          The work-in-progress queue has\n//                                          processed more updates than current.\n//\n// The reason we append to both queues is because otherwise we might drop\n// updates without ever processing them. For example, if we only add updates to\n// the work-in-progress queue, some updates could be lost whenever a work-in\n// -progress render restarts by cloning from current. Similarly, if we only add\n// updates to the current queue, the updates will be lost whenever an already\n// in-progress queue commits and swaps with the current queue. However, by\n// adding to both queues, we guarantee that the update will be part of the next\n// work-in-progress. (And because the work-in-progress queue becomes the\n// current queue once it commits, there's no danger of applying the same\n// update twice.)\n//\n// Prioritization\n// --------------\n//\n// Updates are not sorted by priority, but by insertion; new updates are always\n// appended to the end of the list.\n//\n// The priority is still important, though. When processing the update queue\n// during the render phase, only the updates with sufficient priority are\n// included in the result. If we skip an update because it has insufficient\n// priority, it remains in the queue to be processed later, during a lower\n// priority render. Crucially, all updates subsequent to a skipped update also\n// remain in the queue *regardless of their priority*. That means high priority\n// updates are sometimes processed twice, at two separate priorities. We also\n// keep track of a base state, that represents the state before the first\n// update in the queue is applied.\n//\n// For example:\n//\n//   Given a base state of '', and the following queue of updates\n//\n//     A1 - B2 - C1 - D2\n//\n//   where the number indicates the priority, and the update is applied to the\n//   previous state by appending a letter, React will process these updates as\n//   two separate renders, one per distinct priority level:\n//\n//   First render, at priority 1:\n//     Base state: ''\n//     Updates: [A1, C1]\n//     Result state: 'AC'\n//\n//   Second render, at priority 2:\n//     Base state: 'A'            <-  The base state does not include C1,\n//                                    because B2 was skipped.\n//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2\n//     Result state: 'ABCD'\n//\n// Because we process updates in insertion order, and rebase high priority\n// updates when preceding updates are skipped, the final result is deterministic\n// regardless of priority. Intermediate state may vary according to system\n// resources, but the final state is always the same.\n\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\n\nimport {NoWork} from './ReactFiberExpirationTime';\nimport {\n  enterDisallowedContextReadInDEV,\n  exitDisallowedContextReadInDEV,\n} from './ReactFiberNewContext';\nimport {Callback, ShouldCapture, DidCapture} from 'shared/ReactSideEffectTags';\nimport {ClassComponent} from 'shared/ReactWorkTags';\n\nimport {\n  debugRenderPhaseSideEffects,\n  debugRenderPhaseSideEffectsForStrictMode,\n} from 'shared/ReactFeatureFlags';\n\nimport {StrictMode} from './ReactTypeOfMode';\n\nimport invariant from 'shared/invariant';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nexport type Update<State> = {\n  expirationTime: ExpirationTime,\n\n  tag: 0 | 1 | 2 | 3,\n  payload: any,\n  callback: (() => mixed) | null,\n\n  next: Update<State> | null,\n  nextEffect: Update<State> | null,\n};\n\nexport type UpdateQueue<State> = {\n  baseState: State,\n\n  firstUpdate: Update<State> | null,\n  lastUpdate: Update<State> | null,\n\n  firstCapturedUpdate: Update<State> | null,\n  lastCapturedUpdate: Update<State> | null,\n\n  firstEffect: Update<State> | null,\n  lastEffect: Update<State> | null,\n\n  firstCapturedEffect: Update<State> | null,\n  lastCapturedEffect: Update<State> | null,\n};\n\nexport const UpdateState = 0;\nexport const ReplaceState = 1;\nexport const ForceUpdate = 2;\nexport const CaptureUpdate = 3;\n\n// Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\nlet hasForceUpdate = false;\n\nlet didWarnUpdateInsideUpdate;\nlet currentlyProcessingQueue;\nexport let resetCurrentlyProcessingQueue;\nif (__DEV__) {\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n  resetCurrentlyProcessingQueue = () => {\n    currentlyProcessingQueue = null;\n  };\n}\n\nexport function createUpdateQueue<State>(baseState: State): UpdateQueue<State> {\n  const queue: UpdateQueue<State> = {\n    baseState,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null,\n  };\n  return queue;\n}\n\nfunction cloneUpdateQueue<State>(\n  currentQueue: UpdateQueue<State>,\n): UpdateQueue<State> {\n  const queue: UpdateQueue<State> = {\n    baseState: currentQueue.baseState,\n    firstUpdate: currentQueue.firstUpdate,\n    lastUpdate: currentQueue.lastUpdate,\n\n    // TODO: With resuming, if we bail out and resuse the child tree, we should\n    // keep these effects.\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n\n    firstEffect: null,\n    lastEffect: null,\n\n    firstCapturedEffect: null,\n    lastCapturedEffect: null,\n  };\n  return queue;\n}\n\nexport function createUpdate(expirationTime: ExpirationTime): Update<*> {\n  return {\n    expirationTime: expirationTime,\n\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n\n    next: null,\n    nextEffect: null,\n  };\n}\n\nfunction appendUpdateToQueue<State>(\n  queue: UpdateQueue<State>,\n  update: Update<State>,\n) {\n  // Append the update to the end of the list.\n  if (queue.lastUpdate === null) {\n    // Queue is empty\n    queue.firstUpdate = queue.lastUpdate = update;\n  } else {\n    queue.lastUpdate.next = update;\n    queue.lastUpdate = update;\n  }\n}\n\nexport function enqueueUpdate<State>(fiber: Fiber, update: Update<State>) {\n  // Update queues are created lazily.\n  const alternate = fiber.alternate;\n  let queue1;\n  let queue2;\n  if (alternate === null) {\n    // There's only one fiber.\n    queue1 = fiber.updateQueue;\n    queue2 = null;\n    if (queue1 === null) {\n      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);\n    }\n  } else {\n    // There are two owners.\n    queue1 = fiber.updateQueue;\n    queue2 = alternate.updateQueue;\n    if (queue1 === null) {\n      if (queue2 === null) {\n        // Neither fiber has an update queue. Create new ones.\n        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);\n        queue2 = alternate.updateQueue = createUpdateQueue(\n          alternate.memoizedState,\n        );\n      } else {\n        // Only one fiber has an update queue. Clone to create a new one.\n        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);\n      }\n    } else {\n      if (queue2 === null) {\n        // Only one fiber has an update queue. Clone to create a new one.\n        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);\n      } else {\n        // Both owners have an update queue.\n      }\n    }\n  }\n  if (queue2 === null || queue1 === queue2) {\n    // There's only a single queue.\n    appendUpdateToQueue(queue1, update);\n  } else {\n    // There are two queues. We need to append the update to both queues,\n    // while accounting for the persistent structure of the list — we don't\n    // want the same update to be added multiple times.\n    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {\n      // One of the queues is not empty. We must add the update to both queues.\n      appendUpdateToQueue(queue1, update);\n      appendUpdateToQueue(queue2, update);\n    } else {\n      // Both queues are non-empty. The last update is the same in both lists,\n      // because of structural sharing. So, only append to one of the lists.\n      appendUpdateToQueue(queue1, update);\n      // But we still need to update the `lastUpdate` pointer of queue2.\n      queue2.lastUpdate = update;\n    }\n  }\n\n  if (__DEV__) {\n    if (\n      fiber.tag === ClassComponent &&\n      (currentlyProcessingQueue === queue1 ||\n        (queue2 !== null && currentlyProcessingQueue === queue2)) &&\n      !didWarnUpdateInsideUpdate\n    ) {\n      warningWithoutStack(\n        false,\n        'An update (setState, replaceState, or forceUpdate) was scheduled ' +\n          'from inside an update function. Update functions should be pure, ' +\n          'with zero side-effects. Consider using componentDidUpdate or a ' +\n          'callback.',\n      );\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n}\n\nexport function enqueueCapturedUpdate<State>(\n  workInProgress: Fiber,\n  update: Update<State>,\n) {\n  // Captured updates go into a separate list, and only on the work-in-\n  // progress queue.\n  let workInProgressQueue = workInProgress.updateQueue;\n  if (workInProgressQueue === null) {\n    workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(\n      workInProgress.memoizedState,\n    );\n  } else {\n    // TODO: I put this here rather than createWorkInProgress so that we don't\n    // clone the queue unnecessarily. There's probably a better way to\n    // structure this.\n    workInProgressQueue = ensureWorkInProgressQueueIsAClone(\n      workInProgress,\n      workInProgressQueue,\n    );\n  }\n\n  // Append the update to the end of the list.\n  if (workInProgressQueue.lastCapturedUpdate === null) {\n    // This is the first render phase update\n    workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;\n  } else {\n    workInProgressQueue.lastCapturedUpdate.next = update;\n    workInProgressQueue.lastCapturedUpdate = update;\n  }\n}\n\nfunction ensureWorkInProgressQueueIsAClone<State>(\n  workInProgress: Fiber,\n  queue: UpdateQueue<State>,\n): UpdateQueue<State> {\n  const current = workInProgress.alternate;\n  if (current !== null) {\n    // If the work-in-progress queue is equal to the current queue,\n    // we need to clone it first.\n    if (queue === current.updateQueue) {\n      queue = workInProgress.updateQueue = cloneUpdateQueue(queue);\n    }\n  }\n  return queue;\n}\n\nfunction getStateFromUpdate<State>(\n  workInProgress: Fiber,\n  queue: UpdateQueue<State>,\n  update: Update<State>,\n  prevState: State,\n  nextProps: any,\n  instance: any,\n): any {\n  switch (update.tag) {\n    case ReplaceState: {\n      const payload = update.payload;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n          if (\n            debugRenderPhaseSideEffects ||\n            (debugRenderPhaseSideEffectsForStrictMode &&\n              workInProgress.mode & StrictMode)\n          ) {\n            payload.call(instance, prevState, nextProps);\n          }\n        }\n        const nextState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          exitDisallowedContextReadInDEV();\n        }\n        return nextState;\n      }\n      // State object\n      return payload;\n    }\n    case CaptureUpdate: {\n      workInProgress.effectTag =\n        (workInProgress.effectTag & ~ShouldCapture) | DidCapture;\n    }\n    // Intentional fallthrough\n    case UpdateState: {\n      const payload = update.payload;\n      let partialState;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n          if (\n            debugRenderPhaseSideEffects ||\n            (debugRenderPhaseSideEffectsForStrictMode &&\n              workInProgress.mode & StrictMode)\n          ) {\n            payload.call(instance, prevState, nextProps);\n          }\n        }\n        partialState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          exitDisallowedContextReadInDEV();\n        }\n      } else {\n        // Partial state object\n        partialState = payload;\n      }\n      if (partialState === null || partialState === undefined) {\n        // Null and undefined are treated as no-ops.\n        return prevState;\n      }\n      // Merge the partial state and the previous state.\n      return Object.assign({}, prevState, partialState);\n    }\n    case ForceUpdate: {\n      hasForceUpdate = true;\n      return prevState;\n    }\n  }\n  return prevState;\n}\n\nexport function processUpdateQueue<State>(\n  workInProgress: Fiber,\n  queue: UpdateQueue<State>,\n  props: any,\n  instance: any,\n  renderExpirationTime: ExpirationTime,\n): void {\n  hasForceUpdate = false;\n\n  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);\n\n  if (__DEV__) {\n    currentlyProcessingQueue = queue;\n  }\n\n  // These values may change as we process the queue.\n  let newBaseState = queue.baseState;\n  let newFirstUpdate = null;\n  let newExpirationTime = NoWork;\n\n  // Iterate through the list of updates to compute the result.\n  let update = queue.firstUpdate;\n  let resultState = newBaseState;\n  while (update !== null) {\n    const updateExpirationTime = update.expirationTime;\n    if (updateExpirationTime < renderExpirationTime) {\n      // This update does not have sufficient priority. Skip it.\n      if (newFirstUpdate === null) {\n        // This is the first skipped update. It will be the first update in\n        // the new list.\n        newFirstUpdate = update;\n        // Since this is the first update that was skipped, the current result\n        // is the new base state.\n        newBaseState = resultState;\n      }\n      // Since this update will remain in the list, update the remaining\n      // expiration time.\n      if (newExpirationTime < updateExpirationTime) {\n        newExpirationTime = updateExpirationTime;\n      }\n    } else {\n      // This update does have sufficient priority. Process it and compute\n      // a new result.\n      resultState = getStateFromUpdate(\n        workInProgress,\n        queue,\n        update,\n        resultState,\n        props,\n        instance,\n      );\n      const callback = update.callback;\n      if (callback !== null) {\n        workInProgress.effectTag |= Callback;\n        // Set this to null, in case it was mutated during an aborted render.\n        update.nextEffect = null;\n        if (queue.lastEffect === null) {\n          queue.firstEffect = queue.lastEffect = update;\n        } else {\n          queue.lastEffect.nextEffect = update;\n          queue.lastEffect = update;\n        }\n      }\n    }\n    // Continue to the next update.\n    update = update.next;\n  }\n\n  // Separately, iterate though the list of captured updates.\n  let newFirstCapturedUpdate = null;\n  update = queue.firstCapturedUpdate;\n  while (update !== null) {\n    const updateExpirationTime = update.expirationTime;\n    if (updateExpirationTime < renderExpirationTime) {\n      // This update does not have sufficient priority. Skip it.\n      if (newFirstCapturedUpdate === null) {\n        // This is the first skipped captured update. It will be the first\n        // update in the new list.\n        newFirstCapturedUpdate = update;\n        // If this is the first update that was skipped, the current result is\n        // the new base state.\n        if (newFirstUpdate === null) {\n          newBaseState = resultState;\n        }\n      }\n      // Since this update will remain in the list, update the remaining\n      // expiration time.\n      if (newExpirationTime < updateExpirationTime) {\n        newExpirationTime = updateExpirationTime;\n      }\n    } else {\n      // This update does have sufficient priority. Process it and compute\n      // a new result.\n      resultState = getStateFromUpdate(\n        workInProgress,\n        queue,\n        update,\n        resultState,\n        props,\n        instance,\n      );\n      const callback = update.callback;\n      if (callback !== null) {\n        workInProgress.effectTag |= Callback;\n        // Set this to null, in case it was mutated during an aborted render.\n        update.nextEffect = null;\n        if (queue.lastCapturedEffect === null) {\n          queue.firstCapturedEffect = queue.lastCapturedEffect = update;\n        } else {\n          queue.lastCapturedEffect.nextEffect = update;\n          queue.lastCapturedEffect = update;\n        }\n      }\n    }\n    update = update.next;\n  }\n\n  if (newFirstUpdate === null) {\n    queue.lastUpdate = null;\n  }\n  if (newFirstCapturedUpdate === null) {\n    queue.lastCapturedUpdate = null;\n  } else {\n    workInProgress.effectTag |= Callback;\n  }\n  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {\n    // We processed every update, without skipping. That means the new base\n    // state is the same as the result state.\n    newBaseState = resultState;\n  }\n\n  queue.baseState = newBaseState;\n  queue.firstUpdate = newFirstUpdate;\n  queue.firstCapturedUpdate = newFirstCapturedUpdate;\n\n  // Set the remaining expiration time to be whatever is remaining in the queue.\n  // This should be fine because the only two other things that contribute to\n  // expiration time are props and context. We're already in the middle of the\n  // begin phase by the time we start processing the queue, so we've already\n  // dealt with the props. Context in components that specify\n  // shouldComponentUpdate is tricky; but we'll have to account for\n  // that regardless.\n  workInProgress.expirationTime = newExpirationTime;\n  workInProgress.memoizedState = resultState;\n\n  if (__DEV__) {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  invariant(\n    typeof callback === 'function',\n    'Invalid argument passed as callback. Expected a function. Instead ' +\n      'received: %s',\n    callback,\n  );\n  callback.call(context);\n}\n\nexport function resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\n\nexport function checkHasForceUpdateAfterProcessing(): boolean {\n  return hasForceUpdate;\n}\n\nexport function commitUpdateQueue<State>(\n  finishedWork: Fiber,\n  finishedQueue: UpdateQueue<State>,\n  instance: any,\n  renderExpirationTime: ExpirationTime,\n): void {\n  // If the finished render included captured updates, and there are still\n  // lower priority updates left over, we need to keep the captured updates\n  // in the queue so that they are rebased and not dropped once we process the\n  // queue again at the lower priority.\n  if (finishedQueue.firstCapturedUpdate !== null) {\n    // Join the captured update list to the end of the normal list.\n    if (finishedQueue.lastUpdate !== null) {\n      finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;\n      finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;\n    }\n    // Clear the list of captured updates.\n    finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;\n  }\n\n  // Commit the effects\n  commitUpdateEffects(finishedQueue.firstEffect, instance);\n  finishedQueue.firstEffect = finishedQueue.lastEffect = null;\n\n  commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);\n  finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;\n}\n\nfunction commitUpdateEffects<State>(\n  effect: Update<State> | null,\n  instance: any,\n): void {\n  while (effect !== null) {\n    const callback = effect.callback;\n    if (callback !== null) {\n      effect.callback = null;\n      callCallback(callback, instance);\n    }\n    effect = effect.nextEffect;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {\n  Instance,\n  Type,\n  Props,\n  Container,\n  ChildSet,\n} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ContextProvider,\n  ContextConsumer,\n  ForwardRef,\n  Fragment,\n  Mode,\n  Profiler,\n  SuspenseComponent,\n  DehydratedSuspenseComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n} from 'shared/ReactWorkTags';\nimport {\n  Placement,\n  Ref,\n  Update,\n  NoEffect,\n  DidCapture,\n  Deletion,\n} from 'shared/ReactSideEffectTags';\nimport invariant from 'shared/invariant';\n\nimport {\n  createInstance,\n  createTextInstance,\n  createHiddenTextInstance,\n  appendInitialChild,\n  finalizeInitialChildren,\n  prepareUpdate,\n  supportsMutation,\n  supportsPersistence,\n  cloneInstance,\n  cloneHiddenInstance,\n  cloneUnhiddenInstance,\n  createContainerChildSet,\n  appendChildToContainerChildSet,\n  finalizeContainerChildren,\n} from './ReactFiberHostConfig';\nimport {\n  getRootHostContainer,\n  popHostContext,\n  getHostContext,\n  popHostContainer,\n} from './ReactFiberHostContext';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext';\nimport {popProvider} from './ReactFiberNewContext';\nimport {\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  skipPastDehydratedSuspenseInstance,\n  popHydrationState,\n} from './ReactFiberHydrationContext';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\n\nfunction markUpdate(workInProgress: Fiber) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.effectTag |= Update;\n}\n\nfunction markRef(workInProgress: Fiber) {\n  workInProgress.effectTag |= Ref;\n}\n\nlet appendAllChildren;\nlet updateHostContainer;\nlet updateHostComponent;\nlet updateHostText;\nif (supportsMutation) {\n  // Mutation mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function(workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    const oldProps = current.memoizedProps;\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    }\n\n    // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n    const instance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n    const updatePayload = prepareUpdate(\n      instance,\n      type,\n      oldProps,\n      newProps,\n      rootContainerInstance,\n      currentHostContext,\n    );\n    // TODO: Type this specific to this type of component.\n    workInProgress.updateQueue = (updatePayload: any);\n    // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n} else if (supportsPersistence) {\n  // Persistent host tree mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle) {\n          const props = node.memoizedProps;\n          const type = node.type;\n          if (isHidden) {\n            // This child is inside a timed out tree. Hide it.\n            instance = cloneHiddenInstance(instance, type, props, node);\n          } else {\n            // This child was previously inside a timed out tree. If it was not\n            // updated during this render, it may need to be unhidden. Clone\n            // again to be sure.\n            instance = cloneUnhiddenInstance(instance, type, props, node);\n          }\n          node.stateNode = instance;\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle) {\n          const text = node.memoizedProps;\n          const rootContainerInstance = getRootHostContainer();\n          const currentHostContext = getHostContext();\n          if (isHidden) {\n            instance = createHiddenTextInstance(\n              text,\n              rootContainerInstance,\n              currentHostContext,\n              workInProgress,\n            );\n          } else {\n            instance = createTextInstance(\n              text,\n              rootContainerInstance,\n              currentHostContext,\n              workInProgress,\n            );\n          }\n          node.stateNode = instance;\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.tag === SuspenseComponent) {\n        const current = node.alternate;\n        if (current !== null) {\n          const oldState: SuspenseState = current.memoizedState;\n          const newState: SuspenseState = node.memoizedState;\n          const oldIsHidden = oldState !== null;\n          const newIsHidden = newState !== null;\n          if (oldIsHidden !== newIsHidden) {\n            // The placeholder either just timed out or switched back to the normal\n            // children after having previously timed out. Toggle the visibility of\n            // the direct host children.\n            const primaryChildParent = newIsHidden ? node.child : node;\n            if (primaryChildParent !== null) {\n              appendAllChildren(parent, primaryChildParent, true, newIsHidden);\n            }\n            // eslint-disable-next-line no-labels\n            break branches;\n          }\n        }\n        if (node.child !== null) {\n          // Continue traversing like normal\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  // An unfortunate fork of appendAllChildren because we have two different parent types.\n  const appendAllChildrenToContainer = function(\n    containerChildSet: ChildSet,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle) {\n          const props = node.memoizedProps;\n          const type = node.type;\n          if (isHidden) {\n            // This child is inside a timed out tree. Hide it.\n            instance = cloneHiddenInstance(instance, type, props, node);\n          } else {\n            // This child was previously inside a timed out tree. If it was not\n            // updated during this render, it may need to be unhidden. Clone\n            // again to be sure.\n            instance = cloneUnhiddenInstance(instance, type, props, node);\n          }\n          node.stateNode = instance;\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle) {\n          const text = node.memoizedProps;\n          const rootContainerInstance = getRootHostContainer();\n          const currentHostContext = getHostContext();\n          if (isHidden) {\n            instance = createHiddenTextInstance(\n              text,\n              rootContainerInstance,\n              currentHostContext,\n              workInProgress,\n            );\n          } else {\n            instance = createTextInstance(\n              text,\n              rootContainerInstance,\n              currentHostContext,\n              workInProgress,\n            );\n          }\n          node.stateNode = instance;\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.tag === SuspenseComponent) {\n        const current = node.alternate;\n        if (current !== null) {\n          const oldState: SuspenseState = current.memoizedState;\n          const newState: SuspenseState = node.memoizedState;\n          const oldIsHidden = oldState !== null;\n          const newIsHidden = newState !== null;\n          if (oldIsHidden !== newIsHidden) {\n            // The placeholder either just timed out or switched back to the normal\n            // children after having previously timed out. Toggle the visibility of\n            // the direct host children.\n            const primaryChildParent = newIsHidden ? node.child : node;\n            if (primaryChildParent !== null) {\n              appendAllChildrenToContainer(\n                containerChildSet,\n                primaryChildParent,\n                true,\n                newIsHidden,\n              );\n            }\n            // eslint-disable-next-line no-labels\n            break branches;\n          }\n        }\n        if (node.child !== null) {\n          // Continue traversing like normal\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n  updateHostContainer = function(workInProgress: Fiber) {\n    const portalOrRoot: {\n      containerInfo: Container,\n      pendingChildren: ChildSet,\n    } =\n      workInProgress.stateNode;\n    const childrenUnchanged = workInProgress.firstEffect === null;\n    if (childrenUnchanged) {\n      // No changes, just reuse the existing instance.\n    } else {\n      const container = portalOrRoot.containerInfo;\n      let newChildSet = createContainerChildSet(container);\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\n      portalOrRoot.pendingChildren = newChildSet;\n      // Schedule an update on the container to swap out the container.\n      markUpdate(workInProgress);\n      finalizeContainerChildren(container, newChildSet);\n    }\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    const currentInstance = current.stateNode;\n    const oldProps = current.memoizedProps;\n    // If there are no effects associated with this node, then none of our children had any updates.\n    // This guarantees that we can reuse all of them.\n    const childrenUnchanged = workInProgress.firstEffect === null;\n    if (childrenUnchanged && oldProps === newProps) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const recyclableInstance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    let updatePayload = null;\n    if (oldProps !== newProps) {\n      updatePayload = prepareUpdate(\n        recyclableInstance,\n        type,\n        oldProps,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      );\n    }\n    if (childrenUnchanged && updatePayload === null) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    let newInstance = cloneInstance(\n      currentInstance,\n      updatePayload,\n      type,\n      oldProps,\n      newProps,\n      workInProgress,\n      childrenUnchanged,\n      recyclableInstance,\n    );\n    if (\n      finalizeInitialChildren(\n        newInstance,\n        type,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      )\n    ) {\n      markUpdate(workInProgress);\n    }\n    workInProgress.stateNode = newInstance;\n    if (childrenUnchanged) {\n      // If there are no other effects in this tree, we need to flag this node as having one.\n      // Even though we're not going to use it for anything.\n      // Otherwise parents won't know that there are new children to propagate upwards.\n      markUpdate(workInProgress);\n    } else {\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildren(newInstance, workInProgress, false, false);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    if (oldText !== newText) {\n      // If the text content differs, we'll create a new text instance for it.\n      const rootContainerInstance = getRootHostContainer();\n      const currentHostContext = getHostContext();\n      workInProgress.stateNode = createTextInstance(\n        newText,\n        rootContainerInstance,\n        currentHostContext,\n        workInProgress,\n      );\n      // We'll have to mark it as having an effect, even though we won't use the effect for anything.\n      // This lets the parents know that at least one of their children has changed.\n      markUpdate(workInProgress);\n    }\n  };\n} else {\n  // No host operations\n  updateHostContainer = function(workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // Noop\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // Noop\n  };\n}\n\nfunction completeWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n): Fiber | null {\n  const newProps = workInProgress.pendingProps;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n      break;\n    case LazyComponent:\n      break;\n    case SimpleMemoComponent:\n    case FunctionComponent:\n      break;\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      break;\n    }\n    case HostRoot: {\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      const fiberRoot = (workInProgress.stateNode: FiberRoot);\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext;\n        fiberRoot.pendingContext = null;\n      }\n      if (current === null || current.child === null) {\n        // If we hydrated, pop so that we can delete any remaining children\n        // that weren't hydrated.\n        popHydrationState(workInProgress);\n        // This resets the hacky state to fix isMounted before committing.\n        // TODO: Delete this when we delete isMounted and findDOMNode.\n        workInProgress.effectTag &= ~Placement;\n      }\n      updateHostContainer(workInProgress);\n      break;\n    }\n    case HostComponent: {\n      popHostContext(workInProgress);\n      const rootContainerInstance = getRootHostContainer();\n      const type = workInProgress.type;\n      if (current !== null && workInProgress.stateNode != null) {\n        updateHostComponent(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance,\n        );\n\n        if (current.ref !== workInProgress.ref) {\n          markRef(workInProgress);\n        }\n      } else {\n        if (!newProps) {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n          break;\n        }\n\n        const currentHostContext = getHostContext();\n        // TODO: Move createInstance to beginWork and keep it on a context\n        // \"stack\" as the parent. Then append children as we go in beginWork\n        // or completeWork depending on we want to add then top->down or\n        // bottom->up. Top->down is faster in IE11.\n        let wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // TODO: Move this and createInstance step into the beginPhase\n          // to consolidate.\n          if (\n            prepareToHydrateHostInstance(\n              workInProgress,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            // If changes to the hydrated node needs to be applied at the\n            // commit-phase we mark this as such.\n            markUpdate(workInProgress);\n          }\n        } else {\n          let instance = createInstance(\n            type,\n            newProps,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n\n          appendAllChildren(instance, workInProgress, false, false);\n\n          // Certain renderers require commit-time effects for initial mount.\n          // (eg DOM renderer supports auto-focus for certain elements).\n          // Make sure such renderers get scheduled for later work.\n          if (\n            finalizeInitialChildren(\n              instance,\n              type,\n              newProps,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            markUpdate(workInProgress);\n          }\n          workInProgress.stateNode = instance;\n        }\n\n        if (workInProgress.ref !== null) {\n          // If there is a ref on a host node we need to schedule a callback\n          markRef(workInProgress);\n        }\n      }\n      break;\n    }\n    case HostText: {\n      let newText = newProps;\n      if (current && workInProgress.stateNode != null) {\n        const oldText = current.memoizedProps;\n        // If we have an alternate, that means this is an update and we need\n        // to schedule a side-effect to do the updates.\n        updateHostText(current, workInProgress, oldText, newText);\n      } else {\n        if (typeof newText !== 'string') {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n        }\n        const rootContainerInstance = getRootHostContainer();\n        const currentHostContext = getHostContext();\n        let wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          if (prepareToHydrateHostTextInstance(workInProgress)) {\n            markUpdate(workInProgress);\n          }\n        } else {\n          workInProgress.stateNode = createTextInstance(\n            newText,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n        }\n      }\n      break;\n    }\n    case ForwardRef:\n      break;\n    case SuspenseComponent: {\n      const nextState = workInProgress.memoizedState;\n      if ((workInProgress.effectTag & DidCapture) !== NoEffect) {\n        // Something suspended. Re-render with the fallback children.\n        workInProgress.expirationTime = renderExpirationTime;\n        // Do not reset the effect list.\n        return workInProgress;\n      }\n\n      const nextDidTimeout = nextState !== null;\n      const prevDidTimeout = current !== null && current.memoizedState !== null;\n\n      if (current !== null && !nextDidTimeout && prevDidTimeout) {\n        // We just switched from the fallback to the normal children. Delete\n        // the fallback.\n        // TODO: Would it be better to store the fallback fragment on\n        // the stateNode during the begin phase?\n        const currentFallbackChild: Fiber | null = (current.child: any).sibling;\n        if (currentFallbackChild !== null) {\n          // Deletions go at the beginning of the return fiber's effect list\n          const first = workInProgress.firstEffect;\n          if (first !== null) {\n            workInProgress.firstEffect = currentFallbackChild;\n            currentFallbackChild.nextEffect = first;\n          } else {\n            workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;\n            currentFallbackChild.nextEffect = null;\n          }\n          currentFallbackChild.effectTag = Deletion;\n        }\n      }\n\n      if (nextDidTimeout || prevDidTimeout) {\n        // If the children are hidden, or if they were previous hidden, schedule\n        // an effect to toggle their visibility. This is also used to attach a\n        // retry listener to the promise.\n        workInProgress.effectTag |= Update;\n      }\n      break;\n    }\n    case Fragment:\n      break;\n    case Mode:\n      break;\n    case Profiler:\n      break;\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(workInProgress);\n      break;\n    case ContextProvider:\n      // Pop provider fiber\n      popProvider(workInProgress);\n      break;\n    case ContextConsumer:\n      break;\n    case MemoComponent:\n      break;\n    case IncompleteClassComponent: {\n      // Same as class component case. I put it down here so that the tags are\n      // sequential to ensure this switch is compiled to a jump table.\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      break;\n    }\n    case DehydratedSuspenseComponent: {\n      if (enableSuspenseServerRenderer) {\n        if (current === null) {\n          let wasHydrated = popHydrationState(workInProgress);\n          invariant(\n            wasHydrated,\n            'A dehydrated suspense component was completed without a hydrated node. ' +\n              'This is probably a bug in React.',\n          );\n          skipPastDehydratedSuspenseInstance(workInProgress);\n        } else if ((workInProgress.effectTag & DidCapture) === NoEffect) {\n          // This boundary did not suspend so it's now hydrated.\n          // To handle any future suspense cases, we're going to now upgrade it\n          // to a Suspense component. We detach it from the existing current fiber.\n          current.alternate = null;\n          workInProgress.alternate = null;\n          workInProgress.tag = SuspenseComponent;\n          workInProgress.memoizedState = null;\n          workInProgress.stateNode = null;\n        }\n      }\n      break;\n    }\n    default:\n      invariant(\n        false,\n        'Unknown unit of work tag. This error is likely caused by a bug in ' +\n          'React. Please file an issue.',\n      );\n  }\n\n  return null;\n}\n\nexport {completeWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\n\nimport {getStackByFiberInDevAndProd} from './ReactCurrentFiber';\n\nexport type CapturedValue<T> = {\n  value: T,\n  source: Fiber | null,\n  stack: string | null,\n};\n\nexport type CapturedError = {\n  componentName: ?string,\n  componentStack: string,\n  error: mixed,\n  errorBoundary: ?Object,\n  errorBoundaryFound: boolean,\n  errorBoundaryName: string | null,\n  willRetry: boolean,\n};\n\nexport function createCapturedValue<T>(\n  value: T,\n  source: Fiber,\n): CapturedValue<T> {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value,\n    source,\n    stack: getStackByFiberInDevAndProd(source),\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\n\nexport type SuspenseState = {|\n  timedOutAt: ExpirationTime,\n|};\n\nexport function shouldCaptureSuspense(workInProgress: Fiber): boolean {\n  // In order to capture, the Suspense component must have a fallback prop.\n  if (workInProgress.memoizedProps.fallback === undefined) {\n    return false;\n  }\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  const nextState: SuspenseState | null = workInProgress.memoizedState;\n  return nextState === null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Instance,\n  TextInstance,\n  SuspenseInstance,\n  Container,\n  ChildSet,\n  UpdatePayload,\n} from './ReactFiberHostConfig';\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {CapturedValue, CapturedError} from './ReactCapturedValue';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent';\nimport type {FunctionComponentUpdateQueue} from './ReactFiberHooks';\nimport type {Thenable} from './ReactFiberScheduler';\n\nimport {unstable_wrap as Schedule_tracing_wrap} from 'scheduler/tracing';\nimport {\n  enableSchedulerTracing,\n  enableProfilerTimer,\n  enableSuspenseServerRenderer,\n} from 'shared/ReactFeatureFlags';\nimport {\n  FunctionComponent,\n  ForwardRef,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  Profiler,\n  SuspenseComponent,\n  DehydratedSuspenseComponent,\n  IncompleteClassComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n} from 'shared/ReactWorkTags';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {\n  ContentReset,\n  Placement,\n  Snapshot,\n  Update,\n} from 'shared/ReactSideEffectTags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport warning from 'shared/warning';\n\nimport {NoWork} from './ReactFiberExpirationTime';\nimport {onCommitUnmount} from './ReactFiberDevToolsHook';\nimport {startPhaseTimer, stopPhaseTimer} from './ReactDebugFiberPerf';\nimport {getStackByFiberInDevAndProd} from './ReactCurrentFiber';\nimport {logCapturedError} from './ReactFiberErrorLogger';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent';\nimport {getCommitTime} from './ReactProfilerTimer';\nimport {commitUpdateQueue} from './ReactUpdateQueue';\nimport {\n  getPublicInstance,\n  supportsMutation,\n  supportsPersistence,\n  commitMount,\n  commitUpdate,\n  resetTextContent,\n  commitTextUpdate,\n  appendChild,\n  appendChildToContainer,\n  insertBefore,\n  insertInContainerBefore,\n  removeChild,\n  removeChildFromContainer,\n  clearSuspenseBoundary,\n  clearSuspenseBoundaryFromContainer,\n  replaceContainerChildren,\n  createContainerChildSet,\n  hideInstance,\n  hideTextInstance,\n  unhideInstance,\n  unhideTextInstance,\n} from './ReactFiberHostConfig';\nimport {\n  captureCommitPhaseError,\n  requestCurrentTime,\n  retryTimedOutBoundary,\n} from './ReactFiberScheduler';\nimport {\n  NoEffect as NoHookEffect,\n  UnmountSnapshot,\n  UnmountMutation,\n  MountMutation,\n  UnmountLayout,\n  MountLayout,\n  UnmountPassive,\n  MountPassive,\n} from './ReactHookEffectTags';\nimport {didWarnAboutReassigningProps} from './ReactFiberBeginWork';\n\nlet didWarnAboutUndefinedSnapshotBeforeUpdate: Set<mixed> | null = null;\nif (__DEV__) {\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n}\n\nconst PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\n\nexport function logError(boundary: Fiber, errorInfo: CapturedValue<mixed>) {\n  const source = errorInfo.source;\n  let stack = errorInfo.stack;\n  if (stack === null && source !== null) {\n    stack = getStackByFiberInDevAndProd(source);\n  }\n\n  const capturedError: CapturedError = {\n    componentName: source !== null ? getComponentName(source.type) : null,\n    componentStack: stack !== null ? stack : '',\n    error: errorInfo.value,\n    errorBoundary: null,\n    errorBoundaryName: null,\n    errorBoundaryFound: false,\n    willRetry: false,\n  };\n\n  if (boundary !== null && boundary.tag === ClassComponent) {\n    capturedError.errorBoundary = boundary.stateNode;\n    capturedError.errorBoundaryName = getComponentName(boundary.type);\n    capturedError.errorBoundaryFound = true;\n    capturedError.willRetry = true;\n  }\n\n  try {\n    logCapturedError(capturedError);\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(() => {\n      throw e;\n    });\n  }\n}\n\nconst callComponentWillUnmountWithTimer = function(current, instance) {\n  startPhaseTimer(current, 'componentWillUnmount');\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n  instance.componentWillUnmount();\n  stopPhaseTimer();\n};\n\n// Capture errors so they don't interrupt unmounting.\nfunction safelyCallComponentWillUnmount(current, instance) {\n  if (__DEV__) {\n    invokeGuardedCallback(\n      null,\n      callComponentWillUnmountWithTimer,\n      null,\n      current,\n      instance,\n    );\n    if (hasCaughtError()) {\n      const unmountError = clearCaughtError();\n      captureCommitPhaseError(current, unmountError);\n    }\n  } else {\n    try {\n      callComponentWillUnmountWithTimer(current, instance);\n    } catch (unmountError) {\n      captureCommitPhaseError(current, unmountError);\n    }\n  }\n}\n\nfunction safelyDetachRef(current: Fiber) {\n  const ref = current.ref;\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      if (__DEV__) {\n        invokeGuardedCallback(null, ref, null, null);\n        if (hasCaughtError()) {\n          const refError = clearCaughtError();\n          captureCommitPhaseError(current, refError);\n        }\n      } else {\n        try {\n          ref(null);\n        } catch (refError) {\n          captureCommitPhaseError(current, refError);\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(current, destroy) {\n  if (__DEV__) {\n    invokeGuardedCallback(null, destroy, null);\n    if (hasCaughtError()) {\n      const error = clearCaughtError();\n      captureCommitPhaseError(current, error);\n    }\n  } else {\n    try {\n      destroy();\n    } catch (error) {\n      captureCommitPhaseError(current, error);\n    }\n  }\n}\n\nfunction commitBeforeMutationLifeCycles(\n  current: Fiber | null,\n  finishedWork: Fiber,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      commitHookEffectList(UnmountSnapshot, NoHookEffect, finishedWork);\n      return;\n    }\n    case ClassComponent: {\n      if (finishedWork.effectTag & Snapshot) {\n        if (current !== null) {\n          const prevProps = current.memoizedProps;\n          const prevState = current.memoizedState;\n          startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');\n          const instance = finishedWork.stateNode;\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              warning(\n                instance.props === finishedWork.memoizedProps,\n                'Expected %s props to match memoized props before ' +\n                  'getSnapshotBeforeUpdate. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.props`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n              warning(\n                instance.state === finishedWork.memoizedState,\n                'Expected %s state to match memoized state before ' +\n                  'getSnapshotBeforeUpdate. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.props`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n            }\n          }\n          const snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState,\n          );\n          if (__DEV__) {\n            const didWarnSet = ((didWarnAboutUndefinedSnapshotBeforeUpdate: any): Set<\n              mixed,\n            >);\n            if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n              didWarnSet.add(finishedWork.type);\n              warningWithoutStack(\n                false,\n                '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' +\n                  'must be returned. You have returned undefined.',\n                getComponentName(finishedWork.type),\n              );\n            }\n          }\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n          stopPhaseTimer();\n        }\n      }\n      return;\n    }\n    case HostRoot:\n    case HostComponent:\n    case HostText:\n    case HostPortal:\n    case IncompleteClassComponent:\n      // Nothing to do for these component types\n      return;\n    default: {\n      invariant(\n        false,\n        'This unit of work tag should not have side-effects. This error is ' +\n          'likely caused by a bug in React. Please file an issue.',\n      );\n    }\n  }\n}\n\nfunction commitHookEffectList(\n  unmountTag: number,\n  mountTag: number,\n  finishedWork: Fiber,\n) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  let lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & unmountTag) !== NoHookEffect) {\n        // Unmount\n        const destroy = effect.destroy;\n        effect.destroy = undefined;\n        if (destroy !== undefined) {\n          destroy();\n        }\n      }\n      if ((effect.tag & mountTag) !== NoHookEffect) {\n        // Mount\n        const create = effect.create;\n        effect.destroy = create();\n\n        if (__DEV__) {\n          const destroy = effect.destroy;\n          if (destroy !== undefined && typeof destroy !== 'function') {\n            let addendum;\n            if (destroy === null) {\n              addendum =\n                ' You returned null. If your effect does not require clean ' +\n                'up, return undefined (or nothing).';\n            } else if (typeof destroy.then === 'function') {\n              addendum =\n                '\\n\\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' +\n                'Instead, write the async function inside your effect ' +\n                'and call it immediately:\\n\\n' +\n                'useEffect(() => {\\n' +\n                '  async function fetchData() {\\n' +\n                '    // You can await here\\n' +\n                '    const response = await MyAPI.getData(someId);\\n' +\n                '    // ...\\n' +\n                '  }\\n' +\n                '  fetchData();\\n' +\n                `}, [someId]); // Or [] if effect doesn't need props or state\\n\\n` +\n                'Learn more about data fetching with Hooks: https://fb.me/react-hooks-data-fetching';\n            } else {\n              addendum = ' You returned: ' + destroy;\n            }\n            warningWithoutStack(\n              false,\n              'An effect function must not return anything besides a function, ' +\n                'which is used for clean-up.%s%s',\n              addendum,\n              getStackByFiberInDevAndProd(finishedWork),\n            );\n          }\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nexport function commitPassiveHookEffects(finishedWork: Fiber): void {\n  commitHookEffectList(UnmountPassive, NoHookEffect, finishedWork);\n  commitHookEffectList(NoHookEffect, MountPassive, finishedWork);\n}\n\nfunction commitLifeCycles(\n  finishedRoot: FiberRoot,\n  current: Fiber | null,\n  finishedWork: Fiber,\n  committedExpirationTime: ExpirationTime,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      commitHookEffectList(UnmountLayout, MountLayout, finishedWork);\n      break;\n    }\n    case ClassComponent: {\n      const instance = finishedWork.stateNode;\n      if (finishedWork.effectTag & Update) {\n        if (current === null) {\n          startPhaseTimer(finishedWork, 'componentDidMount');\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              warning(\n                instance.props === finishedWork.memoizedProps,\n                'Expected %s props to match memoized props before ' +\n                  'componentDidMount. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.props`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n              warning(\n                instance.state === finishedWork.memoizedState,\n                'Expected %s state to match memoized state before ' +\n                  'componentDidMount. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.props`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n            }\n          }\n          instance.componentDidMount();\n          stopPhaseTimer();\n        } else {\n          const prevProps =\n            finishedWork.elementType === finishedWork.type\n              ? current.memoizedProps\n              : resolveDefaultProps(finishedWork.type, current.memoizedProps);\n          const prevState = current.memoizedState;\n          startPhaseTimer(finishedWork, 'componentDidUpdate');\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              warning(\n                instance.props === finishedWork.memoizedProps,\n                'Expected %s props to match memoized props before ' +\n                  'componentDidUpdate. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.props`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n              warning(\n                instance.state === finishedWork.memoizedState,\n                'Expected %s state to match memoized state before ' +\n                  'componentDidUpdate. ' +\n                  'This might either be because of a bug in React, or because ' +\n                  'a component reassigns its own `this.props`. ' +\n                  'Please file an issue.',\n                getComponentName(finishedWork.type) || 'instance',\n              );\n            }\n          }\n          instance.componentDidUpdate(\n            prevProps,\n            prevState,\n            instance.__reactInternalSnapshotBeforeUpdate,\n          );\n          stopPhaseTimer();\n        }\n      }\n      const updateQueue = finishedWork.updateQueue;\n      if (updateQueue !== null) {\n        if (__DEV__) {\n          if (\n            finishedWork.type === finishedWork.elementType &&\n            !didWarnAboutReassigningProps\n          ) {\n            warning(\n              instance.props === finishedWork.memoizedProps,\n              'Expected %s props to match memoized props before ' +\n                'processing the update queue. ' +\n                'This might either be because of a bug in React, or because ' +\n                'a component reassigns its own `this.props`. ' +\n                'Please file an issue.',\n              getComponentName(finishedWork.type) || 'instance',\n            );\n            warning(\n              instance.state === finishedWork.memoizedState,\n              'Expected %s state to match memoized state before ' +\n                'processing the update queue. ' +\n                'This might either be because of a bug in React, or because ' +\n                'a component reassigns its own `this.props`. ' +\n                'Please file an issue.',\n              getComponentName(finishedWork.type) || 'instance',\n            );\n          }\n        }\n        // We could update instance props and state here,\n        // but instead we rely on them being set during last render.\n        // TODO: revisit this when we implement resuming.\n        commitUpdateQueue(\n          finishedWork,\n          updateQueue,\n          instance,\n          committedExpirationTime,\n        );\n      }\n      return;\n    }\n    case HostRoot: {\n      const updateQueue = finishedWork.updateQueue;\n      if (updateQueue !== null) {\n        let instance = null;\n        if (finishedWork.child !== null) {\n          switch (finishedWork.child.tag) {\n            case HostComponent:\n              instance = getPublicInstance(finishedWork.child.stateNode);\n              break;\n            case ClassComponent:\n              instance = finishedWork.child.stateNode;\n              break;\n          }\n        }\n        commitUpdateQueue(\n          finishedWork,\n          updateQueue,\n          instance,\n          committedExpirationTime,\n        );\n      }\n      return;\n    }\n    case HostComponent: {\n      const instance: Instance = finishedWork.stateNode;\n\n      // Renderers may schedule work to be done after host components are mounted\n      // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n      // These effects should only be committed when components are first mounted,\n      // aka when there is no current/alternate.\n      if (current === null && finishedWork.effectTag & Update) {\n        const type = finishedWork.type;\n        const props = finishedWork.memoizedProps;\n        commitMount(instance, type, props, finishedWork);\n      }\n\n      return;\n    }\n    case HostText: {\n      // We have no life-cycles associated with text.\n      return;\n    }\n    case HostPortal: {\n      // We have no life-cycles associated with portals.\n      return;\n    }\n    case Profiler: {\n      if (enableProfilerTimer) {\n        const onRender = finishedWork.memoizedProps.onRender;\n\n        if (enableSchedulerTracing) {\n          onRender(\n            finishedWork.memoizedProps.id,\n            current === null ? 'mount' : 'update',\n            finishedWork.actualDuration,\n            finishedWork.treeBaseDuration,\n            finishedWork.actualStartTime,\n            getCommitTime(),\n            finishedRoot.memoizedInteractions,\n          );\n        } else {\n          onRender(\n            finishedWork.memoizedProps.id,\n            current === null ? 'mount' : 'update',\n            finishedWork.actualDuration,\n            finishedWork.treeBaseDuration,\n            finishedWork.actualStartTime,\n            getCommitTime(),\n          );\n        }\n      }\n      return;\n    }\n    case SuspenseComponent:\n      break;\n    case IncompleteClassComponent:\n      break;\n    default: {\n      invariant(\n        false,\n        'This unit of work tag should not have side-effects. This error is ' +\n          'likely caused by a bug in React. Please file an issue.',\n      );\n    }\n  }\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  if (supportsMutation) {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    let node: Fiber = finishedWork;\n    while (true) {\n      if (node.tag === HostComponent) {\n        const instance = node.stateNode;\n        if (isHidden) {\n          hideInstance(instance);\n        } else {\n          unhideInstance(node.stateNode, node.memoizedProps);\n        }\n      } else if (node.tag === HostText) {\n        const instance = node.stateNode;\n        if (isHidden) {\n          hideTextInstance(instance);\n        } else {\n          unhideTextInstance(instance, node.memoizedProps);\n        }\n      } else if (\n        node.tag === SuspenseComponent &&\n        node.memoizedState !== null\n      ) {\n        // Found a nested Suspense component that timed out. Skip over the\n        // primary child fragment, which should remain hidden.\n        const fallbackChildFragment: Fiber = (node.child: any).sibling;\n        fallbackChildFragment.return = node;\n        node = fallbackChildFragment;\n        continue;\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === finishedWork) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork: Fiber) {\n  const ref = finishedWork.ref;\n  if (ref !== null) {\n    const instance = finishedWork.stateNode;\n    let instanceToUse;\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n      default:\n        instanceToUse = instance;\n    }\n    if (typeof ref === 'function') {\n      ref(instanceToUse);\n    } else {\n      if (__DEV__) {\n        if (!ref.hasOwnProperty('current')) {\n          warningWithoutStack(\n            false,\n            'Unexpected ref object provided for %s. ' +\n              'Use either a ref-setter function or React.createRef().%s',\n            getComponentName(finishedWork.type),\n            getStackByFiberInDevAndProd(finishedWork),\n          );\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction commitDetachRef(current: Fiber) {\n  const currentRef = current.ref;\n  if (currentRef !== null) {\n    if (typeof currentRef === 'function') {\n      currentRef(null);\n    } else {\n      currentRef.current = null;\n    }\n  }\n}\n\n// User-originating errors (lifecycles and refs) should not interrupt\n// deletion, so don't let them throw. Host-originating errors should\n// interrupt deletion, so it's okay\nfunction commitUnmount(current: Fiber): void {\n  onCommitUnmount(current);\n\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      const updateQueue: FunctionComponentUpdateQueue | null = (current.updateQueue: any);\n      if (updateQueue !== null) {\n        const lastEffect = updateQueue.lastEffect;\n        if (lastEffect !== null) {\n          const firstEffect = lastEffect.next;\n          let effect = firstEffect;\n          do {\n            const destroy = effect.destroy;\n            if (destroy !== undefined) {\n              safelyCallDestroy(current, destroy);\n            }\n            effect = effect.next;\n          } while (effect !== firstEffect);\n        }\n      }\n      break;\n    }\n    case ClassComponent: {\n      safelyDetachRef(current);\n      const instance = current.stateNode;\n      if (typeof instance.componentWillUnmount === 'function') {\n        safelyCallComponentWillUnmount(current, instance);\n      }\n      return;\n    }\n    case HostComponent: {\n      safelyDetachRef(current);\n      return;\n    }\n    case HostPortal: {\n      // TODO: this is recursive.\n      // We are also not using this parent because\n      // the portal will get pushed immediately.\n      if (supportsMutation) {\n        unmountHostComponents(current);\n      } else if (supportsPersistence) {\n        emptyPortalContainer(current);\n      }\n      return;\n    }\n  }\n}\n\nfunction commitNestedUnmounts(root: Fiber): void {\n  // While we're inside a removed host node we don't want to call\n  // removeChild on the inner nodes because they're removed by the top\n  // call anyway. We also want to call componentWillUnmount on all\n  // composites before this host node is removed from the tree. Therefore\n  // we do an inner loop while we're still inside the host node.\n  let node: Fiber = root;\n  while (true) {\n    commitUnmount(node);\n    // Visit children because they may contain more composite or host nodes.\n    // Skip portals because commitUnmount() currently visits them recursively.\n    if (\n      node.child !== null &&\n      // If we use mutation we drill down into portals using commitUnmount above.\n      // If we don't use mutation we drill down into portals here instead.\n      (!supportsMutation || node.tag !== HostPortal)\n    ) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === root) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === root) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction detachFiber(current: Fiber) {\n  // Cut off the return pointers to disconnect it from the tree. Ideally, we\n  // should clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child. This child\n  // itself will be GC:ed when the parent updates the next time.\n  current.return = null;\n  current.child = null;\n  current.memoizedState = null;\n  current.updateQueue = null;\n  const alternate = current.alternate;\n  if (alternate !== null) {\n    alternate.return = null;\n    alternate.child = null;\n    alternate.memoizedState = null;\n    alternate.updateQueue = null;\n  }\n}\n\nfunction emptyPortalContainer(current: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  const portal: {containerInfo: Container, pendingChildren: ChildSet} =\n    current.stateNode;\n  const {containerInfo} = portal;\n  const emptyChildSet = createContainerChildSet(containerInfo);\n  replaceContainerChildren(containerInfo, emptyChildSet);\n}\n\nfunction commitContainer(finishedWork: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case ClassComponent: {\n      return;\n    }\n    case HostComponent: {\n      return;\n    }\n    case HostText: {\n      return;\n    }\n    case HostRoot:\n    case HostPortal: {\n      const portalOrRoot: {\n        containerInfo: Container,\n        pendingChildren: ChildSet,\n      } =\n        finishedWork.stateNode;\n      const {containerInfo, pendingChildren} = portalOrRoot;\n      replaceContainerChildren(containerInfo, pendingChildren);\n      return;\n    }\n    default: {\n      invariant(\n        false,\n        'This unit of work tag should not have side-effects. This error is ' +\n          'likely caused by a bug in React. Please file an issue.',\n      );\n    }\n  }\n}\n\nfunction getHostParentFiber(fiber: Fiber): Fiber {\n  let parent = fiber.return;\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n    parent = parent.return;\n  }\n  invariant(\n    false,\n    'Expected to find a host parent. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n}\n\nfunction isHostParent(fiber: Fiber): boolean {\n  return (\n    fiber.tag === HostComponent ||\n    fiber.tag === HostRoot ||\n    fiber.tag === HostPortal\n  );\n}\n\nfunction getHostSibling(fiber: Fiber): ?Instance {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  let node: Fiber = fiber;\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n    while (\n      node.tag !== HostComponent &&\n      node.tag !== HostText &&\n      node.tag !== DehydratedSuspenseComponent\n    ) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.effectTag & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      }\n      // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    }\n    // Check if this host node is stable or about to be placed.\n    if (!(node.effectTag & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    return;\n  }\n\n  // Recursively insert all host nodes into the parent.\n  const parentFiber = getHostParentFiber(finishedWork);\n\n  // Note: these two variables *must* always be updated together.\n  let parent;\n  let isContainer;\n\n  switch (parentFiber.tag) {\n    case HostComponent:\n      parent = parentFiber.stateNode;\n      isContainer = false;\n      break;\n    case HostRoot:\n      parent = parentFiber.stateNode.containerInfo;\n      isContainer = true;\n      break;\n    case HostPortal:\n      parent = parentFiber.stateNode.containerInfo;\n      isContainer = true;\n      break;\n    default:\n      invariant(\n        false,\n        'Invalid host parent fiber. This error is likely caused by a bug ' +\n          'in React. Please file an issue.',\n      );\n  }\n  if (parentFiber.effectTag & ContentReset) {\n    // Reset the text content of the parent before doing any insertions\n    resetTextContent(parent);\n    // Clear ContentReset from the effect tag\n    parentFiber.effectTag &= ~ContentReset;\n  }\n\n  const before = getHostSibling(finishedWork);\n  // We only have the top Fiber that was inserted but we need to recurse down its\n  // children to find all the terminal nodes.\n  let node: Fiber = finishedWork;\n  while (true) {\n    if (node.tag === HostComponent || node.tag === HostText) {\n      if (before) {\n        if (isContainer) {\n          insertInContainerBefore(parent, node.stateNode, before);\n        } else {\n          insertBefore(parent, node.stateNode, before);\n        }\n      } else {\n        if (isContainer) {\n          appendChildToContainer(parent, node.stateNode);\n        } else {\n          appendChild(parent, node.stateNode);\n        }\n      }\n    } else if (node.tag === HostPortal) {\n      // If the insertion itself is a portal, then we don't want to traverse\n      // down its children. Instead, we'll get insertions from each child in\n      // the portal directly.\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === finishedWork) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === finishedWork) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction unmountHostComponents(current): void {\n  // We only have the top Fiber that was deleted but we need to recurse down its\n  // children to find all the terminal nodes.\n  let node: Fiber = current;\n\n  // Each iteration, currentParent is populated with node's host parent if not\n  // currentParentIsValid.\n  let currentParentIsValid = false;\n\n  // Note: these two variables *must* always be updated together.\n  let currentParent;\n  let currentParentIsContainer;\n\n  while (true) {\n    if (!currentParentIsValid) {\n      let parent = node.return;\n      findParent: while (true) {\n        invariant(\n          parent !== null,\n          'Expected to find a host parent. This error is likely caused by ' +\n            'a bug in React. Please file an issue.',\n        );\n        switch (parent.tag) {\n          case HostComponent:\n            currentParent = parent.stateNode;\n            currentParentIsContainer = false;\n            break findParent;\n          case HostRoot:\n            currentParent = parent.stateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n          case HostPortal:\n            currentParent = parent.stateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n        }\n        parent = parent.return;\n      }\n      currentParentIsValid = true;\n    }\n\n    if (node.tag === HostComponent || node.tag === HostText) {\n      commitNestedUnmounts(node);\n      // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n      if (currentParentIsContainer) {\n        removeChildFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: Instance | TextInstance),\n        );\n      } else {\n        removeChild(\n          ((currentParent: any): Instance),\n          (node.stateNode: Instance | TextInstance),\n        );\n      }\n      // Don't visit children because we already visited them.\n    } else if (\n      enableSuspenseServerRenderer &&\n      node.tag === DehydratedSuspenseComponent\n    ) {\n      // Delete the dehydrated suspense boundary and all of its content.\n      if (currentParentIsContainer) {\n        clearSuspenseBoundaryFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: SuspenseInstance),\n        );\n      } else {\n        clearSuspenseBoundary(\n          ((currentParent: any): Instance),\n          (node.stateNode: SuspenseInstance),\n        );\n      }\n    } else if (node.tag === HostPortal) {\n      if (node.child !== null) {\n        // When we go into a portal, it becomes the parent to remove from.\n        // We will reassign it back when we pop the portal on the way up.\n        currentParent = node.stateNode.containerInfo;\n        currentParentIsContainer = true;\n        // Visit children because portals might contain host components.\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    } else {\n      commitUnmount(node);\n      // Visit children because we may find more host components below.\n      if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    }\n    if (node === current) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === current) {\n        return;\n      }\n      node = node.return;\n      if (node.tag === HostPortal) {\n        // When we go out of the portal, we need to restore the parent.\n        // Since we don't keep a stack of them, we will search for it.\n        currentParentIsValid = false;\n      }\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction commitDeletion(current: Fiber): void {\n  if (supportsMutation) {\n    // Recursively delete all host nodes from the parent.\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    unmountHostComponents(current);\n  } else {\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    commitNestedUnmounts(current);\n  }\n  detachFiber(current);\n}\n\nfunction commitWork(current: Fiber | null, finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        // Note: We currently never use MountMutation, but useLayout uses\n        // UnmountMutation.\n        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);\n        return;\n      }\n    }\n\n    commitContainer(finishedWork);\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      // Note: We currently never use MountMutation, but useLayout uses\n      // UnmountMutation.\n      commitHookEffectList(UnmountMutation, MountMutation, finishedWork);\n      return;\n    }\n    case ClassComponent: {\n      return;\n    }\n    case HostComponent: {\n      const instance: Instance = finishedWork.stateNode;\n      if (instance != null) {\n        // Commit the work prepared earlier.\n        const newProps = finishedWork.memoizedProps;\n        // For hydration we reuse the update path but we treat the oldProps\n        // as the newProps. The updatePayload will contain the real change in\n        // this case.\n        const oldProps = current !== null ? current.memoizedProps : newProps;\n        const type = finishedWork.type;\n        // TODO: Type the updateQueue to be specific to host components.\n        const updatePayload: null | UpdatePayload = (finishedWork.updateQueue: any);\n        finishedWork.updateQueue = null;\n        if (updatePayload !== null) {\n          commitUpdate(\n            instance,\n            updatePayload,\n            type,\n            oldProps,\n            newProps,\n            finishedWork,\n          );\n        }\n      }\n      return;\n    }\n    case HostText: {\n      invariant(\n        finishedWork.stateNode !== null,\n        'This should have a text node initialized. This error is likely ' +\n          'caused by a bug in React. Please file an issue.',\n      );\n      const textInstance: TextInstance = finishedWork.stateNode;\n      const newText: string = finishedWork.memoizedProps;\n      // For hydration we reuse the update path but we treat the oldProps\n      // as the newProps. The updatePayload will contain the real change in\n      // this case.\n      const oldText: string =\n        current !== null ? current.memoizedProps : newText;\n      commitTextUpdate(textInstance, oldText, newText);\n      return;\n    }\n    case HostRoot: {\n      return;\n    }\n    case Profiler: {\n      return;\n    }\n    case SuspenseComponent: {\n      let newState: SuspenseState | null = finishedWork.memoizedState;\n\n      let newDidTimeout;\n      let primaryChildParent = finishedWork;\n      if (newState === null) {\n        newDidTimeout = false;\n      } else {\n        newDidTimeout = true;\n        primaryChildParent = finishedWork.child;\n        if (newState.timedOutAt === NoWork) {\n          // If the children had not already timed out, record the time.\n          // This is used to compute the elapsed time during subsequent\n          // attempts to render the children.\n          newState.timedOutAt = requestCurrentTime();\n        }\n      }\n\n      if (primaryChildParent !== null) {\n        hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);\n      }\n\n      // If this boundary just timed out, then it will have a set of thenables.\n      // For each thenable, attach a listener so that when it resolves, React\n      // attempts to re-render the boundary in the primary (pre-timeout) state.\n      const thenables: Set<Thenable> | null = (finishedWork.updateQueue: any);\n      if (thenables !== null) {\n        finishedWork.updateQueue = null;\n        let retryCache = finishedWork.stateNode;\n        if (retryCache === null) {\n          retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n        }\n        thenables.forEach(thenable => {\n          // Memoize using the boundary fiber to prevent redundant listeners.\n          let retry = retryTimedOutBoundary.bind(null, finishedWork, thenable);\n          if (enableSchedulerTracing) {\n            retry = Schedule_tracing_wrap(retry);\n          }\n          if (!retryCache.has(thenable)) {\n            retryCache.add(thenable);\n            thenable.then(retry, retry);\n          }\n        });\n      }\n\n      return;\n    }\n    case IncompleteClassComponent: {\n      return;\n    }\n    default: {\n      invariant(\n        false,\n        'This unit of work tag should not have side-effects. This error is ' +\n          'likely caused by a bug in React. Please file an issue.',\n      );\n    }\n  }\n}\n\nfunction commitResetTextContent(current: Fiber) {\n  if (!supportsMutation) {\n    return;\n  }\n  resetTextContent(current.stateNode);\n}\n\nexport {\n  commitBeforeMutationLifeCycles,\n  commitResetTextContent,\n  commitPlacement,\n  commitDeletion,\n  commitWork,\n  commitLifeCycles,\n  commitAttachRef,\n  commitDetachRef,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {CapturedError} from './ReactCapturedValue';\n\nimport {showErrorDialog} from './ReactFiberErrorDialog';\n\nexport function logCapturedError(capturedError: CapturedError): void {\n  const logError = showErrorDialog(capturedError);\n\n  // Allow injected showErrorDialog() to prevent default console.error logging.\n  // This enables renderers like ReactNative to better manage redbox behavior.\n  if (logError === false) {\n    return;\n  }\n\n  const error = (capturedError.error: any);\n  if (__DEV__) {\n    const {\n      componentName,\n      componentStack,\n      errorBoundaryName,\n      errorBoundaryFound,\n      willRetry,\n    } = capturedError;\n\n    // Browsers support silencing uncaught errors by calling\n    // `preventDefault()` in window `error` handler.\n    // We record this information as an expando on the error.\n    if (error != null && error._suppressLogging) {\n      if (errorBoundaryFound && willRetry) {\n        // The error is recoverable and was silenced.\n        // Ignore it and don't print the stack addendum.\n        // This is handy for testing error boundaries without noise.\n        return;\n      }\n      // The error is fatal. Since the silencing might have\n      // been accidental, we'll surface it anyway.\n      // However, the browser would have silenced the original error\n      // so we'll print it first, and then print the stack addendum.\n      console.error(error);\n      // For a more detailed description of this block, see:\n      // https://github.com/facebook/react/pull/13384\n    }\n\n    const componentNameMessage = componentName\n      ? `The above error occurred in the <${componentName}> component:`\n      : 'The above error occurred in one of your React components:';\n\n    let errorBoundaryMessage;\n    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.\n    if (errorBoundaryFound && errorBoundaryName) {\n      if (willRetry) {\n        errorBoundaryMessage =\n          `React will try to recreate this component tree from scratch ` +\n          `using the error boundary you provided, ${errorBoundaryName}.`;\n      } else {\n        errorBoundaryMessage =\n          `This error was initially handled by the error boundary ${errorBoundaryName}.\\n` +\n          `Recreating the tree from scratch failed so React will unmount the tree.`;\n      }\n    } else {\n      errorBoundaryMessage =\n        'Consider adding an error boundary to your tree to customize error handling behavior.\\n' +\n        'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';\n    }\n    const combinedMessage =\n      `${componentNameMessage}${componentStack}\\n\\n` +\n      `${errorBoundaryMessage}`;\n\n    // In development, we provide our own message with just the component stack.\n    // We don't include the original error message and JS stack because the browser\n    // has already printed it. Even if the application swallows the error, it is still\n    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n    console.error(combinedMessage);\n  } else {\n    // In production, we print the error directly.\n    // This will include the message, the JS stack, and anything the browser wants to show.\n    // We pass the error object instead of custom message so that the browser displays the error natively.\n    console.error(error);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\nimport type {CapturedValue} from './ReactCapturedValue';\nimport type {Update} from './ReactUpdateQueue';\nimport type {Thenable} from './ReactFiberScheduler';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent';\n\nimport {unstable_wrap as Schedule_tracing_wrap} from 'scheduler/tracing';\nimport getComponentName from 'shared/getComponentName';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport {\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostPortal,\n  ContextProvider,\n  SuspenseComponent,\n  DehydratedSuspenseComponent,\n  IncompleteClassComponent,\n} from 'shared/ReactWorkTags';\nimport {\n  DidCapture,\n  Incomplete,\n  NoEffect,\n  ShouldCapture,\n  LifecycleEffectMask,\n} from 'shared/ReactSideEffectTags';\nimport {\n  enableSchedulerTracing,\n  enableSuspenseServerRenderer,\n} from 'shared/ReactFeatureFlags';\nimport {ConcurrentMode} from './ReactTypeOfMode';\nimport {shouldCaptureSuspense} from './ReactFiberSuspenseComponent';\n\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {\n  enqueueCapturedUpdate,\n  createUpdate,\n  CaptureUpdate,\n  ForceUpdate,\n  enqueueUpdate,\n} from './ReactUpdateQueue';\nimport {logError} from './ReactFiberCommitWork';\nimport {getStackByFiberInDevAndProd} from './ReactCurrentFiber';\nimport {popHostContainer, popHostContext} from './ReactFiberHostContext';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext';\nimport {popProvider} from './ReactFiberNewContext';\nimport {\n  renderDidSuspend,\n  renderDidError,\n  onUncaughtError,\n  markLegacyErrorBoundaryAsFailed,\n  isAlreadyFailedLegacyErrorBoundary,\n  pingSuspendedRoot,\n  retryTimedOutBoundary,\n} from './ReactFiberScheduler';\n\nimport invariant from 'shared/invariant';\nimport maxSigned31BitInt from './maxSigned31BitInt';\nimport {\n  Sync,\n  expirationTimeToMs,\n  LOW_PRIORITY_EXPIRATION,\n} from './ReactFiberExpirationTime';\nimport {findEarliestOutstandingPriorityLevel} from './ReactFiberPendingPriority';\n\nconst PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  expirationTime: ExpirationTime,\n): Update<mixed> {\n  const update = createUpdate(expirationTime);\n  // Unmount the root by rendering null.\n  update.tag = CaptureUpdate;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element: null};\n  const error = errorInfo.value;\n  update.callback = () => {\n    onUncaughtError(error);\n    logError(fiber, errorInfo);\n  };\n  return update;\n}\n\nfunction createClassErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  expirationTime: ExpirationTime,\n): Update<mixed> {\n  const update = createUpdate(expirationTime);\n  update.tag = CaptureUpdate;\n  const getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (typeof getDerivedStateFromError === 'function') {\n    const error = errorInfo.value;\n    update.payload = () => {\n      return getDerivedStateFromError(error);\n    };\n  }\n\n  const inst = fiber.stateNode;\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n      }\n      const error = errorInfo.value;\n      const stack = errorInfo.stack;\n      logError(fiber, errorInfo);\n      this.componentDidCatch(error, {\n        componentStack: stack !== null ? stack : '',\n      });\n      if (__DEV__) {\n        if (typeof getDerivedStateFromError !== 'function') {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          warningWithoutStack(\n            fiber.expirationTime === Sync,\n            '%s: Error boundaries should implement getDerivedStateFromError(). ' +\n              'In that method, return a state update to display an error message or fallback UI.',\n            getComponentName(fiber.type) || 'Unknown',\n          );\n        }\n      }\n    };\n  }\n  return update;\n}\n\nfunction attachPingListener(\n  root: FiberRoot,\n  renderExpirationTime: ExpirationTime,\n  thenable: Thenable,\n) {\n  // Attach a listener to the promise to \"ping\" the root and retry. But\n  // only if one does not already exist for the current render expiration\n  // time (which acts like a \"thread ID\" here).\n  let pingCache = root.pingCache;\n  let threadIDs;\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    threadIDs = new Set();\n    pingCache.set(thenable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(thenable);\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(thenable, threadIDs);\n    }\n  }\n  if (!threadIDs.has(renderExpirationTime)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(renderExpirationTime);\n    let ping = pingSuspendedRoot.bind(\n      null,\n      root,\n      thenable,\n      renderExpirationTime,\n    );\n    if (enableSchedulerTracing) {\n      ping = Schedule_tracing_wrap(ping);\n    }\n    thenable.then(ping, ping);\n  }\n}\n\nfunction throwException(\n  root: FiberRoot,\n  returnFiber: Fiber,\n  sourceFiber: Fiber,\n  value: mixed,\n  renderExpirationTime: ExpirationTime,\n) {\n  // The source fiber did not complete.\n  sourceFiber.effectTag |= Incomplete;\n  // Its effect list is no longer valid.\n  sourceFiber.firstEffect = sourceFiber.lastEffect = null;\n\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.then === 'function'\n  ) {\n    // This is a thenable.\n    const thenable: Thenable = (value: any);\n\n    // Find the earliest timeout threshold of all the placeholders in the\n    // ancestor path. We could avoid this traversal by storing the thresholds on\n    // the stack, but we choose not to because we only hit this path if we're\n    // IO-bound (i.e. if something suspends). Whereas the stack is used even in\n    // the non-IO- bound case.\n    let workInProgress = returnFiber;\n    let earliestTimeoutMs = -1;\n    let startTimeMs = -1;\n    do {\n      if (workInProgress.tag === SuspenseComponent) {\n        const current = workInProgress.alternate;\n        if (current !== null) {\n          const currentState: SuspenseState | null = current.memoizedState;\n          if (currentState !== null) {\n            // Reached a boundary that already timed out. Do not search\n            // any further.\n            const timedOutAt = currentState.timedOutAt;\n            startTimeMs = expirationTimeToMs(timedOutAt);\n            // Do not search any further.\n            break;\n          }\n        }\n        let timeoutPropMs = workInProgress.pendingProps.maxDuration;\n        if (typeof timeoutPropMs === 'number') {\n          if (timeoutPropMs <= 0) {\n            earliestTimeoutMs = 0;\n          } else if (\n            earliestTimeoutMs === -1 ||\n            timeoutPropMs < earliestTimeoutMs\n          ) {\n            earliestTimeoutMs = timeoutPropMs;\n          }\n        }\n      }\n      // If there is a DehydratedSuspenseComponent we don't have to do anything because\n      // if something suspends inside it, we will simply leave that as dehydrated. It\n      // will never timeout.\n      workInProgress = workInProgress.return;\n    } while (workInProgress !== null);\n\n    // Schedule the nearest Suspense to re-render the timed out view.\n    workInProgress = returnFiber;\n    do {\n      if (\n        workInProgress.tag === SuspenseComponent &&\n        shouldCaptureSuspense(workInProgress)\n      ) {\n        // Found the nearest boundary.\n\n        // Stash the promise on the boundary fiber. If the boundary times out, we'll\n        // attach another listener to flip the boundary back to its normal state.\n        const thenables: Set<Thenable> = (workInProgress.updateQueue: any);\n        if (thenables === null) {\n          const updateQueue = (new Set(): any);\n          updateQueue.add(thenable);\n          workInProgress.updateQueue = updateQueue;\n        } else {\n          thenables.add(thenable);\n        }\n\n        // If the boundary is outside of concurrent mode, we should *not*\n        // suspend the commit. Pretend as if the suspended component rendered\n        // null and keep rendering. In the commit phase, we'll schedule a\n        // subsequent synchronous update to re-render the Suspense.\n        //\n        // Note: It doesn't matter whether the component that suspended was\n        // inside a concurrent mode tree. If the Suspense is outside of it, we\n        // should *not* suspend the commit.\n        if ((workInProgress.mode & ConcurrentMode) === NoEffect) {\n          workInProgress.effectTag |= DidCapture;\n\n          // We're going to commit this fiber even though it didn't complete.\n          // But we shouldn't call any lifecycle methods or callbacks. Remove\n          // all lifecycle effect tags.\n          sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);\n\n          if (sourceFiber.tag === ClassComponent) {\n            const currentSourceFiber = sourceFiber.alternate;\n            if (currentSourceFiber === null) {\n              // This is a new mount. Change the tag so it's not mistaken for a\n              // completed class component. For example, we should not call\n              // componentWillUnmount if it is deleted.\n              sourceFiber.tag = IncompleteClassComponent;\n            } else {\n              // When we try rendering again, we should not reuse the current fiber,\n              // since it's known to be in an inconsistent state. Use a force updte to\n              // prevent a bail out.\n              const update = createUpdate(Sync);\n              update.tag = ForceUpdate;\n              enqueueUpdate(sourceFiber, update);\n            }\n          }\n\n          // The source fiber did not complete. Mark it with Sync priority to\n          // indicate that it still has pending work.\n          sourceFiber.expirationTime = Sync;\n\n          // Exit without suspending.\n          return;\n        }\n\n        // Confirmed that the boundary is in a concurrent mode tree. Continue\n        // with the normal suspend path.\n\n        attachPingListener(root, renderExpirationTime, thenable);\n\n        let absoluteTimeoutMs;\n        if (earliestTimeoutMs === -1) {\n          // If no explicit threshold is given, default to an arbitrarily large\n          // value. The actual size doesn't matter because the threshold for the\n          // whole tree will be clamped to the expiration time.\n          absoluteTimeoutMs = maxSigned31BitInt;\n        } else {\n          if (startTimeMs === -1) {\n            // This suspend happened outside of any already timed-out\n            // placeholders. We don't know exactly when the update was\n            // scheduled, but we can infer an approximate start time from the\n            // expiration time. First, find the earliest uncommitted expiration\n            // time in the tree, including work that is suspended. Then subtract\n            // the offset used to compute an async update's expiration time.\n            // This will cause high priority (interactive) work to expire\n            // earlier than necessary, but we can account for this by adjusting\n            // for the Just Noticeable Difference.\n            const earliestExpirationTime = findEarliestOutstandingPriorityLevel(\n              root,\n              renderExpirationTime,\n            );\n            const earliestExpirationTimeMs = expirationTimeToMs(\n              earliestExpirationTime,\n            );\n            startTimeMs = earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;\n          }\n          absoluteTimeoutMs = startTimeMs + earliestTimeoutMs;\n        }\n\n        // Mark the earliest timeout in the suspended fiber's ancestor path.\n        // After completing the root, we'll take the largest of all the\n        // suspended fiber's timeouts and use it to compute a timeout for the\n        // whole tree.\n        renderDidSuspend(root, absoluteTimeoutMs, renderExpirationTime);\n\n        workInProgress.effectTag |= ShouldCapture;\n        workInProgress.expirationTime = renderExpirationTime;\n        return;\n      } else if (\n        enableSuspenseServerRenderer &&\n        workInProgress.tag === DehydratedSuspenseComponent\n      ) {\n        attachPingListener(root, renderExpirationTime, thenable);\n\n        // Since we already have a current fiber, we can eagerly add a retry listener.\n        let retryCache = workInProgress.memoizedState;\n        if (retryCache === null) {\n          retryCache = workInProgress.memoizedState = new PossiblyWeakSet();\n          const current = workInProgress.alternate;\n          invariant(\n            current,\n            'A dehydrated suspense boundary must commit before trying to render. ' +\n              'This is probably a bug in React.',\n          );\n          current.memoizedState = retryCache;\n        }\n        // Memoize using the boundary fiber to prevent redundant listeners.\n        if (!retryCache.has(thenable)) {\n          retryCache.add(thenable);\n          let retry = retryTimedOutBoundary.bind(\n            null,\n            workInProgress,\n            thenable,\n          );\n          if (enableSchedulerTracing) {\n            retry = Schedule_tracing_wrap(retry);\n          }\n          thenable.then(retry, retry);\n        }\n        workInProgress.effectTag |= ShouldCapture;\n        workInProgress.expirationTime = renderExpirationTime;\n        return;\n      }\n      // This boundary already captured during this render. Continue to the next\n      // boundary.\n      workInProgress = workInProgress.return;\n    } while (workInProgress !== null);\n    // No boundary was found. Fallthrough to error mode.\n    // TODO: Use invariant so the message is stripped in prod?\n    value = new Error(\n      (getComponentName(sourceFiber.type) || 'A React component') +\n        ' suspended while rendering, but no fallback UI was specified.\\n' +\n        '\\n' +\n        'Add a <Suspense fallback=...> component higher in the tree to ' +\n        'provide a loading indicator or placeholder to display.' +\n        getStackByFiberInDevAndProd(sourceFiber),\n    );\n  }\n\n  // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n  renderDidError();\n  value = createCapturedValue(value, sourceFiber);\n  let workInProgress = returnFiber;\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot: {\n        const errorInfo = value;\n        workInProgress.effectTag |= ShouldCapture;\n        workInProgress.expirationTime = renderExpirationTime;\n        const update = createRootErrorUpdate(\n          workInProgress,\n          errorInfo,\n          renderExpirationTime,\n        );\n        enqueueCapturedUpdate(workInProgress, update);\n        return;\n      }\n      case ClassComponent:\n        // Capture and retry\n        const errorInfo = value;\n        const ctor = workInProgress.type;\n        const instance = workInProgress.stateNode;\n        if (\n          (workInProgress.effectTag & DidCapture) === NoEffect &&\n          (typeof ctor.getDerivedStateFromError === 'function' ||\n            (instance !== null &&\n              typeof instance.componentDidCatch === 'function' &&\n              !isAlreadyFailedLegacyErrorBoundary(instance)))\n        ) {\n          workInProgress.effectTag |= ShouldCapture;\n          workInProgress.expirationTime = renderExpirationTime;\n          // Schedule the error boundary to re-render using updated state\n          const update = createClassErrorUpdate(\n            workInProgress,\n            errorInfo,\n            renderExpirationTime,\n          );\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n        break;\n      default:\n        break;\n    }\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nfunction unwindWork(\n  workInProgress: Fiber,\n  renderExpirationTime: ExpirationTime,\n) {\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      const effectTag = workInProgress.effectTag;\n      if (effectTag & ShouldCapture) {\n        workInProgress.effectTag = (effectTag & ~ShouldCapture) | DidCapture;\n        return workInProgress;\n      }\n      return null;\n    }\n    case HostRoot: {\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      const effectTag = workInProgress.effectTag;\n      invariant(\n        (effectTag & DidCapture) === NoEffect,\n        'The root failed to unmount after an error. This is likely a bug in ' +\n          'React. Please file an issue.',\n      );\n      workInProgress.effectTag = (effectTag & ~ShouldCapture) | DidCapture;\n      return workInProgress;\n    }\n    case HostComponent: {\n      // TODO: popHydrationState\n      popHostContext(workInProgress);\n      return null;\n    }\n    case SuspenseComponent: {\n      const effectTag = workInProgress.effectTag;\n      if (effectTag & ShouldCapture) {\n        workInProgress.effectTag = (effectTag & ~ShouldCapture) | DidCapture;\n        // Captured a suspense effect. Re-render the boundary.\n        return workInProgress;\n      }\n      return null;\n    }\n    case DehydratedSuspenseComponent: {\n      if (enableSuspenseServerRenderer) {\n        // TODO: popHydrationState\n        const effectTag = workInProgress.effectTag;\n        if (effectTag & ShouldCapture) {\n          workInProgress.effectTag = (effectTag & ~ShouldCapture) | DidCapture;\n          // Captured a suspense effect. Re-render the boundary.\n          return workInProgress;\n        }\n      }\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n    case ContextProvider:\n      popProvider(workInProgress);\n      return null;\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(interruptedWork: Fiber) {\n  switch (interruptedWork.tag) {\n    case ClassComponent: {\n      const childContextTypes = interruptedWork.type.childContextTypes;\n      if (childContextTypes !== null && childContextTypes !== undefined) {\n        popLegacyContext(interruptedWork);\n      }\n      break;\n    }\n    case HostRoot: {\n      popHostContainer(interruptedWork);\n      popTopLevelLegacyContextObject(interruptedWork);\n      break;\n    }\n    case HostComponent: {\n      popHostContext(interruptedWork);\n      break;\n    }\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n    case ContextProvider:\n      popProvider(interruptedWork);\n      break;\n    default:\n      break;\n  }\n}\n\nexport {\n  throwException,\n  unwindWork,\n  unwindInterruptedWork,\n  createRootErrorUpdate,\n  createClassErrorUpdate,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {\n  Instance,\n  TextInstance,\n  Container,\n  PublicInstance,\n} from './ReactFiberHostConfig';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\n\nimport {\n  findCurrentHostFiber,\n  findCurrentHostFiberWithNoPortals,\n} from 'react-reconciler/reflection';\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport {HostComponent, ClassComponent} from 'shared/ReactWorkTags';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nimport {getPublicInstance} from './ReactFiberHostConfig';\nimport {\n  findCurrentUnmaskedContext,\n  processChildContext,\n  emptyContextObject,\n  isContextProvider as isLegacyContextProvider,\n} from './ReactFiberContext';\nimport {createFiberRoot} from './ReactFiberRoot';\nimport {injectInternals} from './ReactFiberDevToolsHook';\nimport {\n  computeUniqueAsyncExpiration,\n  requestCurrentTime,\n  computeExpirationForFiber,\n  scheduleWork,\n  requestWork,\n  flushRoot,\n  batchedUpdates,\n  unbatchedUpdates,\n  flushSync,\n  flushControlled,\n  deferredUpdates,\n  syncUpdates,\n  interactiveUpdates,\n  flushInteractiveUpdates,\n  flushPassiveEffects,\n} from './ReactFiberScheduler';\nimport {createUpdate, enqueueUpdate} from './ReactUpdateQueue';\nimport ReactFiberInstrumentation from './ReactFiberInstrumentation';\nimport {\n  getStackByFiberInDevAndProd,\n  phase as ReactCurrentFiberPhase,\n  current as ReactCurrentFiberCurrent,\n} from './ReactCurrentFiber';\nimport {StrictMode} from './ReactTypeOfMode';\nimport {Sync} from './ReactFiberExpirationTime';\n\ntype OpaqueRoot = FiberRoot;\n\n// 0 is PROD, 1 is DEV.\n// Might add PROFILE later.\ntype BundleType = 0 | 1;\n\ntype DevToolsConfig = {|\n  bundleType: BundleType,\n  version: string,\n  rendererPackageName: string,\n  // Note: this actually *does* depend on Fiber internal fields.\n  // Used by \"inspect clicked DOM element\" in React DevTools.\n  findFiberByHostInstance?: (instance: Instance | TextInstance) => Fiber,\n  // Used by RN in-app inspector.\n  // This API is unfortunately RN-specific.\n  // TODO: Change it to accept Fiber instead and type it properly.\n  getInspectorDataForViewTag?: (tag: number) => Object,\n|};\n\nlet didWarnAboutNestedUpdates;\nlet didWarnAboutFindNodeInStrictMode;\n\nif (__DEV__) {\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(\n  parentComponent: ?React$Component<any, any>,\n): Object {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  const fiber = getInstance(parentComponent);\n  const parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    const Component = fiber.type;\n    if (isLegacyContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction scheduleRootUpdate(\n  current: Fiber,\n  element: ReactNodeList,\n  expirationTime: ExpirationTime,\n  callback: ?Function,\n) {\n  if (__DEV__) {\n    if (\n      ReactCurrentFiberPhase === 'render' &&\n      ReactCurrentFiberCurrent !== null &&\n      !didWarnAboutNestedUpdates\n    ) {\n      didWarnAboutNestedUpdates = true;\n      warningWithoutStack(\n        false,\n        'Render methods should be a pure function of props and state; ' +\n          'triggering nested component updates from render is not allowed. ' +\n          'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' +\n          'Check the render method of %s.',\n        getComponentName(ReactCurrentFiberCurrent.type) || 'Unknown',\n      );\n    }\n  }\n\n  const update = createUpdate(expirationTime);\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element};\n\n  callback = callback === undefined ? null : callback;\n  if (callback !== null) {\n    warningWithoutStack(\n      typeof callback === 'function',\n      'render(...): Expected the last optional `callback` argument to be a ' +\n        'function. Instead received: %s.',\n      callback,\n    );\n    update.callback = callback;\n  }\n\n  flushPassiveEffects();\n  enqueueUpdate(current, update);\n  scheduleWork(current, expirationTime);\n\n  return expirationTime;\n}\n\nexport function updateContainerAtExpirationTime(\n  element: ReactNodeList,\n  container: OpaqueRoot,\n  parentComponent: ?React$Component<any, any>,\n  expirationTime: ExpirationTime,\n  callback: ?Function,\n) {\n  // TODO: If this is a nested container, this won't be the root.\n  const current = container.current;\n\n  if (__DEV__) {\n    if (ReactFiberInstrumentation.debugTool) {\n      if (current.alternate === null) {\n        ReactFiberInstrumentation.debugTool.onMountContainer(container);\n      } else if (element === null) {\n        ReactFiberInstrumentation.debugTool.onUnmountContainer(container);\n      } else {\n        ReactFiberInstrumentation.debugTool.onUpdateContainer(container);\n      }\n    }\n  }\n\n  const context = getContextForSubtree(parentComponent);\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  return scheduleRootUpdate(current, element, expirationTime, callback);\n}\n\nfunction findHostInstance(component: Object): PublicInstance | null {\n  const fiber = getInstance(component);\n  if (fiber === undefined) {\n    if (typeof component.render === 'function') {\n      invariant(false, 'Unable to find node on an unmounted component.');\n    } else {\n      invariant(\n        false,\n        'Argument appears to not be a ReactComponent. Keys: %s',\n        Object.keys(component),\n      );\n    }\n  }\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction findHostInstanceWithWarning(\n  component: Object,\n  methodName: string,\n): PublicInstance | null {\n  if (__DEV__) {\n    const fiber = getInstance(component);\n    if (fiber === undefined) {\n      if (typeof component.render === 'function') {\n        invariant(false, 'Unable to find node on an unmounted component.');\n      } else {\n        invariant(\n          false,\n          'Argument appears to not be a ReactComponent. Keys: %s',\n          Object.keys(component),\n        );\n      }\n    }\n    const hostFiber = findCurrentHostFiber(fiber);\n    if (hostFiber === null) {\n      return null;\n    }\n    if (hostFiber.mode & StrictMode) {\n      const componentName = getComponentName(fiber.type) || 'Component';\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n        if (fiber.mode & StrictMode) {\n          warningWithoutStack(\n            false,\n            '%s is deprecated in StrictMode. ' +\n              '%s was passed an instance of %s which is inside StrictMode. ' +\n              'Instead, add a ref directly to the element you want to reference.' +\n              '\\n%s' +\n              '\\n\\nLearn more about using refs safely here:' +\n              '\\nhttps://fb.me/react-strict-mode-find-node',\n            methodName,\n            methodName,\n            componentName,\n            getStackByFiberInDevAndProd(hostFiber),\n          );\n        } else {\n          warningWithoutStack(\n            false,\n            '%s is deprecated in StrictMode. ' +\n              '%s was passed an instance of %s which renders StrictMode children. ' +\n              'Instead, add a ref directly to the element you want to reference.' +\n              '\\n%s' +\n              '\\n\\nLearn more about using refs safely here:' +\n              '\\nhttps://fb.me/react-strict-mode-find-node',\n            methodName,\n            methodName,\n            componentName,\n            getStackByFiberInDevAndProd(hostFiber),\n          );\n        }\n      }\n    }\n    return hostFiber.stateNode;\n  }\n  return findHostInstance(component);\n}\n\nexport function createContainer(\n  containerInfo: Container,\n  isConcurrent: boolean,\n  hydrate: boolean,\n): OpaqueRoot {\n  return createFiberRoot(containerInfo, isConcurrent, hydrate);\n}\n\nexport function updateContainer(\n  element: ReactNodeList,\n  container: OpaqueRoot,\n  parentComponent: ?React$Component<any, any>,\n  callback: ?Function,\n): ExpirationTime {\n  const current = container.current;\n  const currentTime = requestCurrentTime();\n  const expirationTime = computeExpirationForFiber(currentTime, current);\n  return updateContainerAtExpirationTime(\n    element,\n    container,\n    parentComponent,\n    expirationTime,\n    callback,\n  );\n}\n\nexport {\n  flushRoot,\n  requestWork,\n  computeUniqueAsyncExpiration,\n  batchedUpdates,\n  unbatchedUpdates,\n  deferredUpdates,\n  syncUpdates,\n  interactiveUpdates,\n  flushInteractiveUpdates,\n  flushControlled,\n  flushSync,\n};\n\nexport function getPublicRootInstance(\n  container: OpaqueRoot,\n): React$Component<any, any> | PublicInstance | null {\n  const containerFiber = container.current;\n  if (!containerFiber.child) {\n    return null;\n  }\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nexport {findHostInstance};\n\nexport {findHostInstanceWithWarning};\n\nexport function findHostInstanceWithNoPortals(\n  fiber: Fiber,\n): PublicInstance | null {\n  const hostFiber = findCurrentHostFiberWithNoPortals(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nlet overrideProps = null;\n\nif (__DEV__) {\n  const copyWithSetImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    idx: number,\n    value: any,\n  ) => {\n    if (idx >= path.length) {\n      return value;\n    }\n    const key = path[idx];\n    const updated = Array.isArray(obj) ? obj.slice() : {...obj};\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);\n    return updated;\n  };\n\n  const copyWithSet = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    value: any,\n  ): Object | Array<any> => {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  // Support DevTools props for function components, forwardRef, memo, host components, etc.\n  overrideProps = (fiber: Fiber, path: Array<string | number>, value: any) => {\n    flushPassiveEffects();\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleWork(fiber, Sync);\n  };\n}\n\nexport function injectIntoDevTools(devToolsConfig: DevToolsConfig): boolean {\n  const {findFiberByHostInstance} = devToolsConfig;\n  const {ReactCurrentDispatcher} = ReactSharedInternals;\n\n  return injectInternals({\n    ...devToolsConfig,\n    overrideProps,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber(fiber: Fiber): Instance | TextInstance | null {\n      const hostFiber = findCurrentHostFiber(fiber);\n      if (hostFiber === null) {\n        return null;\n      }\n      return hostFiber.stateNode;\n    },\n    findFiberByHostInstance(instance: Instance | TextInstance): Fiber | null {\n      if (!findFiberByHostInstance) {\n        // Might not be implemented by the renderer.\n        return null;\n      }\n      return findFiberByHostInstance(instance);\n    },\n  });\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList} from 'shared/ReactTypes';\n// TODO: This type is shared between the reconciler and ReactDOM, but will\n// eventually be lifted out to the renderer.\nimport type {\n  FiberRoot,\n  Batch as FiberRootBatch,\n} from 'react-reconciler/src/ReactFiberRoot';\n\nimport '../shared/checkReact';\nimport './ReactDOMClientInjection';\n\nimport {\n  computeUniqueAsyncExpiration,\n  findHostInstanceWithNoPortals,\n  updateContainerAtExpirationTime,\n  flushRoot,\n  createContainer,\n  updateContainer,\n  batchedUpdates,\n  unbatchedUpdates,\n  interactiveUpdates,\n  flushInteractiveUpdates,\n  flushSync,\n  flushControlled,\n  injectIntoDevTools,\n  getPublicRootInstance,\n  findHostInstance,\n  findHostInstanceWithWarning,\n} from 'react-reconciler/inline.dom';\nimport {createPortal as createPortalImpl} from 'shared/ReactPortal';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\nimport {setBatchingImplementation} from 'react-events/ReactGenericBatching';\nimport {\n  setRestoreImplementation,\n  enqueueStateRestore,\n  restoreStateIfNeeded,\n} from 'react-events/ReactControlledComponent';\nimport {\n  injection as EventPluginHubInjection,\n  runEventsInBatch,\n} from 'react-events/EventPluginHub';\nimport {eventNameDispatchConfigs} from 'react-events/EventPluginRegistry';\nimport {\n  accumulateTwoPhaseDispatches,\n  accumulateDirectDispatches,\n} from 'react-events/EventPropagators';\nimport {has as hasInstance} from 'shared/ReactInstanceMap';\nimport ReactVersion from 'shared/ReactVersion';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport lowPriorityWarning from 'shared/lowPriorityWarning';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport {enableStableConcurrentModeAPIs} from 'shared/ReactFeatureFlags';\n\nimport {\n  getInstanceFromNode,\n  getNodeFromInstance,\n  getFiberCurrentPropsFromNode,\n  getClosestInstanceFromNode,\n} from './ReactDOMComponentTree';\nimport {restoreControlledState} from './ReactDOMComponent';\nimport {dispatchEvent} from '../events/ReactDOMEventListener';\nimport {\n  ELEMENT_NODE,\n  COMMENT_NODE,\n  DOCUMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n} from '../shared/HTMLNodeType';\nimport {ROOT_ATTRIBUTE_NAME} from '../shared/DOMProperty';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nlet topLevelUpdateWarnings;\nlet warnOnInvalidCallback;\nlet didWarnAboutUnstableCreatePortal = false;\n\nif (__DEV__) {\n  if (\n    typeof Map !== 'function' ||\n    // $FlowIssue Flow incorrectly thinks Map has no prototype\n    Map.prototype == null ||\n    typeof Map.prototype.forEach !== 'function' ||\n    typeof Set !== 'function' ||\n    // $FlowIssue Flow incorrectly thinks Set has no prototype\n    Set.prototype == null ||\n    typeof Set.prototype.clear !== 'function' ||\n    typeof Set.prototype.forEach !== 'function'\n  ) {\n    warningWithoutStack(\n      false,\n      'React depends on Map and Set built-in types. Make sure that you load a ' +\n        'polyfill in older browsers. https://fb.me/react-polyfills',\n    );\n  }\n\n  topLevelUpdateWarnings = (container: DOMContainer) => {\n    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {\n      const hostInstance = findHostInstanceWithNoPortals(\n        container._reactRootContainer._internalRoot.current,\n      );\n      if (hostInstance) {\n        warningWithoutStack(\n          hostInstance.parentNode === container,\n          'render(...): It looks like the React-rendered content of this ' +\n            'container was removed without using React. This is not ' +\n            'supported and will cause errors. Instead, call ' +\n            'ReactDOM.unmountComponentAtNode to empty a container.',\n        );\n      }\n    }\n\n    const isRootRenderedBySomeReact = !!container._reactRootContainer;\n    const rootEl = getReactRootElementInContainer(container);\n    const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));\n\n    warningWithoutStack(\n      !hasNonRootReactChild || isRootRenderedBySomeReact,\n      'render(...): Replacing React-rendered children with a new root ' +\n        'component. If you intended to update the children of this node, ' +\n        'you should instead have the existing children update their state ' +\n        'and render the new components instead of calling ReactDOM.render.',\n    );\n\n    warningWithoutStack(\n      container.nodeType !== ELEMENT_NODE ||\n        !((container: any): Element).tagName ||\n        ((container: any): Element).tagName.toUpperCase() !== 'BODY',\n      'render(): Rendering components directly into document.body is ' +\n        'discouraged, since its children are often manipulated by third-party ' +\n        'scripts and browser extensions. This may lead to subtle ' +\n        'reconciliation issues. Try rendering into a container element created ' +\n        'for your app.',\n    );\n  };\n\n  warnOnInvalidCallback = function(callback: mixed, callerName: string) {\n    warningWithoutStack(\n      callback === null || typeof callback === 'function',\n      '%s(...): Expected the last optional `callback` argument to be a ' +\n        'function. Instead received: %s.',\n      callerName,\n      callback,\n    );\n  };\n}\n\nsetRestoreImplementation(restoreControlledState);\n\nexport type DOMContainer =\n  | (Element & {\n      _reactRootContainer: ?Root,\n      _reactHasBeenPassedToCreateRootDEV: ?boolean,\n    })\n  | (Document & {\n      _reactRootContainer: ?Root,\n      _reactHasBeenPassedToCreateRootDEV: ?boolean,\n    });\n\ntype Batch = FiberRootBatch & {\n  render(children: ReactNodeList): Work,\n  then(onComplete: () => mixed): void,\n  commit(): void,\n\n  // The ReactRoot constructor is hoisted but the prototype methods are not. If\n  // we move ReactRoot to be above ReactBatch, the inverse error occurs.\n  // $FlowFixMe Hoisting issue.\n  _root: Root,\n  _hasChildren: boolean,\n  _children: ReactNodeList,\n\n  _callbacks: Array<() => mixed> | null,\n  _didComplete: boolean,\n};\n\ntype Root = {\n  render(children: ReactNodeList, callback: ?() => mixed): Work,\n  unmount(callback: ?() => mixed): Work,\n  legacy_renderSubtreeIntoContainer(\n    parentComponent: ?React$Component<any, any>,\n    children: ReactNodeList,\n    callback: ?() => mixed,\n  ): Work,\n  createBatch(): Batch,\n\n  _internalRoot: FiberRoot,\n};\n\nfunction ReactBatch(root: ReactRoot) {\n  const expirationTime = computeUniqueAsyncExpiration();\n  this._expirationTime = expirationTime;\n  this._root = root;\n  this._next = null;\n  this._callbacks = null;\n  this._didComplete = false;\n  this._hasChildren = false;\n  this._children = null;\n  this._defer = true;\n}\nReactBatch.prototype.render = function(children: ReactNodeList) {\n  invariant(\n    this._defer,\n    'batch.render: Cannot render a batch that already committed.',\n  );\n  this._hasChildren = true;\n  this._children = children;\n  const internalRoot = this._root._internalRoot;\n  const expirationTime = this._expirationTime;\n  const work = new ReactWork();\n  updateContainerAtExpirationTime(\n    children,\n    internalRoot,\n    null,\n    expirationTime,\n    work._onCommit,\n  );\n  return work;\n};\nReactBatch.prototype.then = function(onComplete: () => mixed) {\n  if (this._didComplete) {\n    onComplete();\n    return;\n  }\n  let callbacks = this._callbacks;\n  if (callbacks === null) {\n    callbacks = this._callbacks = [];\n  }\n  callbacks.push(onComplete);\n};\nReactBatch.prototype.commit = function() {\n  const internalRoot = this._root._internalRoot;\n  let firstBatch = internalRoot.firstBatch;\n  invariant(\n    this._defer && firstBatch !== null,\n    'batch.commit: Cannot commit a batch multiple times.',\n  );\n\n  if (!this._hasChildren) {\n    // This batch is empty. Return.\n    this._next = null;\n    this._defer = false;\n    return;\n  }\n\n  let expirationTime = this._expirationTime;\n\n  // Ensure this is the first batch in the list.\n  if (firstBatch !== this) {\n    // This batch is not the earliest batch. We need to move it to the front.\n    // Update its expiration time to be the expiration time of the earliest\n    // batch, so that we can flush it without flushing the other batches.\n    if (this._hasChildren) {\n      expirationTime = this._expirationTime = firstBatch._expirationTime;\n      // Rendering this batch again ensures its children will be the final state\n      // when we flush (updates are processed in insertion order: last\n      // update wins).\n      // TODO: This forces a restart. Should we print a warning?\n      this.render(this._children);\n    }\n\n    // Remove the batch from the list.\n    let previous = null;\n    let batch = firstBatch;\n    while (batch !== this) {\n      previous = batch;\n      batch = batch._next;\n    }\n    invariant(\n      previous !== null,\n      'batch.commit: Cannot commit a batch multiple times.',\n    );\n    previous._next = batch._next;\n\n    // Add it to the front.\n    this._next = firstBatch;\n    firstBatch = internalRoot.firstBatch = this;\n  }\n\n  // Synchronously flush all the work up to this batch's expiration time.\n  this._defer = false;\n  flushRoot(internalRoot, expirationTime);\n\n  // Pop the batch from the list.\n  const next = this._next;\n  this._next = null;\n  firstBatch = internalRoot.firstBatch = next;\n\n  // Append the next earliest batch's children to the update queue.\n  if (firstBatch !== null && firstBatch._hasChildren) {\n    firstBatch.render(firstBatch._children);\n  }\n};\nReactBatch.prototype._onComplete = function() {\n  if (this._didComplete) {\n    return;\n  }\n  this._didComplete = true;\n  const callbacks = this._callbacks;\n  if (callbacks === null) {\n    return;\n  }\n  // TODO: Error handling.\n  for (let i = 0; i < callbacks.length; i++) {\n    const callback = callbacks[i];\n    callback();\n  }\n};\n\ntype Work = {\n  then(onCommit: () => mixed): void,\n  _onCommit: () => void,\n  _callbacks: Array<() => mixed> | null,\n  _didCommit: boolean,\n};\n\nfunction ReactWork() {\n  this._callbacks = null;\n  this._didCommit = false;\n  // TODO: Avoid need to bind by replacing callbacks in the update queue with\n  // list of Work objects.\n  this._onCommit = this._onCommit.bind(this);\n}\nReactWork.prototype.then = function(onCommit: () => mixed): void {\n  if (this._didCommit) {\n    onCommit();\n    return;\n  }\n  let callbacks = this._callbacks;\n  if (callbacks === null) {\n    callbacks = this._callbacks = [];\n  }\n  callbacks.push(onCommit);\n};\nReactWork.prototype._onCommit = function(): void {\n  if (this._didCommit) {\n    return;\n  }\n  this._didCommit = true;\n  const callbacks = this._callbacks;\n  if (callbacks === null) {\n    return;\n  }\n  // TODO: Error handling.\n  for (let i = 0; i < callbacks.length; i++) {\n    const callback = callbacks[i];\n    invariant(\n      typeof callback === 'function',\n      'Invalid argument passed as callback. Expected a function. Instead ' +\n        'received: %s',\n      callback,\n    );\n    callback();\n  }\n};\n\nfunction ReactRoot(\n  container: DOMContainer,\n  isConcurrent: boolean,\n  hydrate: boolean,\n) {\n  const root = createContainer(container, isConcurrent, hydrate);\n  this._internalRoot = root;\n}\nReactRoot.prototype.render = function(\n  children: ReactNodeList,\n  callback: ?() => mixed,\n): Work {\n  const root = this._internalRoot;\n  const work = new ReactWork();\n  callback = callback === undefined ? null : callback;\n  if (__DEV__) {\n    warnOnInvalidCallback(callback, 'render');\n  }\n  if (callback !== null) {\n    work.then(callback);\n  }\n  updateContainer(children, root, null, work._onCommit);\n  return work;\n};\nReactRoot.prototype.unmount = function(callback: ?() => mixed): Work {\n  const root = this._internalRoot;\n  const work = new ReactWork();\n  callback = callback === undefined ? null : callback;\n  if (__DEV__) {\n    warnOnInvalidCallback(callback, 'render');\n  }\n  if (callback !== null) {\n    work.then(callback);\n  }\n  updateContainer(null, root, null, work._onCommit);\n  return work;\n};\nReactRoot.prototype.legacy_renderSubtreeIntoContainer = function(\n  parentComponent: ?React$Component<any, any>,\n  children: ReactNodeList,\n  callback: ?() => mixed,\n): Work {\n  const root = this._internalRoot;\n  const work = new ReactWork();\n  callback = callback === undefined ? null : callback;\n  if (__DEV__) {\n    warnOnInvalidCallback(callback, 'render');\n  }\n  if (callback !== null) {\n    work.then(callback);\n  }\n  updateContainer(children, root, parentComponent, work._onCommit);\n  return work;\n};\nReactRoot.prototype.createBatch = function(): Batch {\n  const batch = new ReactBatch(this);\n  const expirationTime = batch._expirationTime;\n\n  const internalRoot = this._internalRoot;\n  const firstBatch = internalRoot.firstBatch;\n  if (firstBatch === null) {\n    internalRoot.firstBatch = batch;\n    batch._next = null;\n  } else {\n    // Insert sorted by expiration time then insertion order\n    let insertAfter = null;\n    let insertBefore = firstBatch;\n    while (\n      insertBefore !== null &&\n      insertBefore._expirationTime >= expirationTime\n    ) {\n      insertAfter = insertBefore;\n      insertBefore = insertBefore._next;\n    }\n    batch._next = insertBefore;\n    if (insertAfter !== null) {\n      insertAfter._next = batch;\n    }\n  }\n\n  return batch;\n};\n\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\nfunction isValidContainer(node) {\n  return !!(\n    node &&\n    (node.nodeType === ELEMENT_NODE ||\n      node.nodeType === DOCUMENT_NODE ||\n      node.nodeType === DOCUMENT_FRAGMENT_NODE ||\n      (node.nodeType === COMMENT_NODE &&\n        node.nodeValue === ' react-mount-point-unstable '))\n  );\n}\n\nfunction getReactRootElementInContainer(container: any) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOCUMENT_NODE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction shouldHydrateDueToLegacyHeuristic(container) {\n  const rootElement = getReactRootElementInContainer(container);\n  return !!(\n    rootElement &&\n    rootElement.nodeType === ELEMENT_NODE &&\n    rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME)\n  );\n}\n\nsetBatchingImplementation(\n  batchedUpdates,\n  interactiveUpdates,\n  flushInteractiveUpdates,\n);\n\nlet warnedAboutHydrateAPI = false;\n\nfunction legacyCreateRootFromDOMContainer(\n  container: DOMContainer,\n  forceHydrate: boolean,\n): Root {\n  const shouldHydrate =\n    forceHydrate || shouldHydrateDueToLegacyHeuristic(container);\n  // First clear any existing content.\n  if (!shouldHydrate) {\n    let warned = false;\n    let rootSibling;\n    while ((rootSibling = container.lastChild)) {\n      if (__DEV__) {\n        if (\n          !warned &&\n          rootSibling.nodeType === ELEMENT_NODE &&\n          (rootSibling: any).hasAttribute(ROOT_ATTRIBUTE_NAME)\n        ) {\n          warned = true;\n          warningWithoutStack(\n            false,\n            'render(): Target node has markup rendered by React, but there ' +\n              'are unrelated nodes as well. This is most commonly caused by ' +\n              'white-space inserted around server-rendered markup.',\n          );\n        }\n      }\n      container.removeChild(rootSibling);\n    }\n  }\n  if (__DEV__) {\n    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {\n      warnedAboutHydrateAPI = true;\n      lowPriorityWarning(\n        false,\n        'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' +\n          'will stop working in React v17. Replace the ReactDOM.render() call ' +\n          'with ReactDOM.hydrate() if you want React to attach to the server HTML.',\n      );\n    }\n  }\n  // Legacy roots are not async by default.\n  const isConcurrent = false;\n  return new ReactRoot(container, isConcurrent, shouldHydrate);\n}\n\nfunction legacyRenderSubtreeIntoContainer(\n  parentComponent: ?React$Component<any, any>,\n  children: ReactNodeList,\n  container: DOMContainer,\n  forceHydrate: boolean,\n  callback: ?Function,\n) {\n  if (__DEV__) {\n    topLevelUpdateWarnings(container);\n  }\n\n  // TODO: Without `any` type, Flow says \"Property cannot be accessed on any\n  // member of intersection type.\" Whyyyyyy.\n  let root: Root = (container._reactRootContainer: any);\n  if (!root) {\n    // Initial mount\n    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(\n      container,\n      forceHydrate,\n    );\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n      callback = function() {\n        const instance = getPublicRootInstance(root._internalRoot);\n        originalCallback.call(instance);\n      };\n    }\n    // Initial mount should not be batched.\n    unbatchedUpdates(() => {\n      if (parentComponent != null) {\n        root.legacy_renderSubtreeIntoContainer(\n          parentComponent,\n          children,\n          callback,\n        );\n      } else {\n        root.render(children, callback);\n      }\n    });\n  } else {\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n      callback = function() {\n        const instance = getPublicRootInstance(root._internalRoot);\n        originalCallback.call(instance);\n      };\n    }\n    // Update\n    if (parentComponent != null) {\n      root.legacy_renderSubtreeIntoContainer(\n        parentComponent,\n        children,\n        callback,\n      );\n    } else {\n      root.render(children, callback);\n    }\n  }\n  return getPublicRootInstance(root._internalRoot);\n}\n\nfunction createPortal(\n  children: ReactNodeList,\n  container: DOMContainer,\n  key: ?string = null,\n) {\n  invariant(\n    isValidContainer(container),\n    'Target container is not a DOM element.',\n  );\n  // TODO: pass ReactDOM portal implementation as third argument\n  return createPortalImpl(children, container, null, key);\n}\n\nconst ReactDOM: Object = {\n  createPortal,\n\n  findDOMNode(\n    componentOrElement: Element | ?React$Component<any, any>,\n  ): null | Element | Text {\n    if (__DEV__) {\n      let owner = (ReactCurrentOwner.current: any);\n      if (owner !== null && owner.stateNode !== null) {\n        const warnedAboutRefsInRender =\n          owner.stateNode._warnedAboutRefsInRender;\n        warningWithoutStack(\n          warnedAboutRefsInRender,\n          '%s is accessing findDOMNode inside its render(). ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentName(owner.type) || 'A component',\n        );\n        owner.stateNode._warnedAboutRefsInRender = true;\n      }\n    }\n    if (componentOrElement == null) {\n      return null;\n    }\n    if ((componentOrElement: any).nodeType === ELEMENT_NODE) {\n      return (componentOrElement: any);\n    }\n    if (__DEV__) {\n      return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');\n    }\n    return findHostInstance(componentOrElement);\n  },\n\n  hydrate(element: React$Node, container: DOMContainer, callback: ?Function) {\n    invariant(\n      isValidContainer(container),\n      'Target container is not a DOM element.',\n    );\n    if (__DEV__) {\n      warningWithoutStack(\n        !container._reactHasBeenPassedToCreateRootDEV,\n        'You are calling ReactDOM.hydrate() on a container that was previously ' +\n          'passed to ReactDOM.%s(). This is not supported. ' +\n          'Did you mean to call createRoot(container, {hydrate: true}).render(element)?',\n        enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot',\n      );\n    }\n    // TODO: throw or warn if we couldn't hydrate?\n    return legacyRenderSubtreeIntoContainer(\n      null,\n      element,\n      container,\n      true,\n      callback,\n    );\n  },\n\n  render(\n    element: React$Element<any>,\n    container: DOMContainer,\n    callback: ?Function,\n  ) {\n    invariant(\n      isValidContainer(container),\n      'Target container is not a DOM element.',\n    );\n    if (__DEV__) {\n      warningWithoutStack(\n        !container._reactHasBeenPassedToCreateRootDEV,\n        'You are calling ReactDOM.render() on a container that was previously ' +\n          'passed to ReactDOM.%s(). This is not supported. ' +\n          'Did you mean to call root.render(element)?',\n        enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot',\n      );\n    }\n    return legacyRenderSubtreeIntoContainer(\n      null,\n      element,\n      container,\n      false,\n      callback,\n    );\n  },\n\n  unstable_renderSubtreeIntoContainer(\n    parentComponent: React$Component<any, any>,\n    element: React$Element<any>,\n    containerNode: DOMContainer,\n    callback: ?Function,\n  ) {\n    invariant(\n      isValidContainer(containerNode),\n      'Target container is not a DOM element.',\n    );\n    invariant(\n      parentComponent != null && hasInstance(parentComponent),\n      'parentComponent must be a valid React Component',\n    );\n    return legacyRenderSubtreeIntoContainer(\n      parentComponent,\n      element,\n      containerNode,\n      false,\n      callback,\n    );\n  },\n\n  unmountComponentAtNode(container: DOMContainer) {\n    invariant(\n      isValidContainer(container),\n      'unmountComponentAtNode(...): Target container is not a DOM element.',\n    );\n\n    if (__DEV__) {\n      warningWithoutStack(\n        !container._reactHasBeenPassedToCreateRootDEV,\n        'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' +\n          'passed to ReactDOM.%s(). This is not supported. Did you mean to call root.unmount()?',\n        enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot',\n      );\n    }\n\n    if (container._reactRootContainer) {\n      if (__DEV__) {\n        const rootEl = getReactRootElementInContainer(container);\n        const renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);\n        warningWithoutStack(\n          !renderedByDifferentReact,\n          \"unmountComponentAtNode(): The node you're attempting to unmount \" +\n            'was rendered by another copy of React.',\n        );\n      }\n\n      // Unmount should not be batched.\n      unbatchedUpdates(() => {\n        legacyRenderSubtreeIntoContainer(null, null, container, false, () => {\n          container._reactRootContainer = null;\n        });\n      });\n      // If you call unmountComponentAtNode twice in quick succession, you'll\n      // get `true` twice. That's probably fine?\n      return true;\n    } else {\n      if (__DEV__) {\n        const rootEl = getReactRootElementInContainer(container);\n        const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));\n\n        // Check if the container itself is a React root node.\n        const isContainerReactRoot =\n          container.nodeType === ELEMENT_NODE &&\n          isValidContainer(container.parentNode) &&\n          !!container.parentNode._reactRootContainer;\n\n        warningWithoutStack(\n          !hasNonRootReactChild,\n          \"unmountComponentAtNode(): The node you're attempting to unmount \" +\n            'was rendered by React and is not a top-level container. %s',\n          isContainerReactRoot\n            ? 'You may have accidentally passed in a React root node instead ' +\n              'of its container.'\n            : 'Instead, have the parent component update its state and ' +\n              'rerender in order to remove this component.',\n        );\n      }\n\n      return false;\n    }\n  },\n\n  // Temporary alias since we already shipped React 16 RC with it.\n  // TODO: remove in React 17.\n  unstable_createPortal(...args) {\n    if (!didWarnAboutUnstableCreatePortal) {\n      didWarnAboutUnstableCreatePortal = true;\n      lowPriorityWarning(\n        false,\n        'The ReactDOM.unstable_createPortal() alias has been deprecated, ' +\n          'and will be removed in React 17+. Update your code to use ' +\n          'ReactDOM.createPortal() instead. It has the exact same API, ' +\n          'but without the \"unstable_\" prefix.',\n      );\n    }\n    return createPortal(...args);\n  },\n\n  unstable_batchedUpdates: batchedUpdates,\n\n  unstable_interactiveUpdates: interactiveUpdates,\n\n  flushSync: flushSync,\n\n  unstable_createRoot: createRoot,\n  unstable_flushControlled: flushControlled,\n\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    // Keep in sync with ReactDOMUnstableNativeDependencies.js\n    // and ReactTestUtils.js. This is an array for better minification.\n    Events: [\n      getInstanceFromNode,\n      getNodeFromInstance,\n      getFiberCurrentPropsFromNode,\n      EventPluginHubInjection.injectEventPluginsByName,\n      eventNameDispatchConfigs,\n      accumulateTwoPhaseDispatches,\n      accumulateDirectDispatches,\n      enqueueStateRestore,\n      restoreStateIfNeeded,\n      dispatchEvent,\n      runEventsInBatch,\n    ],\n  },\n};\n\ntype RootOptions = {\n  hydrate?: boolean,\n};\n\nfunction createRoot(container: DOMContainer, options?: RootOptions): ReactRoot {\n  const functionName = enableStableConcurrentModeAPIs\n    ? 'createRoot'\n    : 'unstable_createRoot';\n  invariant(\n    isValidContainer(container),\n    '%s(...): Target container is not a DOM element.',\n    functionName,\n  );\n  if (__DEV__) {\n    warningWithoutStack(\n      !container._reactRootContainer,\n      'You are calling ReactDOM.%s() on a container that was previously ' +\n        'passed to ReactDOM.render(). This is not supported.',\n      enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot',\n    );\n    container._reactHasBeenPassedToCreateRootDEV = true;\n  }\n  const hydrate = options != null && options.hydrate === true;\n  return new ReactRoot(container, true, hydrate);\n}\n\nif (enableStableConcurrentModeAPIs) {\n  ReactDOM.createRoot = createRoot;\n  ReactDOM.unstable_createRoot = undefined;\n}\n\nconst foundDevTools = injectIntoDevTools({\n  findFiberByHostInstance: getClosestInstanceFromNode,\n  bundleType: __DEV__ ? 1 : 0,\n  version: ReactVersion,\n  rendererPackageName: 'react-dom',\n});\n\nif (__DEV__) {\n  if (!foundDevTools && canUseDOM && window.top === window.self) {\n    // If we're in Chrome or Firefox, provide a download link if not installed.\n    if (\n      (navigator.userAgent.indexOf('Chrome') > -1 &&\n        navigator.userAgent.indexOf('Edge') === -1) ||\n      navigator.userAgent.indexOf('Firefox') > -1\n    ) {\n      const protocol = window.location.protocol;\n      // Don't warn in exotic cases like chrome-extension://.\n      if (/^(https?|file):$/.test(protocol)) {\n        console.info(\n          '%cDownload the React DevTools ' +\n            'for a better development experience: ' +\n            'https://fb.me/react-devtools' +\n            (protocol === 'file:'\n              ? '\\nYou might need to use a local HTTP server (instead of file://): ' +\n                'https://fb.me/react-devtools-faq'\n              : ''),\n          'font-weight:bold',\n        );\n      }\n    }\n  }\n}\n\nexport default ReactDOM;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {REACT_PORTAL_TYPE} from 'shared/ReactSymbols';\n\nimport type {ReactNodeList, ReactPortal} from 'shared/ReactTypes';\n\nexport function createPortal(\n  children: ReactNodeList,\n  containerInfo: any,\n  // TODO: figure out the API for cross-renderer implementation.\n  implementation: any,\n  key: ?string = null,\n): ReactPortal {\n  return {\n    // This tag allow us to uniquely identify this as a React Portal\n    $$typeof: REACT_PORTAL_TYPE,\n    key: key == null ? null : '' + key,\n    children,\n    containerInfo,\n    implementation,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nconst didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  if (__DEV__) {\n    const constructor = publicInstance.constructor;\n    const componentName =\n      (constructor && (constructor.displayName || constructor.name)) ||\n      'ReactClass';\n    const warningKey = `${componentName}.${callerName}`;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    warningWithoutStack(\n      false,\n      \"Can't call %s on a component that is not yet mounted. \" +\n        'This is a no-op, but it might indicate a bug in your application. ' +\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\n        'class property with the desired state in the %s component.',\n      callerName,\n      componentName,\n    );\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nconst ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function(publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function(\n    publicInstance,\n    completeState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function(\n    publicInstance,\n    partialState,\n    callback,\n    callerName,\n  ) {\n    warnNoop(publicInstance, 'setState');\n  },\n};\n\nexport default ReactNoopUpdateQueue;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport invariant from 'shared/invariant';\nimport lowPriorityWarning from 'shared/lowPriorityWarning';\n\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\n\nconst emptyObject = {};\nif (__DEV__) {\n  Object.freeze(emptyObject);\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function(partialState, callback) {\n  invariant(\n    typeof partialState === 'object' ||\n      typeof partialState === 'function' ||\n      partialState == null,\n    'setState(...): takes an object of state variables to update or a ' +\n      'function which returns an object of state variables.',\n  );\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function(callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (__DEV__) {\n  const deprecatedAPIs = {\n    isMounted: [\n      'isMounted',\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\n        'componentWillUnmount to prevent memory leaks.',\n    ],\n    replaceState: [\n      'replaceState',\n      'Refactor your code to use setState instead (see ' +\n        'https://github.com/facebook/react/issues/3236).',\n    ],\n  };\n  const defineDeprecationWarning = function(methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function() {\n        lowPriorityWarning(\n          false,\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\n          info[0],\n          info[1],\n        );\n        return undefined;\n      },\n    });\n  };\n  for (const fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\n\n/**\n * Convenience component with default shallow equality check for sCU.\n */\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\nObject.assign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\nexport {Component, PureComponent};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport invariant from 'shared/invariant';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\n\nimport ReactCurrentOwner from './ReactCurrentOwner';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true,\n};\n\nlet specialPropKeyWarningShown, specialPropRefWarningShown;\n\nfunction hasValidRef(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'ref')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (__DEV__) {\n    if (hasOwnProperty.call(config, 'key')) {\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  const warnAboutAccessingKey = function() {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      warningWithoutStack(\n        false,\n        '%s: `key` is not a prop. Trying to access it will result ' +\n          'in `undefined` being returned. If you need to access the same ' +\n          'value within the child component, you should pass it as a different ' +\n          'prop. (https://fb.me/react-special-props)',\n        displayName,\n      );\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true,\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  const warnAboutAccessingRef = function() {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      warningWithoutStack(\n        false,\n        '%s: `ref` is not a prop. Trying to access it will result ' +\n          'in `undefined` being returned. If you need to access the same ' +\n          'value within the child component, you should pass it as a different ' +\n          'prop. (https://fb.me/react-special-props)',\n        displayName,\n      );\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true,\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\n  const element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner,\n  };\n\n  if (__DEV__) {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false,\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self,\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source,\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nexport function createElement(type, config, children) {\n  let propName;\n\n  // Reserved names are extracted\n  const props = {};\n\n  let key = null;\n  let ref = null;\n  let self = null;\n  let source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        !RESERVED_PROPS.hasOwnProperty(propName)\n      ) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (__DEV__) {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    const defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (__DEV__) {\n    if (key || ref) {\n      const displayName =\n        typeof type === 'function'\n          ? type.displayName || type.name || 'Unknown'\n          : type;\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n  return ReactElement(\n    type,\n    key,\n    ref,\n    self,\n    source,\n    ReactCurrentOwner.current,\n    props,\n  );\n}\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\nexport function createFactory(type) {\n  const factory = createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook: remove it\n  factory.type = type;\n  return factory;\n}\n\nexport function cloneAndReplaceKey(oldElement, newKey) {\n  const newElement = ReactElement(\n    oldElement.type,\n    newKey,\n    oldElement.ref,\n    oldElement._self,\n    oldElement._source,\n    oldElement._owner,\n    oldElement.props,\n  );\n\n  return newElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nexport function cloneElement(element, config, children) {\n  invariant(\n    !(element === null || element === undefined),\n    'React.cloneElement(...): The argument must be a React element, but you passed %s.',\n    element,\n  );\n\n  let propName;\n\n  // Original props are copied\n  const props = Object.assign({}, element.props);\n\n  // Reserved names are extracted\n  let key = element.key;\n  let ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  const self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  const source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  let owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    let defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (\n        hasOwnProperty.call(config, propName) &&\n        !RESERVED_PROPS.hasOwnProperty(propName)\n      ) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  const childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    const childArray = Array(childrenLength);\n    for (let i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\nexport function isValidElement(object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport invariant from 'shared/invariant';\nimport warning from 'shared/warning';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_PORTAL_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\n\nconst SEPARATOR = '.';\nconst SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key) {\n  const escapeRegex = /[=:]/g;\n  const escaperLookup = {\n    '=': '=0',\n    ':': '=2',\n  };\n  const escapedString = ('' + key).replace(escapeRegex, function(match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nlet didWarnAboutMaps = false;\n\nconst userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nconst POOL_SIZE = 10;\nconst traverseContextPool = [];\nfunction getPooledTraverseContext(\n  mapResult,\n  keyPrefix,\n  mapFunction,\n  mapContext,\n) {\n  if (traverseContextPool.length) {\n    const traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0,\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(\n  children,\n  nameSoFar,\n  callback,\n  traverseContext,\n) {\n  const type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  let invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    callback(\n      traverseContext,\n      children,\n      // If it's the only child, treat the name as if it was wrapped in an array\n      // so that it's consistent if the number of children grows.\n      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,\n    );\n    return 1;\n  }\n\n  let child;\n  let nextName;\n  let subtreeCount = 0; // Count of children found in the current subtree.\n  const nextNamePrefix =\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (let i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(\n        child,\n        nextName,\n        callback,\n        traverseContext,\n      );\n    }\n  } else {\n    const iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      if (__DEV__) {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          warning(\n            didWarnAboutMaps,\n            'Using Maps as children is unsupported and will likely yield ' +\n              'unexpected results. Convert it to a sequence/iterable of keyed ' +\n              'ReactElements instead.',\n          );\n          didWarnAboutMaps = true;\n        }\n      }\n\n      const iterator = iteratorFn.call(children);\n      let step;\n      let ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(\n          child,\n          nextName,\n          callback,\n          traverseContext,\n        );\n      }\n    } else if (type === 'object') {\n      let addendum = '';\n      if (__DEV__) {\n        addendum =\n          ' If you meant to render a collection of children, use an array ' +\n          'instead.' +\n          ReactDebugCurrentFrame.getStackAddendum();\n      }\n      const childrenString = '' + children;\n      invariant(\n        false,\n        'Objects are not valid as a React child (found: %s).%s',\n        childrenString === '[object Object]'\n          ? 'object with keys {' + Object.keys(children).join(', ') + '}'\n          : childrenString,\n        addendum,\n      );\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (\n    typeof component === 'object' &&\n    component !== null &&\n    component.key != null\n  ) {\n    // Explicit key\n    return escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  const {func, context} = bookKeeping;\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  const traverseContext = getPooledTraverseContext(\n    null,\n    null,\n    forEachFunc,\n    forEachContext,\n  );\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  const {result, keyPrefix, func, context} = bookKeeping;\n\n  let mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, c => c);\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(\n        mappedChild,\n        // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        keyPrefix +\n          (mappedChild.key && (!child || child.key !== mappedChild.key)\n            ? escapeUserProvidedKey(mappedChild.key) + '/'\n            : '') +\n          childKey,\n      );\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  let escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  const traverseContext = getPooledTraverseContext(\n    array,\n    escapedPrefix,\n    func,\n    context,\n  );\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  const result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children) {\n  return traverseAllChildren(children, () => null, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\nfunction toArray(children) {\n  const result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, child => child);\n  return result;\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  invariant(\n    isValidElement(children),\n    'React.Children.only expected to receive a single React element child.',\n  );\n  return children;\n}\n\nexport {\n  forEachChildren as forEach,\n  mapChildren as map,\n  countChildren as count,\n  onlyChild as only,\n  toArray,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {\n  REACT_CONCURRENT_MODE_TYPE,\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nexport default function isValidElementType(type: mixed) {\n  return (\n    typeof type === 'string' ||\n    typeof type === 'function' ||\n    // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n    type === REACT_FRAGMENT_TYPE ||\n    type === REACT_CONCURRENT_MODE_TYPE ||\n    type === REACT_PROFILER_TYPE ||\n    type === REACT_STRICT_MODE_TYPE ||\n    type === REACT_SUSPENSE_TYPE ||\n    (typeof type === 'object' &&\n      type !== null &&\n      (type.$$typeof === REACT_LAZY_TYPE ||\n        type.$$typeof === REACT_MEMO_TYPE ||\n        type.$$typeof === REACT_PROVIDER_TYPE ||\n        type.$$typeof === REACT_CONTEXT_TYPE ||\n        type.$$typeof === REACT_FORWARD_REF_TYPE))\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport invariant from 'shared/invariant';\nimport warning from 'shared/warning';\n\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\n\nfunction resolveDispatcher() {\n  const dispatcher = ReactCurrentDispatcher.current;\n  invariant(\n    dispatcher !== null,\n    'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n      ' one of the following reasons:\\n' +\n      '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n      '2. You might be breaking the Rules of Hooks\\n' +\n      '3. You might have more than one copy of React in the same app\\n' +\n      'See https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.',\n  );\n  return dispatcher;\n}\n\nexport function useContext<T>(\n  Context: ReactContext<T>,\n  unstable_observedBits: number | boolean | void,\n) {\n  const dispatcher = resolveDispatcher();\n  if (__DEV__) {\n    warning(\n      unstable_observedBits === undefined,\n      'useContext() second argument is reserved for future ' +\n        'use in React. Passing it is not supported. ' +\n        'You passed: %s.%s',\n      unstable_observedBits,\n      typeof unstable_observedBits === 'number' && Array.isArray(arguments[2])\n        ? '\\n\\nDid you call array.map(useContext)? ' +\n          'Calling Hooks inside a loop is not supported. ' +\n          'Learn more at https://fb.me/rules-of-hooks'\n        : '',\n    );\n\n    // TODO: add a more generic warning for invalid values.\n    if ((Context: any)._context !== undefined) {\n      const realContext = (Context: any)._context;\n      // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n      if (realContext.Consumer === Context) {\n        warning(\n          false,\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\n        );\n      } else if (realContext.Provider === Context) {\n        warning(\n          false,\n          'Calling useContext(Context.Provider) is not supported. ' +\n            'Did you mean to call useContext(Context) instead?',\n        );\n      }\n    }\n  }\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\n\nexport function useState<S>(initialState: (() => S) | S) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\n\nexport function useReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\n\nexport function useRef<T>(initialValue: T): {current: T} {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\n\nexport function useEffect(\n  create: () => (() => void) | void,\n  inputs: Array<mixed> | void | null,\n) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, inputs);\n}\n\nexport function useLayoutEffect(\n  create: () => (() => void) | void,\n  inputs: Array<mixed> | void | null,\n) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, inputs);\n}\n\nexport function useCallback(\n  callback: () => mixed,\n  inputs: Array<mixed> | void | null,\n) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, inputs);\n}\n\nexport function useMemo(\n  create: () => mixed,\n  inputs: Array<mixed> | void | null,\n) {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, inputs);\n}\n\nexport function useImperativeHandle<T>(\n  ref: {current: T | null} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  inputs: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, inputs);\n}\n\nexport function useDebugValue(value: any, formatterFn: ?(value: any) => any) {\n  if (__DEV__) {\n    const dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\nimport lowPriorityWarning from 'shared/lowPriorityWarning';\nimport isValidElementType from 'shared/isValidElementType';\nimport getComponentName from 'shared/getComponentName';\nimport {\n  getIteratorFn,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_ELEMENT_TYPE,\n} from 'shared/ReactSymbols';\nimport checkPropTypes from 'prop-types/checkPropTypes';\nimport warning from 'shared/warning';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nimport ReactCurrentOwner from './ReactCurrentOwner';\nimport {isValidElement, createElement, cloneElement} from './ReactElement';\nimport ReactDebugCurrentFrame, {\n  setCurrentlyValidatingElement,\n} from './ReactDebugCurrentFrame';\n\nlet propTypesMisspellWarningShown;\n\nif (__DEV__) {\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    const name = getComponentName(ReactCurrentOwner.current.type);\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(elementProps) {\n  if (\n    elementProps !== null &&\n    elementProps !== undefined &&\n    elementProps.__source !== undefined\n  ) {\n    const source = elementProps.__source;\n    const fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    const lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nconst ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  let info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    const parentName =\n      typeof parentType === 'string'\n        ? parentType\n        : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\n    }\n  }\n  return info;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  let childOwner = '';\n  if (\n    element &&\n    element._owner &&\n    element._owner !== ReactCurrentOwner.current\n  ) {\n    // Give the component that originally created this child.\n    childOwner = ` It was passed a child from ${getComponentName(\n      element._owner.type,\n    )}.`;\n  }\n\n  setCurrentlyValidatingElement(element);\n  if (__DEV__) {\n    warning(\n      false,\n      'Each child in a list should have a unique \"key\" prop.' +\n        '%s%s See https://fb.me/react-warning-keys for more information.',\n      currentComponentErrorInfo,\n      childOwner,\n    );\n  }\n  setCurrentlyValidatingElement(null);\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (let i = 0; i < node.length; i++) {\n      const child = node[i];\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    const iteratorFn = getIteratorFn(node);\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        const iterator = iteratorFn.call(node);\n        let step;\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  const type = element.type;\n  if (type === null || type === undefined || typeof type === 'string') {\n    return;\n  }\n  const name = getComponentName(type);\n  let propTypes;\n  if (typeof type === 'function') {\n    propTypes = type.propTypes;\n  } else if (\n    typeof type === 'object' &&\n    (type.$$typeof === REACT_FORWARD_REF_TYPE ||\n      // Note: Memo only checks outer props here.\n      // Inner props are checked in the reconciler.\n      type.$$typeof === REACT_MEMO_TYPE)\n  ) {\n    propTypes = type.propTypes;\n  } else {\n    return;\n  }\n  if (propTypes) {\n    setCurrentlyValidatingElement(element);\n    checkPropTypes(\n      propTypes,\n      element.props,\n      'prop',\n      name,\n      ReactDebugCurrentFrame.getStackAddendum,\n    );\n    setCurrentlyValidatingElement(null);\n  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n    propTypesMisspellWarningShown = true;\n    warningWithoutStack(\n      false,\n      'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?',\n      name || 'Unknown',\n    );\n  }\n  if (typeof type.getDefaultProps === 'function') {\n    warningWithoutStack(\n      type.getDefaultProps.isReactClassApproved,\n      'getDefaultProps is only used on classic React.createClass ' +\n        'definitions. Use a static property named `defaultProps` instead.',\n    );\n  }\n}\n\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\nfunction validateFragmentProps(fragment) {\n  setCurrentlyValidatingElement(fragment);\n\n  const keys = Object.keys(fragment.props);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (key !== 'children' && key !== 'key') {\n      warning(\n        false,\n        'Invalid prop `%s` supplied to `React.Fragment`. ' +\n          'React.Fragment can only have `key` and `children` props.',\n        key,\n      );\n      break;\n    }\n  }\n\n  if (fragment.ref !== null) {\n    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');\n  }\n\n  setCurrentlyValidatingElement(null);\n}\n\nexport function createElementWithValidation(type, props, children) {\n  const validType = isValidElementType(type);\n\n  // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n  if (!validType) {\n    let info = '';\n    if (\n      type === undefined ||\n      (typeof type === 'object' &&\n        type !== null &&\n        Object.keys(type).length === 0)\n    ) {\n      info +=\n        ' You likely forgot to export your component from the file ' +\n        \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    const sourceInfo = getSourceInfoErrorAddendum(props);\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    let typeString;\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = `<${getComponentName(type.type) || 'Unknown'} />`;\n      info =\n        ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    warning(\n      false,\n      'React.createElement: type is invalid -- expected a string (for ' +\n        'built-in components) or a class/function (for composite ' +\n        'components) but got: %s.%s',\n      typeString,\n      info,\n    );\n  }\n\n  const element = createElement.apply(this, arguments);\n\n  // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n  if (element == null) {\n    return element;\n  }\n\n  // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n  if (validType) {\n    for (let i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\n\nexport function createFactoryWithValidation(type) {\n  const validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n  // Legacy hook: remove it\n  if (__DEV__) {\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function() {\n        lowPriorityWarning(\n          false,\n          'Factory.type is deprecated. Access the class directly ' +\n            'before passing it to createFactory.',\n        );\n        Object.defineProperty(this, 'type', {\n          value: type,\n        });\n        return type;\n      },\n    });\n  }\n\n  return validatedFactory;\n}\n\nexport function cloneElementWithValidation(element, props, children) {\n  const newElement = cloneElement.apply(this, arguments);\n  for (let i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n  validatePropTypes(newElement);\n  return newElement;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactVersion from 'shared/ReactVersion';\nimport {\n  REACT_CONCURRENT_MODE_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {Component, PureComponent} from './ReactBaseClasses';\nimport {createRef} from './ReactCreateRef';\nimport {forEach, map, count, toArray, only} from './ReactChildren';\nimport {\n  createElement,\n  createFactory,\n  cloneElement,\n  isValidElement,\n} from './ReactElement';\nimport {createContext} from './ReactContext';\nimport {lazy} from './ReactLazy';\nimport forwardRef from './forwardRef';\nimport memo from './memo';\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useDebugValue,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from './ReactHooks';\nimport {\n  createElementWithValidation,\n  createFactoryWithValidation,\n  cloneElementWithValidation,\n} from './ReactElementValidator';\nimport ReactSharedInternals from './ReactSharedInternals';\nimport {enableStableConcurrentModeAPIs} from 'shared/ReactFeatureFlags';\n\nconst React = {\n  Children: {\n    map,\n    forEach,\n    count,\n    toArray,\n    only,\n  },\n\n  createRef,\n  Component,\n  PureComponent,\n\n  createContext,\n  forwardRef,\n  lazy,\n  memo,\n\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useDebugValue,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n\n  Fragment: REACT_FRAGMENT_TYPE,\n  StrictMode: REACT_STRICT_MODE_TYPE,\n  Suspense: REACT_SUSPENSE_TYPE,\n\n  createElement: __DEV__ ? createElementWithValidation : createElement,\n  cloneElement: __DEV__ ? cloneElementWithValidation : cloneElement,\n  createFactory: __DEV__ ? createFactoryWithValidation : createFactory,\n  isValidElement: isValidElement,\n\n  version: ReactVersion,\n\n  unstable_ConcurrentMode: REACT_CONCURRENT_MODE_TYPE,\n  unstable_Profiler: REACT_PROFILER_TYPE,\n\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals,\n};\n\n// Note: some APIs are added with feature flags.\n// Make sure that stable builds for open source\n// don't modify the React object to avoid deopts.\n// Also let's not expose their names in stable builds.\n\nif (enableStableConcurrentModeAPIs) {\n  React.ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n  React.Profiler = REACT_PROFILER_TYPE;\n  React.unstable_ConcurrentMode = undefined;\n  React.unstable_Profiler = undefined;\n}\n\nexport default React;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {RefObject} from 'shared/ReactTypes';\n\n// an immutable object with a single mutable value\nexport function createRef(): RefObject {\n  const refObject = {\n    current: null,\n  };\n  if (__DEV__) {\n    Object.seal(refObject);\n  }\n  return refObject;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {REACT_PROVIDER_TYPE, REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\n\nimport type {ReactContext} from 'shared/ReactTypes';\n\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport warning from 'shared/warning';\n\nexport function createContext<T>(\n  defaultValue: T,\n  calculateChangedBits: ?(a: T, b: T) => number,\n): ReactContext<T> {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    if (__DEV__) {\n      warningWithoutStack(\n        calculateChangedBits === null ||\n          typeof calculateChangedBits === 'function',\n        'createContext: Expected the optional second argument to be a ' +\n          'function. Instead received: %s',\n        calculateChangedBits,\n      );\n    }\n  }\n\n  const context: ReactContext<T> = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: (null: any),\n    Consumer: (null: any),\n  };\n\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context,\n  };\n\n  let hasWarnedAboutUsingNestedContextConsumers = false;\n  let hasWarnedAboutUsingConsumerProvider = false;\n\n  if (__DEV__) {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    const Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n      _calculateChangedBits: context._calculateChangedBits,\n    };\n    // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get() {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n            warning(\n              false,\n              'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' +\n                'a future major release. Did you mean to render <Context.Provider> instead?',\n            );\n          }\n          return context.Provider;\n        },\n        set(_Provider) {\n          context.Provider = _Provider;\n        },\n      },\n      _currentValue: {\n        get() {\n          return context._currentValue;\n        },\n        set(_currentValue) {\n          context._currentValue = _currentValue;\n        },\n      },\n      _currentValue2: {\n        get() {\n          return context._currentValue2;\n        },\n        set(_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        },\n      },\n      _threadCount: {\n        get() {\n          return context._threadCount;\n        },\n        set(_threadCount) {\n          context._threadCount = _threadCount;\n        },\n      },\n      Consumer: {\n        get() {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n            warning(\n              false,\n              'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' +\n                'a future major release. Did you mean to render <Context.Consumer> instead?',\n            );\n          }\n          return context.Consumer;\n        },\n      },\n    });\n    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n    context.Consumer = Consumer;\n  } else {\n    context.Consumer = context;\n  }\n\n  if (__DEV__) {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nexport default function forwardRef<Props, ElementType: React$ElementType>(\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\n) {\n  if (__DEV__) {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      warningWithoutStack(\n        false,\n        'forwardRef requires a render function but received a `memo` ' +\n          'component. Instead of forwardRef(memo(...)), use ' +\n          'memo(forwardRef(...)).',\n      );\n    } else if (typeof render !== 'function') {\n      warningWithoutStack(\n        false,\n        'forwardRef requires a render function but was given %s.',\n        render === null ? 'null' : typeof render,\n      );\n    } else {\n      warningWithoutStack(\n        // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object\n        render.length === 0 || render.length === 2,\n        'forwardRef render functions accept exactly two parameters: props and ref. %s',\n        render.length === 1\n          ? 'Did you forget to use the ref parameter?'\n          : 'Any additional parameter will be undefined.',\n      );\n    }\n\n    if (render != null) {\n      warningWithoutStack(\n        render.defaultProps == null && render.propTypes == null,\n        'forwardRef render functions do not support propTypes or defaultProps. ' +\n          'Did you accidentally pass a React component?',\n      );\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {LazyComponent, Thenable} from 'shared/ReactLazyComponent';\n\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\nimport warning from 'shared/warning';\n\nexport function lazy<T, R>(ctor: () => Thenable<T, R>): LazyComponent<T> {\n  let lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _ctor: ctor,\n    // React uses these fields to store the result.\n    _status: -1,\n    _result: null,\n  };\n\n  if (__DEV__) {\n    // In production, this would just set it on the object.\n    let defaultProps;\n    let propTypes;\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get() {\n          return defaultProps;\n        },\n        set(newDefaultProps) {\n          warning(\n            false,\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\n              'a lazy component import. Either specify them where the component ' +\n              'is defined, or create a wrapping component around it.',\n          );\n          defaultProps = newDefaultProps;\n          // Match production behavior more closely:\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true,\n          });\n        },\n      },\n      propTypes: {\n        configurable: true,\n        get() {\n          return propTypes;\n        },\n        set(newPropTypes) {\n          warning(\n            false,\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\n              'a lazy component import. Either specify them where the component ' +\n              'is defined, or create a wrapping component around it.',\n          );\n          propTypes = newPropTypes;\n          // Match production behavior more closely:\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true,\n          });\n        },\n      },\n    });\n  }\n\n  return lazyType;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nimport isValidElementType from 'shared/isValidElementType';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nexport default function memo<Props>(\n  type: React$ElementType,\n  compare?: (oldProps: Props, newProps: Props) => boolean,\n) {\n  if (__DEV__) {\n    if (!isValidElementType(type)) {\n      warningWithoutStack(\n        false,\n        'memo: The first argument must be a component. Instead ' +\n          'received: %s',\n        type === null ? 'null' : typeof type,\n      );\n    }\n  }\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type,\n    compare: compare === undefined ? null : compare,\n  };\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      11\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}